/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSvcPermission } from './UserSvcPermission';
import {
    UserSvcPermissionFromJSON,
    UserSvcPermissionFromJSONTyped,
    UserSvcPermissionToJSON,
    UserSvcPermissionToJSONTyped,
} from './UserSvcPermission';

/**
 * 
 * @export
 * @interface UserSvcSavePermissionsResponse
 */
export interface UserSvcSavePermissionsResponse {
    /**
     * 
     * @type {Array<UserSvcPermission>}
     * @memberof UserSvcSavePermissionsResponse
     */
    permissions?: Array<UserSvcPermission>;
}

/**
 * Check if a given object implements the UserSvcSavePermissionsResponse interface.
 */
export function instanceOfUserSvcSavePermissionsResponse(value: object): value is UserSvcSavePermissionsResponse {
    return true;
}

export function UserSvcSavePermissionsResponseFromJSON(json: any): UserSvcSavePermissionsResponse {
    return UserSvcSavePermissionsResponseFromJSONTyped(json, false);
}

export function UserSvcSavePermissionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcSavePermissionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(UserSvcPermissionFromJSON)),
    };
}

export function UserSvcSavePermissionsResponseToJSON(json: any): UserSvcSavePermissionsResponse {
    return UserSvcSavePermissionsResponseToJSONTyped(json, false);
}

export function UserSvcSavePermissionsResponseToJSONTyped(value?: UserSvcSavePermissionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(UserSvcPermissionToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSvcUserInput } from './UserSvcUserInput';
import {
    UserSvcUserInputFromJSON,
    UserSvcUserInputFromJSONTyped,
    UserSvcUserInputToJSON,
    UserSvcUserInputToJSONTyped,
} from './UserSvcUserInput';
import type { UserSvcContact } from './UserSvcContact';
import {
    UserSvcContactFromJSON,
    UserSvcContactFromJSONTyped,
    UserSvcContactToJSON,
    UserSvcContactToJSONTyped,
} from './UserSvcContact';

/**
 * 
 * @export
 * @interface UserSvcCreateUserRequest
 */
export interface UserSvcCreateUserRequest {
    /**
     * 
     * @type {string}
     * @memberof UserSvcCreateUserRequest
     */
    appHost?: string;
    /**
     * 
     * @type {Array<UserSvcContact>}
     * @memberof UserSvcCreateUserRequest
     */
    contacts?: Array<UserSvcContact>;
    /**
     * 
     * @type {string}
     * @memberof UserSvcCreateUserRequest
     */
    password?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserSvcCreateUserRequest
     */
    roleIds?: Array<string>;
    /**
     * 
     * @type {UserSvcUserInput}
     * @memberof UserSvcCreateUserRequest
     */
    user?: UserSvcUserInput;
}

/**
 * Check if a given object implements the UserSvcCreateUserRequest interface.
 */
export function instanceOfUserSvcCreateUserRequest(value: object): value is UserSvcCreateUserRequest {
    return true;
}

export function UserSvcCreateUserRequestFromJSON(json: any): UserSvcCreateUserRequest {
    return UserSvcCreateUserRequestFromJSONTyped(json, false);
}

export function UserSvcCreateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcCreateUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'appHost': json['appHost'] == null ? undefined : json['appHost'],
        'contacts': json['contacts'] == null ? undefined : ((json['contacts'] as Array<any>).map(UserSvcContactFromJSON)),
        'password': json['password'] == null ? undefined : json['password'],
        'roleIds': json['roleIds'] == null ? undefined : json['roleIds'],
        'user': json['user'] == null ? undefined : UserSvcUserInputFromJSON(json['user']),
    };
}

export function UserSvcCreateUserRequestToJSON(json: any): UserSvcCreateUserRequest {
    return UserSvcCreateUserRequestToJSONTyped(json, false);
}

export function UserSvcCreateUserRequestToJSONTyped(value?: UserSvcCreateUserRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'appHost': value['appHost'],
        'contacts': value['contacts'] == null ? undefined : ((value['contacts'] as Array<any>).map(UserSvcContactToJSON)),
        'password': value['password'],
        'roleIds': value['roleIds'],
        'user': UserSvcUserInputToJSON(value['user']),
    };
}


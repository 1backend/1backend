/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.3.0-rc.33
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailSvcAttachment
 */
export interface EmailSvcAttachment {
    /**
     * Base64-encoded file content. Use this for small files.
     * Required for inline attachments (i.e., those not using File Svc, see FileId).
     * @type {string}
     * @memberof EmailSvcAttachment
     */
    content?: string;
    /**
     * MIME type of the file (e.g., "application/pdf", "image/png")
     * Required for inline attachments (i.e., those not using File Svc, see FileId).
     * @type {string}
     * @memberof EmailSvcAttachment
     */
    contentType: string;
    /**
     * A File Svc file ID. Requires the file to be uploaded separately.
     * Recommended for mid to large-sized files.
     * If this field is specified, all other fields are optional.
     * @type {string}
     * @memberof EmailSvcAttachment
     */
    fileId?: string;
    /**
     * File name for the attachment.
     * Required for inline attachments (i.e., those not using File Svc, see FileId).
     * @type {string}
     * @memberof EmailSvcAttachment
     */
    filename: string;
}

/**
 * Check if a given object implements the EmailSvcAttachment interface.
 */
export function instanceOfEmailSvcAttachment(value: object): value is EmailSvcAttachment {
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('filename' in value) || value['filename'] === undefined) return false;
    return true;
}

export function EmailSvcAttachmentFromJSON(json: any): EmailSvcAttachment {
    return EmailSvcAttachmentFromJSONTyped(json, false);
}

export function EmailSvcAttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailSvcAttachment {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : json['content'],
        'contentType': json['contentType'],
        'fileId': json['fileId'] == null ? undefined : json['fileId'],
        'filename': json['filename'],
    };
}

export function EmailSvcAttachmentToJSON(json: any): EmailSvcAttachment {
    return EmailSvcAttachmentToJSONTyped(json, false);
}

export function EmailSvcAttachmentToJSONTyped(value?: EmailSvcAttachment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'contentType': value['contentType'],
        'fileId': value['fileId'],
        'filename': value['filename'],
    };
}


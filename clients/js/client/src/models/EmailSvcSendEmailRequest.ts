/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.3.0-rc.30
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailSvcAttachment } from './EmailSvcAttachment';
import {
    EmailSvcAttachmentFromJSON,
    EmailSvcAttachmentFromJSONTyped,
    EmailSvcAttachmentToJSON,
    EmailSvcAttachmentToJSONTyped,
} from './EmailSvcAttachment';

/**
 * 
 * @export
 * @interface EmailSvcSendEmailRequest
 */
export interface EmailSvcSendEmailRequest {
    /**
     * List of file attachments (optional)
     * @type {Array<EmailSvcAttachment>}
     * @memberof EmailSvcSendEmailRequest
     */
    attachments?: Array<EmailSvcAttachment>;
    /**
     * List of BCC recipient email addresses (optional)
     * @type {Array<string>}
     * @memberof EmailSvcSendEmailRequest
     */
    bcc?: Array<string>;
    /**
     * Email body content (plain text or HTML)
     * @type {string}
     * @memberof EmailSvcSendEmailRequest
     */
    body: string;
    /**
     * List of CC recipient email addresses (optional)
     * @type {Array<string>}
     * @memberof EmailSvcSendEmailRequest
     */
    cc?: Array<string>;
    /**
     * Content type: "text/plain" or "text/html"
     * @type {string}
     * @memberof EmailSvcSendEmailRequest
     */
    contentType: string;
    /**
     * Unique identifier
     * @type {string}
     * @memberof EmailSvcSendEmailRequest
     */
    id: string;
    /**
     * Email subject line
     * @type {string}
     * @memberof EmailSvcSendEmailRequest
     */
    subject: string;
    /**
     * List of recipient email addresses
     * @type {Array<string>}
     * @memberof EmailSvcSendEmailRequest
     */
    to: Array<string>;
}

/**
 * Check if a given object implements the EmailSvcSendEmailRequest interface.
 */
export function instanceOfEmailSvcSendEmailRequest(value: object): value is EmailSvcSendEmailRequest {
    if (!('body' in value) || value['body'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('subject' in value) || value['subject'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    return true;
}

export function EmailSvcSendEmailRequestFromJSON(json: any): EmailSvcSendEmailRequest {
    return EmailSvcSendEmailRequestFromJSONTyped(json, false);
}

export function EmailSvcSendEmailRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailSvcSendEmailRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'attachments': json['attachments'] == null ? undefined : ((json['attachments'] as Array<any>).map(EmailSvcAttachmentFromJSON)),
        'bcc': json['bcc'] == null ? undefined : json['bcc'],
        'body': json['body'],
        'cc': json['cc'] == null ? undefined : json['cc'],
        'contentType': json['contentType'],
        'id': json['id'],
        'subject': json['subject'],
        'to': json['to'],
    };
}

export function EmailSvcSendEmailRequestToJSON(json: any): EmailSvcSendEmailRequest {
    return EmailSvcSendEmailRequestToJSONTyped(json, false);
}

export function EmailSvcSendEmailRequestToJSONTyped(value?: EmailSvcSendEmailRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'attachments': value['attachments'] == null ? undefined : ((value['attachments'] as Array<any>).map(EmailSvcAttachmentToJSON)),
        'bcc': value['bcc'],
        'body': value['body'],
        'cc': value['cc'],
        'contentType': value['contentType'],
        'id': value['id'],
        'subject': value['subject'],
        'to': value['to'],
    };
}


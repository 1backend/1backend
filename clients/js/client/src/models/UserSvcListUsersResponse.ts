/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSvcUserRecord } from './UserSvcUserRecord';
import {
    UserSvcUserRecordFromJSON,
    UserSvcUserRecordFromJSONTyped,
    UserSvcUserRecordToJSON,
    UserSvcUserRecordToJSONTyped,
} from './UserSvcUserRecord';

/**
 * 
 * @export
 * @interface UserSvcListUsersResponse
 */
export interface UserSvcListUsersResponse {
    /**
     * 
     * @type {string}
     * @memberof UserSvcListUsersResponse
     */
    after?: string;
    /**
     * 
     * @type {number}
     * @memberof UserSvcListUsersResponse
     */
    count?: number;
    /**
     * 
     * @type {Array<UserSvcUserRecord>}
     * @memberof UserSvcListUsersResponse
     */
    users?: Array<UserSvcUserRecord>;
}

/**
 * Check if a given object implements the UserSvcListUsersResponse interface.
 */
export function instanceOfUserSvcListUsersResponse(value: object): value is UserSvcListUsersResponse {
    return true;
}

export function UserSvcListUsersResponseFromJSON(json: any): UserSvcListUsersResponse {
    return UserSvcListUsersResponseFromJSONTyped(json, false);
}

export function UserSvcListUsersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcListUsersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'after': json['after'] == null ? undefined : json['after'],
        'count': json['count'] == null ? undefined : json['count'],
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(UserSvcUserRecordFromJSON)),
    };
}

export function UserSvcListUsersResponseToJSON(json: any): UserSvcListUsersResponse {
    return UserSvcListUsersResponseToJSONTyped(json, false);
}

export function UserSvcListUsersResponseToJSONTyped(value?: UserSvcListUsersResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'after': value['after'],
        'count': value['count'],
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(UserSvcUserRecordToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.4.1
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatSvcSaveThreadRequest
 */
export interface ChatSvcSaveThreadRequest {
    /**
     * 
     * @type {string}
     * @memberof ChatSvcSaveThreadRequest
     */
    id?: string;
    /**
     * Title of the thread.
     * @type {string}
     * @memberof ChatSvcSaveThreadRequest
     */
    title?: string;
    /**
     * TopicIds defines which topics the thread belongs to.
     * Topics can roughly be thought of as tags for threads.
     * @type {Array<string>}
     * @memberof ChatSvcSaveThreadRequest
     */
    topicIds?: Array<string>;
    /**
     * UserIds the ids of the users who can see this thread.
     * @type {Array<string>}
     * @memberof ChatSvcSaveThreadRequest
     */
    userIds?: Array<string>;
}

/**
 * Check if a given object implements the ChatSvcSaveThreadRequest interface.
 */
export function instanceOfChatSvcSaveThreadRequest(value: object): value is ChatSvcSaveThreadRequest {
    return true;
}

export function ChatSvcSaveThreadRequestFromJSON(json: any): ChatSvcSaveThreadRequest {
    return ChatSvcSaveThreadRequestFromJSONTyped(json, false);
}

export function ChatSvcSaveThreadRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatSvcSaveThreadRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'topicIds': json['topicIds'] == null ? undefined : json['topicIds'],
        'userIds': json['userIds'] == null ? undefined : json['userIds'],
    };
}

export function ChatSvcSaveThreadRequestToJSON(json: any): ChatSvcSaveThreadRequest {
    return ChatSvcSaveThreadRequestToJSONTyped(json, false);
}

export function ChatSvcSaveThreadRequestToJSONTyped(value?: ChatSvcSaveThreadRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'topicIds': value['topicIds'],
        'userIds': value['userIds'],
    };
}


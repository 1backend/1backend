/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.3.0-rc.34
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSvcNewInvite
 */
export interface UserSvcNewInvite {
    /**
     * ContactId is the the recipient of the invite.
     * If the user is already registered, the role is assigned immediately;
     * otherwise, it is applied upon registration.
     * @type {string}
     * @memberof UserSvcNewInvite
     */
    contactId?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcNewInvite
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcNewInvite
     */
    role: string;
    /**
     * UserId is the recipient of the invite.
     * If the user is already registered, the role is assigned immediately;
     * otherwise, it is applied upon registration.
     * @type {string}
     * @memberof UserSvcNewInvite
     */
    userId?: string;
}

/**
 * Check if a given object implements the UserSvcNewInvite interface.
 */
export function instanceOfUserSvcNewInvite(value: object): value is UserSvcNewInvite {
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function UserSvcNewInviteFromJSON(json: any): UserSvcNewInvite {
    return UserSvcNewInviteFromJSONTyped(json, false);
}

export function UserSvcNewInviteFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcNewInvite {
    if (json == null) {
        return json;
    }
    return {
        
        'contactId': json['contactId'] == null ? undefined : json['contactId'],
        'id': json['id'] == null ? undefined : json['id'],
        'role': json['role'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function UserSvcNewInviteToJSON(json: any): UserSvcNewInvite {
    return UserSvcNewInviteToJSONTyped(json, false);
}

export function UserSvcNewInviteToJSONTyped(value?: UserSvcNewInvite | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contactId': value['contactId'],
        'id': value['id'],
        'role': value['role'],
        'userId': value['userId'],
    };
}


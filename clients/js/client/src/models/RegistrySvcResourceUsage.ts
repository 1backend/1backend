/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RegistrySvcUsage } from './RegistrySvcUsage';
import {
    RegistrySvcUsageFromJSON,
    RegistrySvcUsageFromJSONTyped,
    RegistrySvcUsageToJSON,
    RegistrySvcUsageToJSONTyped,
} from './RegistrySvcUsage';

/**
 * 
 * @export
 * @interface RegistrySvcResourceUsage
 */
export interface RegistrySvcResourceUsage {
    /**
     * CPU usage metrics.
     * @type {RegistrySvcUsage}
     * @memberof RegistrySvcResourceUsage
     */
    cpu?: RegistrySvcUsage;
    /**
     * Disk usage metrics.
     * @type {RegistrySvcUsage}
     * @memberof RegistrySvcResourceUsage
     */
    disk?: RegistrySvcUsage;
    /**
     * Memory usage metrics.
     * @type {RegistrySvcUsage}
     * @memberof RegistrySvcResourceUsage
     */
    memory?: RegistrySvcUsage;
}

/**
 * Check if a given object implements the RegistrySvcResourceUsage interface.
 */
export function instanceOfRegistrySvcResourceUsage(value: object): value is RegistrySvcResourceUsage {
    return true;
}

export function RegistrySvcResourceUsageFromJSON(json: any): RegistrySvcResourceUsage {
    return RegistrySvcResourceUsageFromJSONTyped(json, false);
}

export function RegistrySvcResourceUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrySvcResourceUsage {
    if (json == null) {
        return json;
    }
    return {
        
        'cpu': json['cpu'] == null ? undefined : RegistrySvcUsageFromJSON(json['cpu']),
        'disk': json['disk'] == null ? undefined : RegistrySvcUsageFromJSON(json['disk']),
        'memory': json['memory'] == null ? undefined : RegistrySvcUsageFromJSON(json['memory']),
    };
}

export function RegistrySvcResourceUsageToJSON(json: any): RegistrySvcResourceUsage {
    return RegistrySvcResourceUsageToJSONTyped(json, false);
}

export function RegistrySvcResourceUsageToJSONTyped(value?: RegistrySvcResourceUsage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cpu': RegistrySvcUsageToJSON(value['cpu']),
        'disk': RegistrySvcUsageToJSON(value['disk']),
        'memory': RegistrySvcUsageToJSON(value['memory']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.7.3
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSvcUserRecord
 */
export interface UserSvcUserRecord {
    /**
     * 
     * @type {Array<string>}
     * @memberof UserSvcUserRecord
     */
    contactIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UserSvcUserRecord
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcUserRecord
     */
    id: string;
    /**
     * Full name of the user.
     * @type {string}
     * @memberof UserSvcUserRecord
     */
    name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserSvcUserRecord
     */
    roles?: Array<string>;
    /**
     * URL-friendly unique (inside the 1Backend platform) identifier for the `user`.
     * @type {string}
     * @memberof UserSvcUserRecord
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcUserRecord
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the UserSvcUserRecord interface.
 */
export function instanceOfUserSvcUserRecord(value: object): value is UserSvcUserRecord {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function UserSvcUserRecordFromJSON(json: any): UserSvcUserRecord {
    return UserSvcUserRecordFromJSONTyped(json, false);
}

export function UserSvcUserRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcUserRecord {
    if (json == null) {
        return json;
    }
    return {
        
        'contactIds': json['contactIds'] == null ? undefined : json['contactIds'],
        'createdAt': json['createdAt'],
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'slug': json['slug'],
        'updatedAt': json['updatedAt'],
    };
}

export function UserSvcUserRecordToJSON(json: any): UserSvcUserRecord {
    return UserSvcUserRecordToJSONTyped(json, false);
}

export function UserSvcUserRecordToJSONTyped(value?: UserSvcUserRecord | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contactIds': value['contactIds'],
        'createdAt': value['createdAt'],
        'id': value['id'],
        'name': value['name'],
        'roles': value['roles'],
        'slug': value['slug'],
        'updatedAt': value['updatedAt'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSvcOrganization } from './UserSvcOrganization';
import {
    UserSvcOrganizationFromJSON,
    UserSvcOrganizationFromJSONTyped,
    UserSvcOrganizationToJSON,
    UserSvcOrganizationToJSONTyped,
} from './UserSvcOrganization';
import type { UserSvcToken } from './UserSvcToken';
import {
    UserSvcTokenFromJSON,
    UserSvcTokenFromJSONTyped,
    UserSvcTokenToJSON,
    UserSvcTokenToJSONTyped,
} from './UserSvcToken';

/**
 * 
 * @export
 * @interface UserSvcSaveOrganizationResponse
 */
export interface UserSvcSaveOrganizationResponse {
    /**
     * 
     * @type {UserSvcOrganization}
     * @memberof UserSvcSaveOrganizationResponse
     */
    organization: UserSvcOrganization;
    /**
     * Due to the nature of JWT tokens, the token must be refreshed after
     * creating an organization, as dynamic organization roles are embedded in it.
     * @type {UserSvcToken}
     * @memberof UserSvcSaveOrganizationResponse
     */
    token: UserSvcToken;
}

/**
 * Check if a given object implements the UserSvcSaveOrganizationResponse interface.
 */
export function instanceOfUserSvcSaveOrganizationResponse(value: object): value is UserSvcSaveOrganizationResponse {
    if (!('organization' in value) || value['organization'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function UserSvcSaveOrganizationResponseFromJSON(json: any): UserSvcSaveOrganizationResponse {
    return UserSvcSaveOrganizationResponseFromJSONTyped(json, false);
}

export function UserSvcSaveOrganizationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcSaveOrganizationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'organization': UserSvcOrganizationFromJSON(json['organization']),
        'token': UserSvcTokenFromJSON(json['token']),
    };
}

export function UserSvcSaveOrganizationResponseToJSON(json: any): UserSvcSaveOrganizationResponse {
    return UserSvcSaveOrganizationResponseToJSONTyped(json, false);
}

export function UserSvcSaveOrganizationResponseToJSONTyped(value?: UserSvcSaveOrganizationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'organization': UserSvcOrganizationToJSON(value['organization']),
        'token': UserSvcTokenToJSON(value['token']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.9.4
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSvcContactInput
 */
export interface UserSvcContactInput {
    /**
     * The unique identifier, which can be a URL.
     * 
     * Example values: "joe12" (1backend username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)
     * @type {string}
     * @memberof UserSvcContactInput
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcContactInput
     */
    otpCode?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcContactInput
     */
    otpId?: string;
    /**
     * Platform of the contact (e.g., "email", "phone", "twitter")
     * @type {string}
     * @memberof UserSvcContactInput
     */
    platform: string;
}

/**
 * Check if a given object implements the UserSvcContactInput interface.
 */
export function instanceOfUserSvcContactInput(value: object): value is UserSvcContactInput {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('platform' in value) || value['platform'] === undefined) return false;
    return true;
}

export function UserSvcContactInputFromJSON(json: any): UserSvcContactInput {
    return UserSvcContactInputFromJSONTyped(json, false);
}

export function UserSvcContactInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcContactInput {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'otpCode': json['otpCode'] == null ? undefined : json['otpCode'],
        'otpId': json['otpId'] == null ? undefined : json['otpId'],
        'platform': json['platform'],
    };
}

export function UserSvcContactInputToJSON(json: any): UserSvcContactInput {
    return UserSvcContactInputToJSONTyped(json, false);
}

export function UserSvcContactInputToJSONTyped(value?: UserSvcContactInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'otpCode': value['otpCode'],
        'otpId': value['otpId'],
        'platform': value['platform'],
    };
}


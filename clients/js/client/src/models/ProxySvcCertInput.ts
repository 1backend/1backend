/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProxySvcCertInput
 */
export interface ProxySvcCertInput {
    /**
     * PEM-encoded certificate bundle
     * 
     *  -----BEGIN EC PARAMETERS-----
     *  BggqhkjOPQMBBw==
     *  -----END EC PARAMETERS-----
     *  -----BEGIN EC PRIVATE KEY-----
     *  MHcCAQEEIDC3+7pySTQl6WRBuef...
     *  -----END EC PRIVATE KEY-----
     *  -----BEGIN CERTIFICATE-----
     *  MIIBhTCCASugAwIBAgIUQYwE...
     *  -----END CERTIFICATE-----
     * @type {string}
     * @memberof ProxySvcCertInput
     */
    cert: string;
    /**
     * Id is the host which this cert is for, e.g., "example.com" or "www.example.com"
     * @type {string}
     * @memberof ProxySvcCertInput
     */
    id: string;
}

/**
 * Check if a given object implements the ProxySvcCertInput interface.
 */
export function instanceOfProxySvcCertInput(value: object): value is ProxySvcCertInput {
    if (!('cert' in value) || value['cert'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function ProxySvcCertInputFromJSON(json: any): ProxySvcCertInput {
    return ProxySvcCertInputFromJSONTyped(json, false);
}

export function ProxySvcCertInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProxySvcCertInput {
    if (json == null) {
        return json;
    }
    return {
        
        'cert': json['cert'],
        'id': json['id'],
    };
}

export function ProxySvcCertInputToJSON(json: any): ProxySvcCertInput {
    return ProxySvcCertInputToJSONTyped(json, false);
}

export function ProxySvcCertInputToJSONTyped(value?: ProxySvcCertInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cert': value['cert'],
        'id': value['id'],
    };
}


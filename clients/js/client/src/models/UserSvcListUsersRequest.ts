/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.3.0-rc.30
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DatastoreQuery } from './DatastoreQuery';
import {
    DatastoreQueryFromJSON,
    DatastoreQueryFromJSONTyped,
    DatastoreQueryToJSON,
    DatastoreQueryToJSONTyped,
} from './DatastoreQuery';

/**
 * 
 * @export
 * @interface UserSvcListUsersRequest
 */
export interface UserSvcListUsersRequest {
    /**
     * 
     * @type {string}
     * @memberof UserSvcListUsersRequest
     */
    contactId?: string;
    /**
     * This should be used sparingly or not at all. Might deprecate.
     * @type {DatastoreQuery}
     * @memberof UserSvcListUsersRequest
     */
    query?: DatastoreQuery;
    /**
     * 
     * @type {string}
     * @memberof UserSvcListUsersRequest
     */
    userId?: string;
}

/**
 * Check if a given object implements the UserSvcListUsersRequest interface.
 */
export function instanceOfUserSvcListUsersRequest(value: object): value is UserSvcListUsersRequest {
    return true;
}

export function UserSvcListUsersRequestFromJSON(json: any): UserSvcListUsersRequest {
    return UserSvcListUsersRequestFromJSONTyped(json, false);
}

export function UserSvcListUsersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcListUsersRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'contactId': json['contactId'] == null ? undefined : json['contactId'],
        'query': json['query'] == null ? undefined : DatastoreQueryFromJSON(json['query']),
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function UserSvcListUsersRequestToJSON(json: any): UserSvcListUsersRequest {
    return UserSvcListUsersRequestToJSONTyped(json, false);
}

export function UserSvcListUsersRequestToJSONTyped(value?: UserSvcListUsersRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contactId': value['contactId'],
        'query': DatastoreQueryToJSON(value['query']),
        'userId': value['userId'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.0-rc3
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DatastoreOrderBy
 */
export interface DatastoreOrderBy {
    /**
     * Desc indicates whether the sorting should be in descending order.
     * @type {boolean}
     * @memberof DatastoreOrderBy
     */
    desc?: boolean;
    /**
     * The field by which to order the results
     * @type {string}
     * @memberof DatastoreOrderBy
     */
    field?: string;
    /**
     * Defines the type of sorting to apply (numeric, text, date, etc.)
     * @type {string}
     * @memberof DatastoreOrderBy
     */
    sortingType?: string;
}

/**
 * Check if a given object implements the DatastoreOrderBy interface.
 */
export function instanceOfDatastoreOrderBy(value: object): value is DatastoreOrderBy {
    return true;
}

export function DatastoreOrderByFromJSON(json: any): DatastoreOrderBy {
    return DatastoreOrderByFromJSONTyped(json, false);
}

export function DatastoreOrderByFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatastoreOrderBy {
    if (json == null) {
        return json;
    }
    return {
        
        'desc': json['desc'] == null ? undefined : json['desc'],
        'field': json['field'] == null ? undefined : json['field'],
        'sortingType': json['sortingType'] == null ? undefined : json['sortingType'],
    };
}

export function DatastoreOrderByToJSON(json: any): DatastoreOrderBy {
    return DatastoreOrderByToJSONTyped(json, false);
}

export function DatastoreOrderByToJSONTyped(value?: DatastoreOrderBy | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'desc': value['desc'],
        'field': value['field'],
        'sortingType': value['sortingType'],
    };
}


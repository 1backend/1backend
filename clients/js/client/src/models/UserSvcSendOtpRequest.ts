/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.9.3
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSvcSendOtpRequest
 */
export interface UserSvcSendOtpRequest {
    /**
     * 
     * @type {string}
     * @memberof UserSvcSendOtpRequest
     */
    appHost: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcSendOtpRequest
     */
    contactHandle?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcSendOtpRequest
     */
    contactId: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcSendOtpRequest
     */
    contactPlatform: string;
}

/**
 * Check if a given object implements the UserSvcSendOtpRequest interface.
 */
export function instanceOfUserSvcSendOtpRequest(value: object): value is UserSvcSendOtpRequest {
    if (!('appHost' in value) || value['appHost'] === undefined) return false;
    if (!('contactId' in value) || value['contactId'] === undefined) return false;
    if (!('contactPlatform' in value) || value['contactPlatform'] === undefined) return false;
    return true;
}

export function UserSvcSendOtpRequestFromJSON(json: any): UserSvcSendOtpRequest {
    return UserSvcSendOtpRequestFromJSONTyped(json, false);
}

export function UserSvcSendOtpRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcSendOtpRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'appHost': json['appHost'],
        'contactHandle': json['contactHandle'] == null ? undefined : json['contactHandle'],
        'contactId': json['contactId'],
        'contactPlatform': json['contactPlatform'],
    };
}

export function UserSvcSendOtpRequestToJSON(json: any): UserSvcSendOtpRequest {
    return UserSvcSendOtpRequestToJSONTyped(json, false);
}

export function UserSvcSendOtpRequestToJSONTyped(value?: UserSvcSendOtpRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'appHost': value['appHost'],
        'contactHandle': value['contactHandle'],
        'contactId': value['contactId'],
        'contactPlatform': value['contactPlatform'],
    };
}


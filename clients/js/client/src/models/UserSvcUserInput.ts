/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.9.1
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSvcUserInput
 */
export interface UserSvcUserInput {
    /**
     * 
     * @type {string}
     * @memberof UserSvcUserInput
     */
    id: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof UserSvcUserInput
     */
    labels?: { [key: string]: string; };
    /**
     * Full name of the user.
     * @type {string}
     * @memberof UserSvcUserInput
     */
    name?: string;
    /**
     * URL-friendly unique (inside the 1Backend platform) identifier for the `user`.
     * @type {string}
     * @memberof UserSvcUserInput
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcUserInput
     */
    thumbnailFileId?: string;
}

/**
 * Check if a given object implements the UserSvcUserInput interface.
 */
export function instanceOfUserSvcUserInput(value: object): value is UserSvcUserInput {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    return true;
}

export function UserSvcUserInputFromJSON(json: any): UserSvcUserInput {
    return UserSvcUserInputFromJSONTyped(json, false);
}

export function UserSvcUserInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcUserInput {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'labels': json['labels'] == null ? undefined : json['labels'],
        'name': json['name'] == null ? undefined : json['name'],
        'slug': json['slug'],
        'thumbnailFileId': json['thumbnailFileId'] == null ? undefined : json['thumbnailFileId'],
    };
}

export function UserSvcUserInputToJSON(json: any): UserSvcUserInput {
    return UserSvcUserInputToJSONTyped(json, false);
}

export function UserSvcUserInputToJSONTyped(value?: UserSvcUserInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'labels': value['labels'],
        'name': value['name'],
        'slug': value['slug'],
        'thumbnailFileId': value['thumbnailFileId'],
    };
}


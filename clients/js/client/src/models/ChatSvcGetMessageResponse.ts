/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChatSvcMessage } from './ChatSvcMessage';
import {
    ChatSvcMessageFromJSON,
    ChatSvcMessageFromJSONTyped,
    ChatSvcMessageToJSON,
    ChatSvcMessageToJSONTyped,
} from './ChatSvcMessage';

/**
 * 
 * @export
 * @interface ChatSvcGetMessageResponse
 */
export interface ChatSvcGetMessageResponse {
    /**
     * 
     * @type {boolean}
     * @memberof ChatSvcGetMessageResponse
     */
    _exists?: boolean;
    /**
     * 
     * @type {ChatSvcMessage}
     * @memberof ChatSvcGetMessageResponse
     */
    message?: ChatSvcMessage;
}

/**
 * Check if a given object implements the ChatSvcGetMessageResponse interface.
 */
export function instanceOfChatSvcGetMessageResponse(value: object): value is ChatSvcGetMessageResponse {
    return true;
}

export function ChatSvcGetMessageResponseFromJSON(json: any): ChatSvcGetMessageResponse {
    return ChatSvcGetMessageResponseFromJSONTyped(json, false);
}

export function ChatSvcGetMessageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatSvcGetMessageResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '_exists': json['exists'] == null ? undefined : json['exists'],
        'message': json['message'] == null ? undefined : ChatSvcMessageFromJSON(json['message']),
    };
}

export function ChatSvcGetMessageResponseToJSON(json: any): ChatSvcGetMessageResponse {
    return ChatSvcGetMessageResponseToJSONTyped(json, false);
}

export function ChatSvcGetMessageResponseToJSONTyped(value?: ChatSvcGetMessageResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'exists': value['_exists'],
        'message': ChatSvcMessageToJSON(value['message']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSvcPermit } from './UserSvcPermit';
import {
    UserSvcPermitFromJSON,
    UserSvcPermitFromJSONTyped,
    UserSvcPermitToJSON,
    UserSvcPermitToJSONTyped,
} from './UserSvcPermit';

/**
 * 
 * @export
 * @interface UserSvcListPermitsResponse
 */
export interface UserSvcListPermitsResponse {
    /**
     * 
     * @type {Array<UserSvcPermit>}
     * @memberof UserSvcListPermitsResponse
     */
    permits?: Array<UserSvcPermit>;
}

/**
 * Check if a given object implements the UserSvcListPermitsResponse interface.
 */
export function instanceOfUserSvcListPermitsResponse(value: object): value is UserSvcListPermitsResponse {
    return true;
}

export function UserSvcListPermitsResponseFromJSON(json: any): UserSvcListPermitsResponse {
    return UserSvcListPermitsResponseFromJSONTyped(json, false);
}

export function UserSvcListPermitsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcListPermitsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'permits': json['permits'] == null ? undefined : ((json['permits'] as Array<any>).map(UserSvcPermitFromJSON)),
    };
}

export function UserSvcListPermitsResponseToJSON(json: any): UserSvcListPermitsResponse {
    return UserSvcListPermitsResponseToJSONTyped(json, false);
}

export function UserSvcListPermitsResponseToJSONTyped(value?: UserSvcListPermitsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'permits': value['permits'] == null ? undefined : ((value['permits'] as Array<any>).map(UserSvcPermitToJSON)),
    };
}


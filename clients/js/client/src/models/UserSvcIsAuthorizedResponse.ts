/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSvcUser } from './UserSvcUser';
import {
    UserSvcUserFromJSON,
    UserSvcUserFromJSONTyped,
    UserSvcUserToJSON,
    UserSvcUserToJSONTyped,
} from './UserSvcUser';

/**
 * 
 * @export
 * @interface UserSvcIsAuthorizedResponse
 */
export interface UserSvcIsAuthorizedResponse {
    /**
     * 
     * @type {boolean}
     * @memberof UserSvcIsAuthorizedResponse
     */
    authorized?: boolean;
    /**
     * 
     * @type {UserSvcUser}
     * @memberof UserSvcIsAuthorizedResponse
     */
    user?: UserSvcUser;
}

/**
 * Check if a given object implements the UserSvcIsAuthorizedResponse interface.
 */
export function instanceOfUserSvcIsAuthorizedResponse(value: object): value is UserSvcIsAuthorizedResponse {
    return true;
}

export function UserSvcIsAuthorizedResponseFromJSON(json: any): UserSvcIsAuthorizedResponse {
    return UserSvcIsAuthorizedResponseFromJSONTyped(json, false);
}

export function UserSvcIsAuthorizedResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcIsAuthorizedResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'authorized': json['authorized'] == null ? undefined : json['authorized'],
        'user': json['user'] == null ? undefined : UserSvcUserFromJSON(json['user']),
    };
}

export function UserSvcIsAuthorizedResponseToJSON(json: any): UserSvcIsAuthorizedResponse {
    return UserSvcIsAuthorizedResponseToJSONTyped(json, false);
}

export function UserSvcIsAuthorizedResponseToJSONTyped(value?: UserSvcIsAuthorizedResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'authorized': value['authorized'],
        'user': UserSvcUserToJSON(value['user']),
    };
}


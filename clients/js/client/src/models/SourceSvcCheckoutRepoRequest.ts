/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SourceSvcCheckoutRepoRequest
 */
export interface SourceSvcCheckoutRepoRequest {
    /**
     * Password or token for HTTPS auth
     * @type {string}
     * @memberof SourceSvcCheckoutRepoRequest
     */
    password?: string;
    /**
     * SSH private key (optional for SSH connection)
     * @type {string}
     * @memberof SourceSvcCheckoutRepoRequest
     */
    ssh_key?: string;
    /**
     * Password for SSH private key if encrypted (optional)
     * @type {string}
     * @memberof SourceSvcCheckoutRepoRequest
     */
    ssh_key_pwd?: string;
    /**
     * Token for HTTPS auth (optional for SSH)
     * @type {string}
     * @memberof SourceSvcCheckoutRepoRequest
     */
    token?: string;
    /**
     * Full repository URL (e.g., https://github.com/user/repo)
     * @type {string}
     * @memberof SourceSvcCheckoutRepoRequest
     */
    url?: string;
    /**
     * Username for HTTPS or SSH user (optional for SSH)
     * @type {string}
     * @memberof SourceSvcCheckoutRepoRequest
     */
    username?: string;
    /**
     * Branch, tag, or commit SHA
     * @type {string}
     * @memberof SourceSvcCheckoutRepoRequest
     */
    version?: string;
}

/**
 * Check if a given object implements the SourceSvcCheckoutRepoRequest interface.
 */
export function instanceOfSourceSvcCheckoutRepoRequest(value: object): value is SourceSvcCheckoutRepoRequest {
    return true;
}

export function SourceSvcCheckoutRepoRequestFromJSON(json: any): SourceSvcCheckoutRepoRequest {
    return SourceSvcCheckoutRepoRequestFromJSONTyped(json, false);
}

export function SourceSvcCheckoutRepoRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceSvcCheckoutRepoRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'password': json['password'] == null ? undefined : json['password'],
        'ssh_key': json['ssh_key'] == null ? undefined : json['ssh_key'],
        'ssh_key_pwd': json['ssh_key_pwd'] == null ? undefined : json['ssh_key_pwd'],
        'token': json['token'] == null ? undefined : json['token'],
        'url': json['url'] == null ? undefined : json['url'],
        'username': json['username'] == null ? undefined : json['username'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function SourceSvcCheckoutRepoRequestToJSON(json: any): SourceSvcCheckoutRepoRequest {
    return SourceSvcCheckoutRepoRequestToJSONTyped(json, false);
}

export function SourceSvcCheckoutRepoRequestToJSONTyped(value?: SourceSvcCheckoutRepoRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'password': value['password'],
        'ssh_key': value['ssh_key'],
        'ssh_key_pwd': value['ssh_key_pwd'],
        'token': value['token'],
        'url': value['url'],
        'username': value['username'],
        'version': value['version'],
    };
}


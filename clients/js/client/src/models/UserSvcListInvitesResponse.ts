/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.3.0-rc.30
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSvcInvite } from './UserSvcInvite';
import {
    UserSvcInviteFromJSON,
    UserSvcInviteFromJSONTyped,
    UserSvcInviteToJSON,
    UserSvcInviteToJSONTyped,
} from './UserSvcInvite';

/**
 * 
 * @export
 * @interface UserSvcListInvitesResponse
 */
export interface UserSvcListInvitesResponse {
    /**
     * 
     * @type {Array<UserSvcInvite>}
     * @memberof UserSvcListInvitesResponse
     */
    invites: Array<UserSvcInvite>;
}

/**
 * Check if a given object implements the UserSvcListInvitesResponse interface.
 */
export function instanceOfUserSvcListInvitesResponse(value: object): value is UserSvcListInvitesResponse {
    if (!('invites' in value) || value['invites'] === undefined) return false;
    return true;
}

export function UserSvcListInvitesResponseFromJSON(json: any): UserSvcListInvitesResponse {
    return UserSvcListInvitesResponseFromJSONTyped(json, false);
}

export function UserSvcListInvitesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcListInvitesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'invites': ((json['invites'] as Array<any>).map(UserSvcInviteFromJSON)),
    };
}

export function UserSvcListInvitesResponseToJSON(json: any): UserSvcListInvitesResponse {
    return UserSvcListInvitesResponseToJSONTyped(json, false);
}

export function UserSvcListInvitesResponseToJSONTyped(value?: UserSvcListInvitesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'invites': ((value['invites'] as Array<any>).map(UserSvcInviteToJSON)),
    };
}


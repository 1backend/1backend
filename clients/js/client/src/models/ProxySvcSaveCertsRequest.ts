/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.0-rc2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProxySvcCertInput } from './ProxySvcCertInput';
import {
    ProxySvcCertInputFromJSON,
    ProxySvcCertInputFromJSONTyped,
    ProxySvcCertInputToJSON,
    ProxySvcCertInputToJSONTyped,
} from './ProxySvcCertInput';

/**
 * 
 * @export
 * @interface ProxySvcSaveCertsRequest
 */
export interface ProxySvcSaveCertsRequest {
    /**
     * 
     * @type {Array<ProxySvcCertInput>}
     * @memberof ProxySvcSaveCertsRequest
     */
    certs?: Array<ProxySvcCertInput>;
}

/**
 * Check if a given object implements the ProxySvcSaveCertsRequest interface.
 */
export function instanceOfProxySvcSaveCertsRequest(value: object): value is ProxySvcSaveCertsRequest {
    return true;
}

export function ProxySvcSaveCertsRequestFromJSON(json: any): ProxySvcSaveCertsRequest {
    return ProxySvcSaveCertsRequestFromJSONTyped(json, false);
}

export function ProxySvcSaveCertsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProxySvcSaveCertsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'certs': json['certs'] == null ? undefined : ((json['certs'] as Array<any>).map(ProxySvcCertInputFromJSON)),
    };
}

export function ProxySvcSaveCertsRequestToJSON(json: any): ProxySvcSaveCertsRequest {
    return ProxySvcSaveCertsRequestToJSONTyped(json, false);
}

export function ProxySvcSaveCertsRequestToJSONTyped(value?: ProxySvcSaveCertsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'certs': value['certs'] == null ? undefined : ((value['certs'] as Array<any>).map(ProxySvcCertInputToJSON)),
    };
}


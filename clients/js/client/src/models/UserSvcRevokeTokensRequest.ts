/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.0-rc6
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSvcRevokeTokensRequest
 */
export interface UserSvcRevokeTokensRequest {
    /**
     * If true, all tokens for the user will be revoked.
     * @type {boolean}
     * @memberof UserSvcRevokeTokensRequest
     */
    allTokens?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserSvcRevokeTokensRequest
     */
    device?: string;
    /**
     * Only used by admins (or whoever has the `user-svc:token:revoke` permission
     * revoke tokens for other users
     * @type {string}
     * @memberof UserSvcRevokeTokensRequest
     */
    userId?: string;
}

/**
 * Check if a given object implements the UserSvcRevokeTokensRequest interface.
 */
export function instanceOfUserSvcRevokeTokensRequest(value: object): value is UserSvcRevokeTokensRequest {
    return true;
}

export function UserSvcRevokeTokensRequestFromJSON(json: any): UserSvcRevokeTokensRequest {
    return UserSvcRevokeTokensRequestFromJSONTyped(json, false);
}

export function UserSvcRevokeTokensRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcRevokeTokensRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'allTokens': json['allTokens'] == null ? undefined : json['allTokens'],
        'device': json['device'] == null ? undefined : json['device'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function UserSvcRevokeTokensRequestToJSON(json: any): UserSvcRevokeTokensRequest {
    return UserSvcRevokeTokensRequestToJSONTyped(json, false);
}

export function UserSvcRevokeTokensRequestToJSONTyped(value?: UserSvcRevokeTokensRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allTokens': value['allTokens'],
        'device': value['device'],
        'userId': value['userId'],
    };
}


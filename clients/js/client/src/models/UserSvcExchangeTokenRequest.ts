/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.1
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSvcExchangeTokenRequest
 */
export interface UserSvcExchangeTokenRequest {
    /**
     * NewApp is the app of the new token that will be returned by this endpoint.
     * @type {string}
     * @memberof UserSvcExchangeTokenRequest
     */
    newAppHost?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSvcExchangeTokenRequest
     */
    newAppId?: string;
    /**
     * NewDevice. If not provided, the device of the original token will be used.
     * @type {string}
     * @memberof UserSvcExchangeTokenRequest
     */
    newDevice?: string;
}

/**
 * Check if a given object implements the UserSvcExchangeTokenRequest interface.
 */
export function instanceOfUserSvcExchangeTokenRequest(value: object): value is UserSvcExchangeTokenRequest {
    return true;
}

export function UserSvcExchangeTokenRequestFromJSON(json: any): UserSvcExchangeTokenRequest {
    return UserSvcExchangeTokenRequestFromJSONTyped(json, false);
}

export function UserSvcExchangeTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcExchangeTokenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'newAppHost': json['newAppHost'] == null ? undefined : json['newAppHost'],
        'newAppId': json['newAppId'] == null ? undefined : json['newAppId'],
        'newDevice': json['newDevice'] == null ? undefined : json['newDevice'],
    };
}

export function UserSvcExchangeTokenRequestToJSON(json: any): UserSvcExchangeTokenRequest {
    return UserSvcExchangeTokenRequestToJSONTyped(json, false);
}

export function UserSvcExchangeTokenRequestToJSONTyped(value?: UserSvcExchangeTokenRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'newAppHost': value['newAppHost'],
        'newAppId': value['newAppId'],
        'newDevice': value['newDevice'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConfigSvcConfig } from './ConfigSvcConfig';
import {
    ConfigSvcConfigFromJSON,
    ConfigSvcConfigFromJSONTyped,
    ConfigSvcConfigToJSON,
    ConfigSvcConfigToJSONTyped,
} from './ConfigSvcConfig';

/**
 * 
 * @export
 * @interface ConfigSvcListConfigsResponse
 */
export interface ConfigSvcListConfigsResponse {
    /**
     * Configs is a map of camelcase owner slug to Config.
     * Eg.
     * {
     * 	"testUserSlug0": {
     *   "id": "testUserSlug0",
     *   "data": {
     *     "key1": "value1",
     *     "key2": "value2"
     *   }
     * 	}
     * }
     * @type {{ [key: string]: ConfigSvcConfig; }}
     * @memberof ConfigSvcListConfigsResponse
     */
    configs: { [key: string]: ConfigSvcConfig; };
}

/**
 * Check if a given object implements the ConfigSvcListConfigsResponse interface.
 */
export function instanceOfConfigSvcListConfigsResponse(value: object): value is ConfigSvcListConfigsResponse {
    if (!('configs' in value) || value['configs'] === undefined) return false;
    return true;
}

export function ConfigSvcListConfigsResponseFromJSON(json: any): ConfigSvcListConfigsResponse {
    return ConfigSvcListConfigsResponseFromJSONTyped(json, false);
}

export function ConfigSvcListConfigsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigSvcListConfigsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'configs': (mapValues(json['configs'], ConfigSvcConfigFromJSON)),
    };
}

export function ConfigSvcListConfigsResponseToJSON(json: any): ConfigSvcListConfigsResponse {
    return ConfigSvcListConfigsResponseToJSONTyped(json, false);
}

export function ConfigSvcListConfigsResponseToJSONTyped(value?: ConfigSvcListConfigsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'configs': (mapValues(value['configs'], ConfigSvcConfigToJSON)),
    };
}


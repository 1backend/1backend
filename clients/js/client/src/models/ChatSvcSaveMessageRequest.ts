/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.5.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatSvcSaveMessageRequest
 */
export interface ChatSvcSaveMessageRequest {
    /**
     * FileIds defines the file attachments the message has.
     * @type {Array<string>}
     * @memberof ChatSvcSaveMessageRequest
     */
    fileIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ChatSvcSaveMessageRequest
     */
    id?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ChatSvcSaveMessageRequest
     */
    meta?: { [key: string]: any; };
    /**
     * Text content of the message eg. "Hi, what's up?"
     * @type {string}
     * @memberof ChatSvcSaveMessageRequest
     */
    text?: string;
    /**
     * ThreadId of the message.
     * @type {string}
     * @memberof ChatSvcSaveMessageRequest
     */
    threadId?: string;
    /**
     * UserId is the id of the user who wrote the message.
     * For AI messages this field is empty.
     * @type {string}
     * @memberof ChatSvcSaveMessageRequest
     */
    userId?: string;
}

/**
 * Check if a given object implements the ChatSvcSaveMessageRequest interface.
 */
export function instanceOfChatSvcSaveMessageRequest(value: object): value is ChatSvcSaveMessageRequest {
    return true;
}

export function ChatSvcSaveMessageRequestFromJSON(json: any): ChatSvcSaveMessageRequest {
    return ChatSvcSaveMessageRequestFromJSONTyped(json, false);
}

export function ChatSvcSaveMessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatSvcSaveMessageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'fileIds': json['fileIds'] == null ? undefined : json['fileIds'],
        'id': json['id'] == null ? undefined : json['id'],
        'meta': json['meta'] == null ? undefined : json['meta'],
        'text': json['text'] == null ? undefined : json['text'],
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function ChatSvcSaveMessageRequestToJSON(json: any): ChatSvcSaveMessageRequest {
    return ChatSvcSaveMessageRequestToJSONTyped(json, false);
}

export function ChatSvcSaveMessageRequestToJSONTyped(value?: ChatSvcSaveMessageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fileIds': value['fileIds'],
        'id': value['id'],
        'meta': value['meta'],
        'text': value['text'],
        'threadId': value['threadId'],
        'userId': value['userId'],
    };
}


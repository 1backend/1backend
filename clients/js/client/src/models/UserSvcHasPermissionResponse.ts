/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.9.1
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSvcApp } from './UserSvcApp';
import {
    UserSvcAppFromJSON,
    UserSvcAppFromJSONTyped,
    UserSvcAppToJSON,
    UserSvcAppToJSONTyped,
} from './UserSvcApp';
import type { UserSvcUser } from './UserSvcUser';
import {
    UserSvcUserFromJSON,
    UserSvcUserFromJSONTyped,
    UserSvcUserToJSON,
    UserSvcUserToJSONTyped,
} from './UserSvcUser';

/**
 * 
 * @export
 * @interface UserSvcHasPermissionResponse
 */
export interface UserSvcHasPermissionResponse {
    /**
     * 
     * @type {UserSvcApp}
     * @memberof UserSvcHasPermissionResponse
     */
    app: UserSvcApp;
    /**
     * 
     * @type {string}
     * @memberof UserSvcHasPermissionResponse
     */
    appId: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserSvcHasPermissionResponse
     */
    authorized: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserSvcHasPermissionResponse
     */
    until: string;
    /**
     * 
     * @type {UserSvcUser}
     * @memberof UserSvcHasPermissionResponse
     */
    user: UserSvcUser;
}

/**
 * Check if a given object implements the UserSvcHasPermissionResponse interface.
 */
export function instanceOfUserSvcHasPermissionResponse(value: object): value is UserSvcHasPermissionResponse {
    if (!('app' in value) || value['app'] === undefined) return false;
    if (!('appId' in value) || value['appId'] === undefined) return false;
    if (!('authorized' in value) || value['authorized'] === undefined) return false;
    if (!('until' in value) || value['until'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function UserSvcHasPermissionResponseFromJSON(json: any): UserSvcHasPermissionResponse {
    return UserSvcHasPermissionResponseFromJSONTyped(json, false);
}

export function UserSvcHasPermissionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcHasPermissionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'app': UserSvcAppFromJSON(json['app']),
        'appId': json['appId'],
        'authorized': json['authorized'],
        'until': json['until'],
        'user': UserSvcUserFromJSON(json['user']),
    };
}

export function UserSvcHasPermissionResponseToJSON(json: any): UserSvcHasPermissionResponse {
    return UserSvcHasPermissionResponseToJSONTyped(json, false);
}

export function UserSvcHasPermissionResponseToJSONTyped(value?: UserSvcHasPermissionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'app': UserSvcAppToJSON(value['app']),
        'appId': value['appId'],
        'authorized': value['authorized'],
        'until': value['until'],
        'user': UserSvcUserToJSON(value['user']),
    };
}


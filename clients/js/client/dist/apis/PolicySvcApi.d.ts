/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { PolicySvcCheckRequest, PolicySvcCheckResponse, PolicySvcUpsertInstanceRequest } from '../models/index';
export interface CheckRequest {
    body: PolicySvcCheckRequest;
}
export interface UpsertInstanceRequest {
    instanceId: string;
    body: PolicySvcUpsertInstanceRequest;
}
/**
 *
 */
export declare class PolicySvcApi extends runtime.BaseAPI {
    /**
     * Check records a resource access and returns if the access is allowed.
     * Check
     */
    checkRaw(requestParameters: CheckRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PolicySvcCheckResponse>>;
    /**
     * Check records a resource access and returns if the access is allowed.
     * Check
     */
    check(requestParameters: CheckRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PolicySvcCheckResponse>;
    /**
     * Allows user to upsert a new policy instance based on a template.
     * Upsert an Instance
     */
    upsertInstanceRaw(requestParameters: UpsertInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Allows user to upsert a new policy instance based on a template.
     * Upsert an Instance
     */
    upsertInstance(requestParameters: UpsertInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
}

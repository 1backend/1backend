/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { SecretSvcDecryptValueRequest, SecretSvcDecryptValueResponse, SecretSvcEncryptValueRequest, SecretSvcEncryptValueResponse, SecretSvcIsSecureResponse, SecretSvcListSecretsRequest, SecretSvcListSecretsResponse, SecretSvcRemoveSecretsRequest, SecretSvcSaveSecretsRequest } from '../models/index';
export interface DecryptValueRequest {
    body: SecretSvcDecryptValueRequest;
}
export interface EncryptValueRequest {
    body: SecretSvcEncryptValueRequest;
}
export interface ListSecretsRequest {
    body?: SecretSvcListSecretsRequest;
}
export interface RemoveSecretsRequest {
    body: SecretSvcRemoveSecretsRequest;
}
export interface SaveSecretsRequest {
    body: SecretSvcSaveSecretsRequest;
}
/**
 *
 */
export declare class SecretSvcApi extends runtime.BaseAPI {
    /**
     * Decrypt a value and return the encrypted result
     * Decrypt a Value
     */
    decryptValueRaw(requestParameters: DecryptValueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSvcDecryptValueResponse>>;
    /**
     * Decrypt a value and return the encrypted result
     * Decrypt a Value
     */
    decryptValue(requestParameters: DecryptValueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSvcDecryptValueResponse>;
    /**
     * Encrypt a value and return the encrypted result
     * Encrypt a Value
     */
    encryptValueRaw(requestParameters: EncryptValueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSvcEncryptValueResponse>>;
    /**
     * Encrypt a value and return the encrypted result
     * Encrypt a Value
     */
    encryptValue(requestParameters: EncryptValueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSvcEncryptValueResponse>;
    /**
     * Returns true if the encryption key is sufficiently secure.
     * Check Security Status
     */
    isSecureRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSvcIsSecureResponse>>;
    /**
     * Returns true if the encryption key is sufficiently secure.
     * Check Security Status
     */
    isSecure(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSvcIsSecureResponse>;
    /**
     * List secrets by key(s) if authorized.
     * List Secrets
     */
    listSecretsRaw(requestParameters: ListSecretsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SecretSvcListSecretsResponse>>;
    /**
     * List secrets by key(s) if authorized.
     * List Secrets
     */
    listSecrets(requestParameters?: ListSecretsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SecretSvcListSecretsResponse>;
    /**
     * Remove secrets if authorized to do so
     * Remove Secrets
     */
    removeSecretsRaw(requestParameters: RemoveSecretsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Remove secrets if authorized to do so
     * Remove Secrets
     */
    removeSecrets(requestParameters: RemoveSecretsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
    /**
     * Save secrets if authorized to do so
     * Save Secrets
     */
    saveSecretsRaw(requestParameters: SaveSecretsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Save secrets if authorized to do so
     * Save Secrets
     */
    saveSecrets(requestParameters: SaveSecretsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
}

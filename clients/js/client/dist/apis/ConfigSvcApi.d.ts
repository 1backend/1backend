/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.7.3
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ConfigSvcListConfigsRequest, ConfigSvcListConfigsResponse, ConfigSvcSaveConfigRequest } from '../models/index';
export interface ListConfigsRequest {
    body?: ConfigSvcListConfigsRequest;
}
export interface SaveConfigRequest {
    body: ConfigSvcSaveConfigRequest;
}
/**
 *
 */
export declare class ConfigSvcApi extends runtime.BaseAPI {
    /**
     * Retrieves the current configurations for a specified app. Since any user can save configurations, it is strongly advised that you supply a list of owners to filter on. If no app is specified, the default \"unnamed\" app is used. This is a public endpoint and does not require authentication. Configuration data is non-sensitive. For sensitive data, refer to the Secret Service.  Configurations are used to control frontend behavior, A/B testing, feature flags, and other non-sensitive settings.
     * List Configs
     */
    listConfigsRaw(requestParameters: ListConfigsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfigSvcListConfigsResponse>>;
    /**
     * Retrieves the current configurations for a specified app. Since any user can save configurations, it is strongly advised that you supply a list of owners to filter on. If no app is specified, the default \"unnamed\" app is used. This is a public endpoint and does not require authentication. Configuration data is non-sensitive. For sensitive data, refer to the Secret Service.  Configurations are used to control frontend behavior, A/B testing, feature flags, and other non-sensitive settings.
     * List Configs
     */
    listConfigs(requestParameters?: ListConfigsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfigSvcListConfigsResponse>;
    /**
     * Save the provided configuration to the server
     * Save Config
     */
    saveConfigRaw(requestParameters: SaveConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Save the provided configuration to the server
     * Save Config
     */
    saveConfig(requestParameters: SaveConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
}

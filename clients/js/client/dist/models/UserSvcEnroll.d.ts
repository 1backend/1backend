/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.3.0-rc.37
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UserSvcEnroll
 */
export interface UserSvcEnroll {
    /**
     * ContactId is the the recipient of the enroll.
     * If the user is already registered, the role is assigned immediately;
     * otherwise, it is applied upon registration.
     * @type {string}
     * @memberof UserSvcEnroll
     */
    contactId?: string;
    /**
     *
     * @type {string}
     * @memberof UserSvcEnroll
     */
    createdAt: string;
    /**
     * CreatedBy contains the ID of the user who created the Enroll.
     * @type {string}
     * @memberof UserSvcEnroll
     */
    createdBy?: string;
    /**
     *
     * @type {string}
     * @memberof UserSvcEnroll
     */
    deletedAt?: string;
    /**
     *
     * @type {string}
     * @memberof UserSvcEnroll
     */
    id: string;
    /**
     * Role specifies the role to be assigned to the ContactId.
     * Callers can only assign roles they own, identified by their service slug
     * (e.g., if "my-service" creates an enroll, the role must be "my-service:admin").
     * Dynamic organization roles can also be assigned
     * (e.g., "user-svc:org:{%orgId}:admin" or "user-svc:org:{%orgId}:user"),
     * but in this case, the caller must be an admin of the target organization.
     * @type {string}
     * @memberof UserSvcEnroll
     */
    role: string;
    /**
     *
     * @type {string}
     * @memberof UserSvcEnroll
     */
    updatedAt: string;
    /**
     * UserId is the recipient of the enroll.
     * If the user is already registered, the role is assigned immediately;
     * otherwise, it is applied upon registration.
     * @type {string}
     * @memberof UserSvcEnroll
     */
    userId?: string;
}
/**
 * Check if a given object implements the UserSvcEnroll interface.
 */
export declare function instanceOfUserSvcEnroll(value: object): value is UserSvcEnroll;
export declare function UserSvcEnrollFromJSON(json: any): UserSvcEnroll;
export declare function UserSvcEnrollFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcEnroll;
export declare function UserSvcEnrollToJSON(json: any): UserSvcEnroll;
export declare function UserSvcEnrollToJSONTyped(value?: UserSvcEnroll | null, ignoreDiscriminator?: boolean): any;

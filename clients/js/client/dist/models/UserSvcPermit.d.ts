/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UserSvcPermit
 */
export interface UserSvcPermit {
    /**
     *
     * @type {string}
     * @memberof UserSvcPermit
     */
    createdAt: string;
    /**
     *
     * @type {string}
     * @memberof UserSvcPermit
     */
    deletedAt?: string;
    /**
     *
     * @type {string}
     * @memberof UserSvcPermit
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof UserSvcPermit
     */
    permission: string;
    /**
     * Role IDs that have been permited the specified permission.
     *
     * Originally, permits were designed for slugs to facilitate service-to-service calls.
     * Due to their convenience—especially with CLI and infrastructure-as-code support—they were later extended to roles.
     * @type {Array<string>}
     * @memberof UserSvcPermit
     */
    roles?: Array<string>;
    /**
     * Slugs that have been permited the specified permission.
     * @type {Array<string>}
     * @memberof UserSvcPermit
     */
    slugs?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof UserSvcPermit
     */
    updatedAt: string;
}
/**
 * Check if a given object implements the UserSvcPermit interface.
 */
export declare function instanceOfUserSvcPermit(value: object): value is UserSvcPermit;
export declare function UserSvcPermitFromJSON(json: any): UserSvcPermit;
export declare function UserSvcPermitFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcPermit;
export declare function UserSvcPermitToJSON(json: any): UserSvcPermit;
export declare function UserSvcPermitToJSONTyped(value?: UserSvcPermit | null, ignoreDiscriminator?: boolean): any;

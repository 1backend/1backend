/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ContainerSvcKeepFromJSON, ContainerSvcKeepToJSON, } from './ContainerSvcKeep';
import { ContainerSvcAssetFromJSON, ContainerSvcAssetToJSON, } from './ContainerSvcAsset';
import { ContainerSvcCapabilitiesFromJSON, ContainerSvcCapabilitiesToJSON, } from './ContainerSvcCapabilities';
import { ContainerSvcLabelFromJSON, ContainerSvcLabelToJSON, } from './ContainerSvcLabel';
import { ContainerSvcEnvVarFromJSON, ContainerSvcEnvVarToJSON, } from './ContainerSvcEnvVar';
import { ContainerSvcPortMappingFromJSON, ContainerSvcPortMappingToJSON, } from './ContainerSvcPortMapping';
/**
 * Check if a given object implements the ContainerSvcRunContainerRequest interface.
 */
export function instanceOfContainerSvcRunContainerRequest(value) {
    if (!('image' in value) || value['image'] === undefined)
        return false;
    return true;
}
export function ContainerSvcRunContainerRequestFromJSON(json) {
    return ContainerSvcRunContainerRequestFromJSONTyped(json, false);
}
export function ContainerSvcRunContainerRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'assets': json['assets'] == null ? undefined : (json['assets'].map(ContainerSvcAssetFromJSON)),
        'capabilities': json['capabilities'] == null ? undefined : ContainerSvcCapabilitiesFromJSON(json['capabilities']),
        'envs': json['envs'] == null ? undefined : (json['envs'].map(ContainerSvcEnvVarFromJSON)),
        'hash': json['hash'] == null ? undefined : json['hash'],
        'image': json['image'],
        'keeps': json['keeps'] == null ? undefined : (json['keeps'].map(ContainerSvcKeepFromJSON)),
        'labels': json['labels'] == null ? undefined : (json['labels'].map(ContainerSvcLabelFromJSON)),
        'names': json['names'] == null ? undefined : json['names'],
        'ports': json['ports'] == null ? undefined : (json['ports'].map(ContainerSvcPortMappingFromJSON)),
    };
}
export function ContainerSvcRunContainerRequestToJSON(json) {
    return ContainerSvcRunContainerRequestToJSONTyped(json, false);
}
export function ContainerSvcRunContainerRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'assets': value['assets'] == null ? undefined : (value['assets'].map(ContainerSvcAssetToJSON)),
        'capabilities': ContainerSvcCapabilitiesToJSON(value['capabilities']),
        'envs': value['envs'] == null ? undefined : (value['envs'].map(ContainerSvcEnvVarToJSON)),
        'hash': value['hash'],
        'image': value['image'],
        'keeps': value['keeps'] == null ? undefined : (value['keeps'].map(ContainerSvcKeepToJSON)),
        'labels': value['labels'] == null ? undefined : (value['labels'].map(ContainerSvcLabelToJSON)),
        'names': value['names'],
        'ports': value['ports'] == null ? undefined : (value['ports'].map(ContainerSvcPortMappingToJSON)),
    };
}

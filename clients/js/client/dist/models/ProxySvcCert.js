/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.0-rc6
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ProxySvcCert interface.
 */
export function instanceOfProxySvcCert(value) {
    if (!('cert' in value) || value['cert'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
export function ProxySvcCertFromJSON(json) {
    return ProxySvcCertFromJSONTyped(json, false);
}
export function ProxySvcCertFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cert': json['cert'],
        'commonName': json['commonName'] == null ? undefined : json['commonName'],
        'createdAt': json['createdAt'],
        'dnsNames': json['dnsNames'] == null ? undefined : json['dnsNames'],
        'id': json['id'],
        'isCA': json['isCA'] == null ? undefined : json['isCA'],
        'issuer': json['issuer'] == null ? undefined : json['issuer'],
        'notAfter': json['notAfter'] == null ? undefined : json['notAfter'],
        'notBefore': json['notBefore'] == null ? undefined : json['notBefore'],
        'publicKeyAlgorithm': json['publicKeyAlgorithm'] == null ? undefined : json['publicKeyAlgorithm'],
        'publicKeyBitLength': json['publicKeyBitLength'] == null ? undefined : json['publicKeyBitLength'],
        'serialNumber': json['serialNumber'] == null ? undefined : json['serialNumber'],
        'signatureAlgorithm': json['signatureAlgorithm'] == null ? undefined : json['signatureAlgorithm'],
        'updatedAt': json['updatedAt'],
    };
}
export function ProxySvcCertToJSON(json) {
    return ProxySvcCertToJSONTyped(json, false);
}
export function ProxySvcCertToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cert': value['cert'],
        'commonName': value['commonName'],
        'createdAt': value['createdAt'],
        'dnsNames': value['dnsNames'],
        'id': value['id'],
        'isCA': value['isCA'],
        'issuer': value['issuer'],
        'notAfter': value['notAfter'],
        'notBefore': value['notBefore'],
        'publicKeyAlgorithm': value['publicKeyAlgorithm'],
        'publicKeyBitLength': value['publicKeyBitLength'],
        'serialNumber': value['serialNumber'],
        'signatureAlgorithm': value['signatureAlgorithm'],
        'updatedAt': value['updatedAt'],
    };
}

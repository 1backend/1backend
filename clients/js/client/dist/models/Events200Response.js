/* tslint:disable */
/* eslint-disable */
/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.0-rc2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { instanceOfChatSvcEventMessageAdded, ChatSvcEventMessageAddedFromJSONTyped, ChatSvcEventMessageAddedToJSON, } from './ChatSvcEventMessageAdded';
import { instanceOfChatSvcEventThreadAdded, ChatSvcEventThreadAddedFromJSONTyped, ChatSvcEventThreadAddedToJSON, } from './ChatSvcEventThreadAdded';
import { instanceOfChatSvcEventThreadUpdate, ChatSvcEventThreadUpdateFromJSONTyped, ChatSvcEventThreadUpdateToJSON, } from './ChatSvcEventThreadUpdate';
export function Events200ResponseFromJSON(json) {
    return Events200ResponseFromJSONTyped(json, false);
}
export function Events200ResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfChatSvcEventMessageAdded(json)) {
        return ChatSvcEventMessageAddedFromJSONTyped(json, true);
    }
    if (instanceOfChatSvcEventThreadAdded(json)) {
        return ChatSvcEventThreadAddedFromJSONTyped(json, true);
    }
    if (instanceOfChatSvcEventThreadUpdate(json)) {
        return ChatSvcEventThreadUpdateFromJSONTyped(json, true);
    }
    return {};
}
export function Events200ResponseToJSON(json) {
    return Events200ResponseToJSONTyped(json, false);
}
export function Events200ResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfChatSvcEventMessageAdded(value)) {
        return ChatSvcEventMessageAddedToJSON(value);
    }
    if (instanceOfChatSvcEventThreadAdded(value)) {
        return ChatSvcEventThreadAddedToJSON(value);
    }
    if (instanceOfChatSvcEventThreadUpdate(value)) {
        return ChatSvcEventThreadUpdateToJSON(value);
    }
    return {};
}

/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.0-rc8
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DatastoreOp } from './DatastoreOp';
/**
 *
 * @export
 * @interface DatastoreFilter
 */
export interface DatastoreFilter {
    /**
     *
     * @type {Array<string>}
     * @memberof DatastoreFilter
     */
    fields?: Array<string>;
    /**
     *
     * @type {DatastoreOp}
     * @memberof DatastoreFilter
     */
    op?: DatastoreOp;
    /**
     * SubFilters is used for operations like OR where multiple filters are combined.
     * @type {Array<DatastoreFilter>}
     * @memberof DatastoreFilter
     */
    subFilters?: Array<DatastoreFilter>;
    /**
     *
     * @type {string}
     * @memberof DatastoreFilter
     */
    valuesJson?: string;
}
/**
 * Check if a given object implements the DatastoreFilter interface.
 */
export declare function instanceOfDatastoreFilter(value: object): value is DatastoreFilter;
export declare function DatastoreFilterFromJSON(json: any): DatastoreFilter;
export declare function DatastoreFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatastoreFilter;
export declare function DatastoreFilterToJSON(json: any): DatastoreFilter;
export declare function DatastoreFilterToJSONTyped(value?: DatastoreFilter | null, ignoreDiscriminator?: boolean): any;

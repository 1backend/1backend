/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.3.0-rc.33
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UserSvcGrant
 */
export interface UserSvcGrant {
    /**
     *
     * @type {string}
     * @memberof UserSvcGrant
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof UserSvcGrant
     */
    permission: string;
    /**
     * Role IDs that have been granted the specified permission.
     *
     * Originally, grants were designed for slugs to facilitate service-to-service calls.
     * Due to their convenience—especially with CLI and infrastructure-as-code support—they were later extended to roles.
     *
     * Alternatively, permissions can be assigned to roles using UserSvc.SaveGrants.
     * Grants currently offer a more streamlined approach, though this may evolve over time.
     * @type {Array<string>}
     * @memberof UserSvcGrant
     */
    roles?: Array<string>;
    /**
     * Slugs that have been granted the specified permission.
     * @type {Array<string>}
     * @memberof UserSvcGrant
     */
    slugs?: Array<string>;
}
/**
 * Check if a given object implements the UserSvcGrant interface.
 */
export declare function instanceOfUserSvcGrant(value: object): value is UserSvcGrant;
export declare function UserSvcGrantFromJSON(json: any): UserSvcGrant;
export declare function UserSvcGrantFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSvcGrant;
export declare function UserSvcGrantToJSON(json: any): UserSvcGrant;
export declare function UserSvcGrantToJSONTyped(value?: UserSvcGrant | null, ignoreDiscriminator?: boolean): any;

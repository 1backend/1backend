/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PromptSvcParametersFromJSON, PromptSvcParametersToJSON, } from './PromptSvcParameters';
import { PromptSvcEngineParametersFromJSON, PromptSvcEngineParametersToJSON, } from './PromptSvcEngineParameters';
import { PromptSvcPromptStatusFromJSON, PromptSvcPromptStatusToJSON, } from './PromptSvcPromptStatus';
import { PromptSvcPromptTypeFromJSON, PromptSvcPromptTypeToJSON, } from './PromptSvcPromptType';
/**
 * Check if a given object implements the PromptSvcPrompt interface.
 */
export function instanceOfPromptSvcPrompt(value) {
    if (!('prompt' in value) || value['prompt'] === undefined)
        return false;
    return true;
}
export function PromptSvcPromptFromJSON(json) {
    return PromptSvcPromptFromJSONTyped(json, false);
}
export function PromptSvcPromptFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'engineParameters': json['engineParameters'] == null ? undefined : PromptSvcEngineParametersFromJSON(json['engineParameters']),
        'error': json['error'] == null ? undefined : json['error'],
        'id': json['id'] == null ? undefined : json['id'],
        'lastRun': json['lastRun'] == null ? undefined : json['lastRun'],
        'maxRetries': json['maxRetries'] == null ? undefined : json['maxRetries'],
        'modelId': json['modelId'] == null ? undefined : json['modelId'],
        'parameters': json['parameters'] == null ? undefined : PromptSvcParametersFromJSON(json['parameters']),
        'prompt': json['prompt'],
        'requestMessageId': json['requestMessageId'] == null ? undefined : json['requestMessageId'],
        'responseMessageId': json['responseMessageId'] == null ? undefined : json['responseMessageId'],
        'runCount': json['runCount'] == null ? undefined : json['runCount'],
        'status': json['status'] == null ? undefined : PromptSvcPromptStatusFromJSON(json['status']),
        'sync': json['sync'] == null ? undefined : json['sync'],
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
        'type': json['type'] == null ? undefined : PromptSvcPromptTypeFromJSON(json['type']),
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}
export function PromptSvcPromptToJSON(json) {
    return PromptSvcPromptToJSONTyped(json, false);
}
export function PromptSvcPromptToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'engineParameters': PromptSvcEngineParametersToJSON(value['engineParameters']),
        'error': value['error'],
        'id': value['id'],
        'lastRun': value['lastRun'],
        'maxRetries': value['maxRetries'],
        'modelId': value['modelId'],
        'parameters': PromptSvcParametersToJSON(value['parameters']),
        'prompt': value['prompt'],
        'requestMessageId': value['requestMessageId'],
        'responseMessageId': value['responseMessageId'],
        'runCount': value['runCount'],
        'status': PromptSvcPromptStatusToJSON(value['status']),
        'sync': value['sync'],
        'threadId': value['threadId'],
        'type': PromptSvcPromptTypeToJSON(value['type']),
        'updatedAt': value['updatedAt'],
        'userId': value['userId'],
    };
}

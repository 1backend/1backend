/**
 * 1Backend
 * AI-native microservices platform.
 *
 * The version of the OpenAPI document: 0.8.1
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ConfigSvcListConfigsRequest
 */
export interface ConfigSvcListConfigsRequest {
    /**
     *
     * @type {string}
     * @memberof ConfigSvcListConfigsRequest
     */
    appHost: string;
    /**
     * Ids are camelCased slugs of the config owners.
     * Specifying only the ids will mean all of the config will be returned
     * for that key.
     *
     * If the configs are large, consider using the `Selector` request field.
     * @type {Array<string>}
     * @memberof ConfigSvcListConfigsRequest
     */
    ids?: Array<string>;
    /**
     * Selector allows dotPath-based filtering per config owner.
     * Example:
     * {
     *   "user1": ["settings.theme", "featureFlags.enableNewUI"],
     *   "user2": ["settings.language"]
     * }
     * @type {{ [key: string]: Array<string>; }}
     * @memberof ConfigSvcListConfigsRequest
     */
    selector?: {
        [key: string]: Array<string>;
    };
}
/**
 * Check if a given object implements the ConfigSvcListConfigsRequest interface.
 */
export declare function instanceOfConfigSvcListConfigsRequest(value: object): value is ConfigSvcListConfigsRequest;
export declare function ConfigSvcListConfigsRequestFromJSON(json: any): ConfigSvcListConfigsRequest;
export declare function ConfigSvcListConfigsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigSvcListConfigsRequest;
export declare function ConfigSvcListConfigsRequestToJSON(json: any): ConfigSvcListConfigsRequest;
export declare function ConfigSvcListConfigsRequestToJSONTyped(value?: ConfigSvcListConfigsRequest | null, ignoreDiscriminator?: boolean): any;

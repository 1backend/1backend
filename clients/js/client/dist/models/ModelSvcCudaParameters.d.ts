/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ModelSvcContainer } from './ModelSvcContainer';
/**
 *
 * @export
 * @interface ModelSvcCudaParameters
 */
export interface ModelSvcCudaParameters {
    /**
     * Container configuration related to CUDA usage.
     * @type {ModelSvcContainer}
     * @memberof ModelSvcCudaParameters
     */
    container?: ModelSvcContainer;
    /**
     * Level of precision for selecting the CUDA version when resolving the container image.
     * - 2 -> Use "major.minor" (e.g., "12.2")
     * - 3 -> Use "major.minor.patch" (e.g., "12.2.0")
     * @type {number}
     * @memberof ModelSvcCudaParameters
     */
    cudaVersionPrecision?: number;
    /**
     * Default CUDA version to use (e.g., "12.2" or "12.2.0").
     * @type {string}
     * @memberof ModelSvcCudaParameters
     */
    defaultCudaVersion?: string;
    /**
     * Default cuDNN version to use alongside CUDA.
     * @type {string}
     * @memberof ModelSvcCudaParameters
     */
    defaultCudnnVersion?: string;
}
/**
 * Check if a given object implements the ModelSvcCudaParameters interface.
 */
export declare function instanceOfModelSvcCudaParameters(value: object): value is ModelSvcCudaParameters;
export declare function ModelSvcCudaParametersFromJSON(json: any): ModelSvcCudaParameters;
export declare function ModelSvcCudaParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelSvcCudaParameters;
export declare function ModelSvcCudaParametersToJSON(json: any): ModelSvcCudaParameters;
export declare function ModelSvcCudaParametersToJSONTyped(value?: ModelSvcCudaParameters | null, ignoreDiscriminator?: boolean): any;

import { __awaiter } from 'tslib';

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
const BASE_PATH = "http://localhost:58231".replace(/\/+$/, "");
class Configuration {
    constructor(configuration = {}) {
        this.configuration = configuration;
    }
    set config(configuration) {
        this.configuration = configuration;
    }
    get basePath() {
        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;
    }
    get fetchApi() {
        return this.configuration.fetchApi;
    }
    get middleware() {
        return this.configuration.middleware || [];
    }
    get queryParamsStringify() {
        return this.configuration.queryParamsStringify || querystring;
    }
    get username() {
        return this.configuration.username;
    }
    get password() {
        return this.configuration.password;
    }
    get apiKey() {
        const apiKey = this.configuration.apiKey;
        if (apiKey) {
            return typeof apiKey === 'function' ? apiKey : () => apiKey;
        }
        return undefined;
    }
    get accessToken() {
        const accessToken = this.configuration.accessToken;
        if (accessToken) {
            return typeof accessToken === 'function' ? accessToken : () => __awaiter(this, void 0, void 0, function* () { return accessToken; });
        }
        return undefined;
    }
    get headers() {
        return this.configuration.headers;
    }
    get credentials() {
        return this.configuration.credentials;
    }
}
const DefaultConfig = new Configuration();
/**
 * This is the base class for all generated API classes.
 */
class BaseAPI {
    constructor(configuration = DefaultConfig) {
        this.configuration = configuration;
        this.fetchApi = (url, init) => __awaiter(this, void 0, void 0, function* () {
            let fetchParams = { url, init };
            for (const middleware of this.middleware) {
                if (middleware.pre) {
                    fetchParams = (yield middleware.pre(Object.assign({ fetch: this.fetchApi }, fetchParams))) || fetchParams;
                }
            }
            let response = undefined;
            try {
                response = yield (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);
            }
            catch (e) {
                for (const middleware of this.middleware) {
                    if (middleware.onError) {
                        response = (yield middleware.onError({
                            fetch: this.fetchApi,
                            url: fetchParams.url,
                            init: fetchParams.init,
                            error: e,
                            response: response ? response.clone() : undefined,
                        })) || response;
                    }
                }
                if (response === undefined) {
                    if (e instanceof Error) {
                        throw new FetchError(e, 'The request failed and the interceptors did not return an alternative response');
                    }
                    else {
                        throw e;
                    }
                }
            }
            for (const middleware of this.middleware) {
                if (middleware.post) {
                    response = (yield middleware.post({
                        fetch: this.fetchApi,
                        url: fetchParams.url,
                        init: fetchParams.init,
                        response: response.clone(),
                    })) || response;
                }
            }
            return response;
        });
        this.middleware = configuration.middleware;
    }
    withMiddleware(...middlewares) {
        const next = this.clone();
        next.middleware = next.middleware.concat(...middlewares);
        return next;
    }
    withPreMiddleware(...preMiddlewares) {
        const middlewares = preMiddlewares.map((pre) => ({ pre }));
        return this.withMiddleware(...middlewares);
    }
    withPostMiddleware(...postMiddlewares) {
        const middlewares = postMiddlewares.map((post) => ({ post }));
        return this.withMiddleware(...middlewares);
    }
    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */
    isJsonMime(mime) {
        if (!mime) {
            return false;
        }
        return BaseAPI.jsonRegex.test(mime);
    }
    request(context, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const { url, init } = yield this.createFetchParams(context, initOverrides);
            const response = yield this.fetchApi(url, init);
            if (response && (response.status >= 200 && response.status < 300)) {
                return response;
            }
            throw new ResponseError(response, 'Response returned an error code');
        });
    }
    createFetchParams(context, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            let url = this.configuration.basePath + context.path;
            if (context.query !== undefined && Object.keys(context.query).length !== 0) {
                // only add the querystring to the URL if there are query parameters.
                // this is done to avoid urls ending with a "?" character which buggy webservers
                // do not handle correctly sometimes.
                url += '?' + this.configuration.queryParamsStringify(context.query);
            }
            const headers = Object.assign({}, this.configuration.headers, context.headers);
            Object.keys(headers).forEach(key => headers[key] === undefined ? delete headers[key] : {});
            const initOverrideFn = typeof initOverrides === "function"
                ? initOverrides
                : () => __awaiter(this, void 0, void 0, function* () { return initOverrides; });
            const initParams = {
                method: context.method,
                headers,
                body: context.body,
                credentials: this.configuration.credentials,
            };
            const overriddenInit = Object.assign(Object.assign({}, initParams), (yield initOverrideFn({
                init: initParams,
                context,
            })));
            let body;
            if (isFormData(overriddenInit.body)
                || (overriddenInit.body instanceof URLSearchParams)
                || isBlob(overriddenInit.body)) {
                body = overriddenInit.body;
            }
            else if (this.isJsonMime(headers['Content-Type'])) {
                body = JSON.stringify(overriddenInit.body);
            }
            else {
                body = overriddenInit.body;
            }
            const init = Object.assign(Object.assign({}, overriddenInit), { body });
            return { url, init };
        });
    }
    /**
     * Create a shallow clone of `this` by constructing a new instance
     * and then shallow cloning data members.
     */
    clone() {
        const constructor = this.constructor;
        const next = new constructor(this.configuration);
        next.middleware = this.middleware.slice();
        return next;
    }
}
BaseAPI.jsonRegex = new RegExp('^(:?application\/json|[^;/ \t]+\/[^;/ \t]+[+]json)[ \t]*(:?;.*)?$', 'i');
function isBlob(value) {
    return typeof Blob !== 'undefined' && value instanceof Blob;
}
function isFormData(value) {
    return typeof FormData !== "undefined" && value instanceof FormData;
}
class ResponseError extends Error {
    constructor(response, msg) {
        super(msg);
        this.response = response;
        this.name = "ResponseError";
    }
}
class FetchError extends Error {
    constructor(cause, msg) {
        super(msg);
        this.cause = cause;
        this.name = "FetchError";
    }
}
class RequiredError extends Error {
    constructor(field, msg) {
        super(msg);
        this.field = field;
        this.name = "RequiredError";
    }
}
const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};
function querystring(params, prefix = '') {
    return Object.keys(params)
        .map(key => querystringSingleKey(key, params[key], prefix))
        .filter(part => part.length > 0)
        .join('&');
}
function querystringSingleKey(key, value, keyPrefix = '') {
    const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);
    if (value instanceof Array) {
        const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))
            .join(`&${encodeURIComponent(fullKey)}=`);
        return `${encodeURIComponent(fullKey)}=${multiValue}`;
    }
    if (value instanceof Set) {
        const valueAsArray = Array.from(value);
        return querystringSingleKey(key, valueAsArray, keyPrefix);
    }
    if (value instanceof Date) {
        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;
    }
    if (value instanceof Object) {
        return querystring(value, fullKey);
    }
    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;
}
function exists(json, key) {
    const value = json[key];
    return value !== null && value !== undefined;
}
function mapValues(data, fn) {
    return Object.keys(data).reduce((acc, key) => (Object.assign(Object.assign({}, acc), { [key]: fn(data[key]) })), {});
}
function canConsumeForm(consumes) {
    for (const consume of consumes) {
        if ('multipart/form-data' === consume.contentType) {
            return true;
        }
    }
    return false;
}
class JSONApiResponse {
    constructor(raw, transformer = (jsonValue) => jsonValue) {
        this.raw = raw;
        this.transformer = transformer;
    }
    value() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.transformer(yield this.raw.json());
        });
    }
}
class VoidApiResponse {
    constructor(raw) {
        this.raw = raw;
    }
    value() {
        return __awaiter(this, void 0, void 0, function* () {
            return undefined;
        });
    }
}
class BlobApiResponse {
    constructor(raw) {
        this.raw = raw;
    }
    value() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.raw.blob();
        });
    }
    ;
}
class TextApiResponse {
    constructor(raw) {
        this.raw = raw;
    }
    value() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.raw.text();
        });
    }
    ;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcMessage interface.
 */
function instanceOfChatSvcMessage(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('threadId' in value) || value['threadId'] === undefined)
        return false;
    return true;
}
function ChatSvcMessageFromJSON(json) {
    return ChatSvcMessageFromJSONTyped(json);
}
function ChatSvcMessageFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'fileIds': json['fileIds'] == null ? undefined : json['fileIds'],
        'id': json['id'],
        'meta': json['meta'] == null ? undefined : json['meta'],
        'text': json['text'] == null ? undefined : json['text'],
        'threadId': json['threadId'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}
function ChatSvcMessageToJSON(json) {
    return ChatSvcMessageToJSONTyped(json, false);
}
function ChatSvcMessageToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'fileIds': value['fileIds'],
        'id': value['id'],
        'meta': value['meta'],
        'text': value['text'],
        'threadId': value['threadId'],
        'updatedAt': value['updatedAt'],
        'userId': value['userId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcAddMessageRequest interface.
 */
function instanceOfChatSvcAddMessageRequest(value) {
    return true;
}
function ChatSvcAddMessageRequestFromJSON(json) {
    return ChatSvcAddMessageRequestFromJSONTyped(json);
}
function ChatSvcAddMessageRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'message': json['message'] == null ? undefined : ChatSvcMessageFromJSON(json['message']),
    };
}
function ChatSvcAddMessageRequestToJSON(json) {
    return ChatSvcAddMessageRequestToJSONTyped(json, false);
}
function ChatSvcAddMessageRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'message': ChatSvcMessageToJSON(value['message']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcThread interface.
 */
function instanceOfChatSvcThread(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    return true;
}
function ChatSvcThreadFromJSON(json) {
    return ChatSvcThreadFromJSONTyped(json);
}
function ChatSvcThreadFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'id': json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'topicIds': json['topicIds'] == null ? undefined : json['topicIds'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userIds': json['userIds'] == null ? undefined : json['userIds'],
    };
}
function ChatSvcThreadToJSON(json) {
    return ChatSvcThreadToJSONTyped(json, false);
}
function ChatSvcThreadToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'id': value['id'],
        'title': value['title'],
        'topicIds': value['topicIds'],
        'updatedAt': value['updatedAt'],
        'userIds': value['userIds'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcAddThreadRequest interface.
 */
function instanceOfChatSvcAddThreadRequest(value) {
    return true;
}
function ChatSvcAddThreadRequestFromJSON(json) {
    return ChatSvcAddThreadRequestFromJSONTyped(json);
}
function ChatSvcAddThreadRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'thread': json['thread'] == null ? undefined : ChatSvcThreadFromJSON(json['thread']),
    };
}
function ChatSvcAddThreadRequestToJSON(json) {
    return ChatSvcAddThreadRequestToJSONTyped(json, false);
}
function ChatSvcAddThreadRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'thread': ChatSvcThreadToJSON(value['thread']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcAddThreadResponse interface.
 */
function instanceOfChatSvcAddThreadResponse(value) {
    return true;
}
function ChatSvcAddThreadResponseFromJSON(json) {
    return ChatSvcAddThreadResponseFromJSONTyped(json);
}
function ChatSvcAddThreadResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'thread': json['thread'] == null ? undefined : ChatSvcThreadFromJSON(json['thread']),
    };
}
function ChatSvcAddThreadResponseToJSON(json) {
    return ChatSvcAddThreadResponseToJSONTyped(json, false);
}
function ChatSvcAddThreadResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'thread': ChatSvcThreadToJSON(value['thread']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcEventMessageAdded interface.
 */
function instanceOfChatSvcEventMessageAdded(value) {
    return true;
}
function ChatSvcEventMessageAddedFromJSON(json) {
    return ChatSvcEventMessageAddedFromJSONTyped(json);
}
function ChatSvcEventMessageAddedFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
    };
}
function ChatSvcEventMessageAddedToJSON(json) {
    return ChatSvcEventMessageAddedToJSONTyped(json, false);
}
function ChatSvcEventMessageAddedToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'threadId': value['threadId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcEventThreadAdded interface.
 */
function instanceOfChatSvcEventThreadAdded(value) {
    return true;
}
function ChatSvcEventThreadAddedFromJSON(json) {
    return ChatSvcEventThreadAddedFromJSONTyped(json);
}
function ChatSvcEventThreadAddedFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
    };
}
function ChatSvcEventThreadAddedToJSON(json) {
    return ChatSvcEventThreadAddedToJSONTyped(json, false);
}
function ChatSvcEventThreadAddedToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'threadId': value['threadId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcEventThreadUpdate interface.
 */
function instanceOfChatSvcEventThreadUpdate(value) {
    return true;
}
function ChatSvcEventThreadUpdateFromJSON(json) {
    return ChatSvcEventThreadUpdateFromJSONTyped(json);
}
function ChatSvcEventThreadUpdateFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
    };
}
function ChatSvcEventThreadUpdateToJSON(json) {
    return ChatSvcEventThreadUpdateToJSONTyped(json, false);
}
function ChatSvcEventThreadUpdateToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'threadId': value['threadId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcGetMessageResponse interface.
 */
function instanceOfChatSvcGetMessageResponse(value) {
    return true;
}
function ChatSvcGetMessageResponseFromJSON(json) {
    return ChatSvcGetMessageResponseFromJSONTyped(json);
}
function ChatSvcGetMessageResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        '_exists': json['exists'] == null ? undefined : json['exists'],
        'message': json['message'] == null ? undefined : ChatSvcMessageFromJSON(json['message']),
    };
}
function ChatSvcGetMessageResponseToJSON(json) {
    return ChatSvcGetMessageResponseToJSONTyped(json, false);
}
function ChatSvcGetMessageResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'exists': value['_exists'],
        'message': ChatSvcMessageToJSON(value['message']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcGetMessagesResponse interface.
 */
function instanceOfChatSvcGetMessagesResponse(value) {
    return true;
}
function ChatSvcGetMessagesResponseFromJSON(json) {
    return ChatSvcGetMessagesResponseFromJSONTyped(json);
}
function ChatSvcGetMessagesResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'messages': json['messages'] == null ? undefined : (json['messages'].map(ChatSvcMessageFromJSON)),
    };
}
function ChatSvcGetMessagesResponseToJSON(json) {
    return ChatSvcGetMessagesResponseToJSONTyped(json, false);
}
function ChatSvcGetMessagesResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'messages': value['messages'] == null ? undefined : (value['messages'].map(ChatSvcMessageToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcGetThreadResponse interface.
 */
function instanceOfChatSvcGetThreadResponse(value) {
    return true;
}
function ChatSvcGetThreadResponseFromJSON(json) {
    return ChatSvcGetThreadResponseFromJSONTyped(json);
}
function ChatSvcGetThreadResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        '_exists': json['exists'] == null ? undefined : json['exists'],
        'thread': json['thread'] == null ? undefined : ChatSvcThreadFromJSON(json['thread']),
    };
}
function ChatSvcGetThreadResponseToJSON(json) {
    return ChatSvcGetThreadResponseToJSONTyped(json, false);
}
function ChatSvcGetThreadResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'exists': value['_exists'],
        'thread': ChatSvcThreadToJSON(value['thread']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcGetThreadsResponse interface.
 */
function instanceOfChatSvcGetThreadsResponse(value) {
    return true;
}
function ChatSvcGetThreadsResponseFromJSON(json) {
    return ChatSvcGetThreadsResponseFromJSONTyped(json);
}
function ChatSvcGetThreadsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'threads': json['threads'] == null ? undefined : (json['threads'].map(ChatSvcThreadFromJSON)),
    };
}
function ChatSvcGetThreadsResponseToJSON(json) {
    return ChatSvcGetThreadsResponseToJSONTyped(json, false);
}
function ChatSvcGetThreadsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'threads': value['threads'] == null ? undefined : (value['threads'].map(ChatSvcThreadToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ChatSvcUpdateThreadRequest interface.
 */
function instanceOfChatSvcUpdateThreadRequest(value) {
    return true;
}
function ChatSvcUpdateThreadRequestFromJSON(json) {
    return ChatSvcUpdateThreadRequestFromJSONTyped(json);
}
function ChatSvcUpdateThreadRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'thread': json['thread'] == null ? undefined : ChatSvcThreadFromJSON(json['thread']),
    };
}
function ChatSvcUpdateThreadRequestToJSON(json) {
    return ChatSvcUpdateThreadRequestToJSONTyped(json, false);
}
function ChatSvcUpdateThreadRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'thread': ChatSvcThreadToJSON(value['thread']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ConfigSvcConfig interface.
 */
function instanceOfConfigSvcConfig(value) {
    if (!('data' in value) || value['data'] === undefined)
        return false;
    return true;
}
function ConfigSvcConfigFromJSON(json) {
    return ConfigSvcConfigFromJSONTyped(json);
}
function ConfigSvcConfigFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'data': json['data'],
        'dataJson': json['dataJson'] == null ? undefined : json['dataJson'],
        'id': json['id'] == null ? undefined : json['id'],
        'namespace': json['namespace'] == null ? undefined : json['namespace'],
    };
}
function ConfigSvcConfigToJSON(json) {
    return ConfigSvcConfigToJSONTyped(json, false);
}
function ConfigSvcConfigToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'data': value['data'],
        'dataJson': value['dataJson'],
        'id': value['id'],
        'namespace': value['namespace'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ConfigSvcGetConfigResponse interface.
 */
function instanceOfConfigSvcGetConfigResponse(value) {
    return true;
}
function ConfigSvcGetConfigResponseFromJSON(json) {
    return ConfigSvcGetConfigResponseFromJSONTyped(json);
}
function ConfigSvcGetConfigResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'config': json['config'] == null ? undefined : ConfigSvcConfigFromJSON(json['config']),
    };
}
function ConfigSvcGetConfigResponseToJSON(json) {
    return ConfigSvcGetConfigResponseToJSONTyped(json, false);
}
function ConfigSvcGetConfigResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'config': ConfigSvcConfigToJSON(value['config']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ConfigSvcSaveConfigRequest interface.
 */
function instanceOfConfigSvcSaveConfigRequest(value) {
    return true;
}
function ConfigSvcSaveConfigRequestFromJSON(json) {
    return ConfigSvcSaveConfigRequestFromJSONTyped(json);
}
function ConfigSvcSaveConfigRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'config': json['config'] == null ? undefined : ConfigSvcConfigFromJSON(json['config']),
    };
}
function ConfigSvcSaveConfigRequestToJSON(json) {
    return ConfigSvcSaveConfigRequestToJSONTyped(json, false);
}
function ConfigSvcSaveConfigRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'config': ConfigSvcConfigToJSON(value['config']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcAsset interface.
 */
function instanceOfContainerSvcAsset(value) {
    if (!('envVarKey' in value) || value['envVarKey'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    return true;
}
function ContainerSvcAssetFromJSON(json) {
    return ContainerSvcAssetFromJSONTyped(json);
}
function ContainerSvcAssetFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'envVarKey': json['envVarKey'],
        'url': json['url'],
    };
}
function ContainerSvcAssetToJSON(json) {
    return ContainerSvcAssetToJSONTyped(json, false);
}
function ContainerSvcAssetToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'envVarKey': value['envVarKey'],
        'url': value['url'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcBuildImageRequest interface.
 */
function instanceOfContainerSvcBuildImageRequest(value) {
    if (!('contextPath' in value) || value['contextPath'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    return true;
}
function ContainerSvcBuildImageRequestFromJSON(json) {
    return ContainerSvcBuildImageRequestFromJSONTyped(json);
}
function ContainerSvcBuildImageRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'contextPath': json['contextPath'],
        'dockerfilePath': json['dockerfilePath'] == null ? undefined : json['dockerfilePath'],
        'name': json['name'],
    };
}
function ContainerSvcBuildImageRequestToJSON(json) {
    return ContainerSvcBuildImageRequestToJSONTyped(json, false);
}
function ContainerSvcBuildImageRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'contextPath': value['contextPath'],
        'dockerfilePath': value['dockerfilePath'],
        'name': value['name'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcCapabilities interface.
 */
function instanceOfContainerSvcCapabilities(value) {
    return true;
}
function ContainerSvcCapabilitiesFromJSON(json) {
    return ContainerSvcCapabilitiesFromJSONTyped(json);
}
function ContainerSvcCapabilitiesFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'gpuEnabled': json['gpuEnabled'] == null ? undefined : json['gpuEnabled'],
    };
}
function ContainerSvcCapabilitiesToJSON(json) {
    return ContainerSvcCapabilitiesToJSONTyped(json, false);
}
function ContainerSvcCapabilitiesToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'gpuEnabled': value['gpuEnabled'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcKeep interface.
 */
function instanceOfContainerSvcKeep(value) {
    if (!('path' in value) || value['path'] === undefined)
        return false;
    return true;
}
function ContainerSvcKeepFromJSON(json) {
    return ContainerSvcKeepFromJSONTyped(json);
}
function ContainerSvcKeepFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'path': json['path'],
        'readOnly': json['readOnly'] == null ? undefined : json['readOnly'],
    };
}
function ContainerSvcKeepToJSON(json) {
    return ContainerSvcKeepToJSONTyped(json, false);
}
function ContainerSvcKeepToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'path': value['path'],
        'readOnly': value['readOnly'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcNetwork interface.
 */
function instanceOfContainerSvcNetwork(value) {
    return true;
}
function ContainerSvcNetworkFromJSON(json) {
    return ContainerSvcNetworkFromJSONTyped(json);
}
function ContainerSvcNetworkFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'ipAddress': json['ipAddress'] == null ? undefined : json['ipAddress'],
        'macAddress': json['macAddress'] == null ? undefined : json['macAddress'],
        'mode': json['mode'] == null ? undefined : json['mode'],
    };
}
function ContainerSvcNetworkToJSON(json) {
    return ContainerSvcNetworkToJSONTyped(json, false);
}
function ContainerSvcNetworkToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'ipAddress': value['ipAddress'],
        'macAddress': value['macAddress'],
        'mode': value['mode'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcVolume interface.
 */
function instanceOfContainerSvcVolume(value) {
    return true;
}
function ContainerSvcVolumeFromJSON(json) {
    return ContainerSvcVolumeFromJSONTyped(json);
}
function ContainerSvcVolumeFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'destination': json['destination'] == null ? undefined : json['destination'],
        'readOnly': json['readOnly'] == null ? undefined : json['readOnly'],
        'source': json['source'] == null ? undefined : json['source'],
    };
}
function ContainerSvcVolumeToJSON(json) {
    return ContainerSvcVolumeToJSONTyped(json, false);
}
function ContainerSvcVolumeToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'destination': value['destination'],
        'readOnly': value['readOnly'],
        'source': value['source'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcLabel interface.
 */
function instanceOfContainerSvcLabel(value) {
    if (!('key' in value) || value['key'] === undefined)
        return false;
    if (!('value' in value) || value['value'] === undefined)
        return false;
    return true;
}
function ContainerSvcLabelFromJSON(json) {
    return ContainerSvcLabelFromJSONTyped(json);
}
function ContainerSvcLabelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'key': json['key'],
        'value': json['value'],
    };
}
function ContainerSvcLabelToJSON(json) {
    return ContainerSvcLabelToJSONTyped(json, false);
}
function ContainerSvcLabelToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'key': value['key'],
        'value': value['value'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcEnvVar interface.
 */
function instanceOfContainerSvcEnvVar(value) {
    if (!('key' in value) || value['key'] === undefined)
        return false;
    if (!('value' in value) || value['value'] === undefined)
        return false;
    return true;
}
function ContainerSvcEnvVarFromJSON(json) {
    return ContainerSvcEnvVarFromJSONTyped(json);
}
function ContainerSvcEnvVarFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'key': json['key'],
        'value': json['value'],
    };
}
function ContainerSvcEnvVarToJSON(json) {
    return ContainerSvcEnvVarToJSONTyped(json, false);
}
function ContainerSvcEnvVarToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'key': value['key'],
        'value': value['value'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcResources interface.
 */
function instanceOfContainerSvcResources(value) {
    return true;
}
function ContainerSvcResourcesFromJSON(json) {
    return ContainerSvcResourcesFromJSONTyped(json);
}
function ContainerSvcResourcesFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cpu': json['cpu'] == null ? undefined : json['cpu'],
        'diskMB': json['diskMB'] == null ? undefined : json['diskMB'],
        'memoryMB': json['memoryMB'] == null ? undefined : json['memoryMB'],
    };
}
function ContainerSvcResourcesToJSON(json) {
    return ContainerSvcResourcesToJSONTyped(json, false);
}
function ContainerSvcResourcesToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cpu': value['cpu'],
        'diskMB': value['diskMB'],
        'memoryMB': value['memoryMB'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcPortMapping interface.
 */
function instanceOfContainerSvcPortMapping(value) {
    if (!('host' in value) || value['host'] === undefined)
        return false;
    if (!('internal' in value) || value['internal'] === undefined)
        return false;
    return true;
}
function ContainerSvcPortMappingFromJSON(json) {
    return ContainerSvcPortMappingFromJSONTyped(json);
}
function ContainerSvcPortMappingFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'host': json['host'],
        'internal': json['internal'],
    };
}
function ContainerSvcPortMappingToJSON(json) {
    return ContainerSvcPortMappingToJSONTyped(json, false);
}
function ContainerSvcPortMappingToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'host': value['host'],
        'internal': value['internal'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcContainer interface.
 */
function instanceOfContainerSvcContainer(value) {
    return true;
}
function ContainerSvcContainerFromJSON(json) {
    return ContainerSvcContainerFromJSONTyped(json);
}
function ContainerSvcContainerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'assets': json['assets'] == null ? undefined : (json['assets'].map(ContainerSvcAssetFromJSON)),
        'capabilities': json['capabilities'] == null ? undefined : ContainerSvcCapabilitiesFromJSON(json['capabilities']),
        'envs': json['envs'] == null ? undefined : (json['envs'].map(ContainerSvcEnvVarFromJSON)),
        'hash': json['hash'] == null ? undefined : json['hash'],
        'id': json['id'] == null ? undefined : json['id'],
        'image': json['image'] == null ? undefined : json['image'],
        'keeps': json['keeps'] == null ? undefined : (json['keeps'].map(ContainerSvcKeepFromJSON)),
        'labels': json['labels'] == null ? undefined : (json['labels'].map(ContainerSvcLabelFromJSON)),
        'names': json['names'] == null ? undefined : json['names'],
        'network': json['network'] == null ? undefined : ContainerSvcNetworkFromJSON(json['network']),
        'nodeId': json['nodeId'] == null ? undefined : json['nodeId'],
        'ports': json['ports'] == null ? undefined : (json['ports'].map(ContainerSvcPortMappingFromJSON)),
        'resources': json['resources'] == null ? undefined : ContainerSvcResourcesFromJSON(json['resources']),
        'runtime': json['runtime'] == null ? undefined : json['runtime'],
        'status': json['status'] == null ? undefined : json['status'],
        'volumes': json['volumes'] == null ? undefined : (json['volumes'].map(ContainerSvcVolumeFromJSON)),
    };
}
function ContainerSvcContainerToJSON(json) {
    return ContainerSvcContainerToJSONTyped(json, false);
}
function ContainerSvcContainerToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'assets': value['assets'] == null ? undefined : (value['assets'].map(ContainerSvcAssetToJSON)),
        'capabilities': ContainerSvcCapabilitiesToJSON(value['capabilities']),
        'envs': value['envs'] == null ? undefined : (value['envs'].map(ContainerSvcEnvVarToJSON)),
        'hash': value['hash'],
        'id': value['id'],
        'image': value['image'],
        'keeps': value['keeps'] == null ? undefined : (value['keeps'].map(ContainerSvcKeepToJSON)),
        'labels': value['labels'] == null ? undefined : (value['labels'].map(ContainerSvcLabelToJSON)),
        'names': value['names'],
        'network': ContainerSvcNetworkToJSON(value['network']),
        'nodeId': value['nodeId'],
        'ports': value['ports'] == null ? undefined : (value['ports'].map(ContainerSvcPortMappingToJSON)),
        'resources': ContainerSvcResourcesToJSON(value['resources']),
        'runtime': value['runtime'],
        'status': value['status'],
        'volumes': value['volumes'] == null ? undefined : (value['volumes'].map(ContainerSvcVolumeToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcContainerIsRunningResponse interface.
 */
function instanceOfContainerSvcContainerIsRunningResponse(value) {
    if (!('isRunning' in value) || value['isRunning'] === undefined)
        return false;
    return true;
}
function ContainerSvcContainerIsRunningResponseFromJSON(json) {
    return ContainerSvcContainerIsRunningResponseFromJSONTyped(json);
}
function ContainerSvcContainerIsRunningResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'isRunning': json['isRunning'],
    };
}
function ContainerSvcContainerIsRunningResponseToJSON(json) {
    return ContainerSvcContainerIsRunningResponseToJSONTyped(json, false);
}
function ContainerSvcContainerIsRunningResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'isRunning': value['isRunning'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcDaemonInfoResponse interface.
 */
function instanceOfContainerSvcDaemonInfoResponse(value) {
    if (!('available' in value) || value['available'] === undefined)
        return false;
    return true;
}
function ContainerSvcDaemonInfoResponseFromJSON(json) {
    return ContainerSvcDaemonInfoResponseFromJSONTyped(json);
}
function ContainerSvcDaemonInfoResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'address': json['address'] == null ? undefined : json['address'],
        'available': json['available'],
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function ContainerSvcDaemonInfoResponseToJSON(json) {
    return ContainerSvcDaemonInfoResponseToJSONTyped(json, false);
}
function ContainerSvcDaemonInfoResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'address': value['address'],
        'available': value['available'],
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcErrorResponse interface.
 */
function instanceOfContainerSvcErrorResponse(value) {
    return true;
}
function ContainerSvcErrorResponseFromJSON(json) {
    return ContainerSvcErrorResponseFromJSONTyped(json);
}
function ContainerSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function ContainerSvcErrorResponseToJSON(json) {
    return ContainerSvcErrorResponseToJSONTyped(json, false);
}
function ContainerSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcGetContainerSummaryResponse interface.
 */
function instanceOfContainerSvcGetContainerSummaryResponse(value) {
    if (!('logs' in value) || value['logs'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('summary' in value) || value['summary'] === undefined)
        return false;
    return true;
}
function ContainerSvcGetContainerSummaryResponseFromJSON(json) {
    return ContainerSvcGetContainerSummaryResponseFromJSONTyped(json);
}
function ContainerSvcGetContainerSummaryResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'logs': json['logs'],
        'status': json['status'],
        'summary': json['summary'],
    };
}
function ContainerSvcGetContainerSummaryResponseToJSON(json) {
    return ContainerSvcGetContainerSummaryResponseToJSONTyped(json, false);
}
function ContainerSvcGetContainerSummaryResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'logs': value['logs'],
        'status': value['status'],
        'summary': value['summary'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcGetHostResponse interface.
 */
function instanceOfContainerSvcGetHostResponse(value) {
    if (!('host' in value) || value['host'] === undefined)
        return false;
    return true;
}
function ContainerSvcGetHostResponseFromJSON(json) {
    return ContainerSvcGetHostResponseFromJSONTyped(json);
}
function ContainerSvcGetHostResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'host': json['host'],
    };
}
function ContainerSvcGetHostResponseToJSON(json) {
    return ContainerSvcGetHostResponseToJSONTyped(json, false);
}
function ContainerSvcGetHostResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'host': value['host'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcImagePullableResponse interface.
 */
function instanceOfContainerSvcImagePullableResponse(value) {
    if (!('pullable' in value) || value['pullable'] === undefined)
        return false;
    return true;
}
function ContainerSvcImagePullableResponseFromJSON(json) {
    return ContainerSvcImagePullableResponseFromJSONTyped(json);
}
function ContainerSvcImagePullableResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'pullable': json['pullable'],
    };
}
function ContainerSvcImagePullableResponseToJSON(json) {
    return ContainerSvcImagePullableResponseToJSONTyped(json, false);
}
function ContainerSvcImagePullableResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'pullable': value['pullable'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcListContainersRequest interface.
 */
function instanceOfContainerSvcListContainersRequest(value) {
    return true;
}
function ContainerSvcListContainersRequestFromJSON(json) {
    return ContainerSvcListContainersRequestFromJSONTyped(json);
}
function ContainerSvcListContainersRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'containerId': json['containerId'] == null ? undefined : json['containerId'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'nodeId': json['nodeId'] == null ? undefined : json['nodeId'],
    };
}
function ContainerSvcListContainersRequestToJSON(json) {
    return ContainerSvcListContainersRequestToJSONTyped(json, false);
}
function ContainerSvcListContainersRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'containerId': value['containerId'],
        'limit': value['limit'],
        'nodeId': value['nodeId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcListContainersResponse interface.
 */
function instanceOfContainerSvcListContainersResponse(value) {
    return true;
}
function ContainerSvcListContainersResponseFromJSON(json) {
    return ContainerSvcListContainersResponseFromJSONTyped(json);
}
function ContainerSvcListContainersResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'containers': json['containers'] == null ? undefined : (json['containers'].map(ContainerSvcContainerFromJSON)),
    };
}
function ContainerSvcListContainersResponseToJSON(json) {
    return ContainerSvcListContainersResponseToJSONTyped(json, false);
}
function ContainerSvcListContainersResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'containers': value['containers'] == null ? undefined : (value['containers'].map(ContainerSvcContainerToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcListLogsRequest interface.
 */
function instanceOfContainerSvcListLogsRequest(value) {
    return true;
}
function ContainerSvcListLogsRequestFromJSON(json) {
    return ContainerSvcListLogsRequestFromJSONTyped(json);
}
function ContainerSvcListLogsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'containerId': json['containerId'] == null ? undefined : json['containerId'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'nodeId': json['nodeId'] == null ? undefined : json['nodeId'],
    };
}
function ContainerSvcListLogsRequestToJSON(json) {
    return ContainerSvcListLogsRequestToJSONTyped(json, false);
}
function ContainerSvcListLogsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'containerId': value['containerId'],
        'limit': value['limit'],
        'nodeId': value['nodeId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcLog interface.
 */
function instanceOfContainerSvcLog(value) {
    return true;
}
function ContainerSvcLogFromJSON(json) {
    return ContainerSvcLogFromJSONTyped(json);
}
function ContainerSvcLogFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'containerId': json['containerId'] == null ? undefined : json['containerId'],
        'content': json['content'] == null ? undefined : json['content'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'nodeId': json['nodeId'] == null ? undefined : json['nodeId'],
    };
}
function ContainerSvcLogToJSON(json) {
    return ContainerSvcLogToJSONTyped(json, false);
}
function ContainerSvcLogToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'containerId': value['containerId'],
        'content': value['content'],
        'createdAt': value['createdAt'],
        'id': value['id'],
        'nodeId': value['nodeId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcListLogsResponse interface.
 */
function instanceOfContainerSvcListLogsResponse(value) {
    return true;
}
function ContainerSvcListLogsResponseFromJSON(json) {
    return ContainerSvcListLogsResponseFromJSONTyped(json);
}
function ContainerSvcListLogsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'logs': json['logs'] == null ? undefined : (json['logs'].map(ContainerSvcLogFromJSON)),
    };
}
function ContainerSvcListLogsResponseToJSON(json) {
    return ContainerSvcListLogsResponseToJSONTyped(json, false);
}
function ContainerSvcListLogsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'logs': value['logs'] == null ? undefined : (value['logs'].map(ContainerSvcLogToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcRunContainerRequest interface.
 */
function instanceOfContainerSvcRunContainerRequest(value) {
    if (!('image' in value) || value['image'] === undefined)
        return false;
    return true;
}
function ContainerSvcRunContainerRequestFromJSON(json) {
    return ContainerSvcRunContainerRequestFromJSONTyped(json);
}
function ContainerSvcRunContainerRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'assets': json['assets'] == null ? undefined : (json['assets'].map(ContainerSvcAssetFromJSON)),
        'capabilities': json['capabilities'] == null ? undefined : ContainerSvcCapabilitiesFromJSON(json['capabilities']),
        'envs': json['envs'] == null ? undefined : (json['envs'].map(ContainerSvcEnvVarFromJSON)),
        'hash': json['hash'] == null ? undefined : json['hash'],
        'image': json['image'],
        'keeps': json['keeps'] == null ? undefined : (json['keeps'].map(ContainerSvcKeepFromJSON)),
        'labels': json['labels'] == null ? undefined : (json['labels'].map(ContainerSvcLabelFromJSON)),
        'names': json['names'] == null ? undefined : json['names'],
        'ports': json['ports'] == null ? undefined : (json['ports'].map(ContainerSvcPortMappingFromJSON)),
    };
}
function ContainerSvcRunContainerRequestToJSON(json) {
    return ContainerSvcRunContainerRequestToJSONTyped(json, false);
}
function ContainerSvcRunContainerRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'assets': value['assets'] == null ? undefined : (value['assets'].map(ContainerSvcAssetToJSON)),
        'capabilities': ContainerSvcCapabilitiesToJSON(value['capabilities']),
        'envs': value['envs'] == null ? undefined : (value['envs'].map(ContainerSvcEnvVarToJSON)),
        'hash': value['hash'],
        'image': value['image'],
        'keeps': value['keeps'] == null ? undefined : (value['keeps'].map(ContainerSvcKeepToJSON)),
        'labels': value['labels'] == null ? undefined : (value['labels'].map(ContainerSvcLabelToJSON)),
        'names': value['names'],
        'ports': value['ports'] == null ? undefined : (value['ports'].map(ContainerSvcPortMappingToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcRunContainerResponse interface.
 */
function instanceOfContainerSvcRunContainerResponse(value) {
    return true;
}
function ContainerSvcRunContainerResponseFromJSON(json) {
    return ContainerSvcRunContainerResponseFromJSONTyped(json);
}
function ContainerSvcRunContainerResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'ports': json['ports'] == null ? undefined : (json['ports'].map(ContainerSvcPortMappingFromJSON)),
        'started': json['started'] == null ? undefined : json['started'],
    };
}
function ContainerSvcRunContainerResponseToJSON(json) {
    return ContainerSvcRunContainerResponseToJSONTyped(json, false);
}
function ContainerSvcRunContainerResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'ports': value['ports'] == null ? undefined : (value['ports'].map(ContainerSvcPortMappingToJSON)),
        'started': value['started'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ContainerSvcStopContainerRequest interface.
 */
function instanceOfContainerSvcStopContainerRequest(value) {
    return true;
}
function ContainerSvcStopContainerRequestFromJSON(json) {
    return ContainerSvcStopContainerRequestFromJSONTyped(json);
}
function ContainerSvcStopContainerRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}
function ContainerSvcStopContainerRequestToJSON(json) {
    return ContainerSvcStopContainerRequestToJSONTyped(json, false);
}
function ContainerSvcStopContainerRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'name': value['name'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcCreateObjectFields interface.
 */
function instanceOfDataSvcCreateObjectFields(value) {
    if (!('data' in value) || value['data'] === undefined)
        return false;
    if (!('table' in value) || value['table'] === undefined)
        return false;
    return true;
}
function DataSvcCreateObjectFieldsFromJSON(json) {
    return DataSvcCreateObjectFieldsFromJSONTyped(json);
}
function DataSvcCreateObjectFieldsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'authors': json['authors'] == null ? undefined : json['authors'],
        'data': json['data'],
        'deleters': json['deleters'] == null ? undefined : json['deleters'],
        'id': json['id'] == null ? undefined : json['id'],
        'readers': json['readers'] == null ? undefined : json['readers'],
        'table': json['table'],
        'writers': json['writers'] == null ? undefined : json['writers'],
    };
}
function DataSvcCreateObjectFieldsToJSON(json) {
    return DataSvcCreateObjectFieldsToJSONTyped(json, false);
}
function DataSvcCreateObjectFieldsToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'authors': value['authors'],
        'data': value['data'],
        'deleters': value['deleters'],
        'id': value['id'],
        'readers': value['readers'],
        'table': value['table'],
        'writers': value['writers'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcCreateObjectRequest interface.
 */
function instanceOfDataSvcCreateObjectRequest(value) {
    return true;
}
function DataSvcCreateObjectRequestFromJSON(json) {
    return DataSvcCreateObjectRequestFromJSONTyped(json);
}
function DataSvcCreateObjectRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'object': json['object'] == null ? undefined : DataSvcCreateObjectFieldsFromJSON(json['object']),
    };
}
function DataSvcCreateObjectRequestToJSON(json) {
    return DataSvcCreateObjectRequestToJSONTyped(json, false);
}
function DataSvcCreateObjectRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'object': DataSvcCreateObjectFieldsToJSON(value['object']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcObject interface.
 */
function instanceOfDataSvcObject(value) {
    if (!('data' in value) || value['data'] === undefined)
        return false;
    if (!('table' in value) || value['table'] === undefined)
        return false;
    return true;
}
function DataSvcObjectFromJSON(json) {
    return DataSvcObjectFromJSONTyped(json);
}
function DataSvcObjectFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'authors': json['authors'] == null ? undefined : json['authors'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'data': json['data'],
        'deleters': json['deleters'] == null ? undefined : json['deleters'],
        'id': json['id'] == null ? undefined : json['id'],
        'readers': json['readers'] == null ? undefined : json['readers'],
        'table': json['table'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'writers': json['writers'] == null ? undefined : json['writers'],
    };
}
function DataSvcObjectToJSON(json) {
    return DataSvcObjectToJSONTyped(json, false);
}
function DataSvcObjectToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'authors': value['authors'],
        'createdAt': value['createdAt'],
        'data': value['data'],
        'deleters': value['deleters'],
        'id': value['id'],
        'readers': value['readers'],
        'table': value['table'],
        'updatedAt': value['updatedAt'],
        'writers': value['writers'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcCreateObjectResponse interface.
 */
function instanceOfDataSvcCreateObjectResponse(value) {
    return true;
}
function DataSvcCreateObjectResponseFromJSON(json) {
    return DataSvcCreateObjectResponseFromJSONTyped(json);
}
function DataSvcCreateObjectResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'object': json['object'] == null ? undefined : DataSvcObjectFromJSON(json['object']),
    };
}
function DataSvcCreateObjectResponseToJSON(json) {
    return DataSvcCreateObjectResponseToJSONTyped(json, false);
}
function DataSvcCreateObjectResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'object': DataSvcObjectToJSON(value['object']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const DatastoreOp = {
    OpEquals: 'equals',
    OpContainsSubstring: 'containsSubstring',
    OpStartsWith: 'startsWith',
    OpIntersects: 'intersects',
    OpIsInList: 'isInList'
};
function instanceOfDatastoreOp(value) {
    for (const key in DatastoreOp) {
        if (Object.prototype.hasOwnProperty.call(DatastoreOp, key)) {
            if (DatastoreOp[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function DatastoreOpFromJSON(json) {
    return DatastoreOpFromJSONTyped(json);
}
function DatastoreOpFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function DatastoreOpToJSON(value) {
    return value;
}
function DatastoreOpToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DatastoreFilter interface.
 */
function instanceOfDatastoreFilter(value) {
    return true;
}
function DatastoreFilterFromJSON(json) {
    return DatastoreFilterFromJSONTyped(json);
}
function DatastoreFilterFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'fields': json['fields'] == null ? undefined : json['fields'],
        'jsonValues': json['jsonValues'] == null ? undefined : json['jsonValues'],
        'op': json['op'] == null ? undefined : DatastoreOpFromJSON(json['op']),
    };
}
function DatastoreFilterToJSON(json) {
    return DatastoreFilterToJSONTyped(json, false);
}
function DatastoreFilterToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'fields': value['fields'],
        'jsonValues': value['jsonValues'],
        'op': DatastoreOpToJSON(value['op']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcDeleteObjectRequest interface.
 */
function instanceOfDataSvcDeleteObjectRequest(value) {
    return true;
}
function DataSvcDeleteObjectRequestFromJSON(json) {
    return DataSvcDeleteObjectRequestFromJSONTyped(json);
}
function DataSvcDeleteObjectRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'filters': json['filters'] == null ? undefined : (json['filters'].map(DatastoreFilterFromJSON)),
        'table': json['table'] == null ? undefined : json['table'],
    };
}
function DataSvcDeleteObjectRequestToJSON(json) {
    return DataSvcDeleteObjectRequestToJSONTyped(json, false);
}
function DataSvcDeleteObjectRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'filters': value['filters'] == null ? undefined : (value['filters'].map(DatastoreFilterToJSON)),
        'table': value['table'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcErrorResponse interface.
 */
function instanceOfDataSvcErrorResponse(value) {
    return true;
}
function DataSvcErrorResponseFromJSON(json) {
    return DataSvcErrorResponseFromJSONTyped(json);
}
function DataSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function DataSvcErrorResponseToJSON(json) {
    return DataSvcErrorResponseToJSONTyped(json, false);
}
function DataSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const DatastoreSortingType = {
    SortingTypeDefault: '',
    SortingTypeNumeric: 'numeric',
    SortingTypeText: 'text',
    SortingTypeDate: 'date'
};
function instanceOfDatastoreSortingType(value) {
    for (const key in DatastoreSortingType) {
        if (Object.prototype.hasOwnProperty.call(DatastoreSortingType, key)) {
            if (DatastoreSortingType[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function DatastoreSortingTypeFromJSON(json) {
    return DatastoreSortingTypeFromJSONTyped(json);
}
function DatastoreSortingTypeFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function DatastoreSortingTypeToJSON(value) {
    return value;
}
function DatastoreSortingTypeToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DatastoreOrderBy interface.
 */
function instanceOfDatastoreOrderBy(value) {
    return true;
}
function DatastoreOrderByFromJSON(json) {
    return DatastoreOrderByFromJSONTyped(json);
}
function DatastoreOrderByFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'desc': json['desc'] == null ? undefined : json['desc'],
        'field': json['field'] == null ? undefined : json['field'],
        'randomize': json['randomize'] == null ? undefined : json['randomize'],
        'sortingType': json['sortingType'] == null ? undefined : DatastoreSortingTypeFromJSON(json['sortingType']),
    };
}
function DatastoreOrderByToJSON(json) {
    return DatastoreOrderByToJSONTyped(json, false);
}
function DatastoreOrderByToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'desc': value['desc'],
        'field': value['field'],
        'randomize': value['randomize'],
        'sortingType': DatastoreSortingTypeToJSON(value['sortingType']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DatastoreQuery interface.
 */
function instanceOfDatastoreQuery(value) {
    return true;
}
function DatastoreQueryFromJSON(json) {
    return DatastoreQueryFromJSONTyped(json);
}
function DatastoreQueryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'count': json['count'] == null ? undefined : json['count'],
        'filters': json['filters'] == null ? undefined : (json['filters'].map(DatastoreFilterFromJSON)),
        'jsonAfter': json['jsonAfter'] == null ? undefined : json['jsonAfter'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'orderBys': json['orderBys'] == null ? undefined : (json['orderBys'].map(DatastoreOrderByFromJSON)),
    };
}
function DatastoreQueryToJSON(json) {
    return DatastoreQueryToJSONTyped(json, false);
}
function DatastoreQueryToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'count': value['count'],
        'filters': value['filters'] == null ? undefined : (value['filters'].map(DatastoreFilterToJSON)),
        'jsonAfter': value['jsonAfter'],
        'limit': value['limit'],
        'orderBys': value['orderBys'] == null ? undefined : (value['orderBys'].map(DatastoreOrderByToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcQueryRequest interface.
 */
function instanceOfDataSvcQueryRequest(value) {
    return true;
}
function DataSvcQueryRequestFromJSON(json) {
    return DataSvcQueryRequestFromJSONTyped(json);
}
function DataSvcQueryRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'query': json['query'] == null ? undefined : DatastoreQueryFromJSON(json['query']),
        'readers': json['readers'] == null ? undefined : json['readers'],
        'table': json['table'] == null ? undefined : json['table'],
    };
}
function DataSvcQueryRequestToJSON(json) {
    return DataSvcQueryRequestToJSONTyped(json, false);
}
function DataSvcQueryRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'query': DatastoreQueryToJSON(value['query']),
        'readers': value['readers'],
        'table': value['table'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcQueryResponse interface.
 */
function instanceOfDataSvcQueryResponse(value) {
    return true;
}
function DataSvcQueryResponseFromJSON(json) {
    return DataSvcQueryResponseFromJSONTyped(json);
}
function DataSvcQueryResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'objects': json['objects'] == null ? undefined : (json['objects'].map(DataSvcObjectFromJSON)),
    };
}
function DataSvcQueryResponseToJSON(json) {
    return DataSvcQueryResponseToJSONTyped(json, false);
}
function DataSvcQueryResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'objects': value['objects'] == null ? undefined : (value['objects'].map(DataSvcObjectToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcUpdateObjectsRequest interface.
 */
function instanceOfDataSvcUpdateObjectsRequest(value) {
    return true;
}
function DataSvcUpdateObjectsRequestFromJSON(json) {
    return DataSvcUpdateObjectsRequestFromJSONTyped(json);
}
function DataSvcUpdateObjectsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'filters': json['filters'] == null ? undefined : (json['filters'].map(DatastoreFilterFromJSON)),
        'object': json['object'] == null ? undefined : DataSvcObjectFromJSON(json['object']),
        'table': json['table'] == null ? undefined : json['table'],
    };
}
function DataSvcUpdateObjectsRequestToJSON(json) {
    return DataSvcUpdateObjectsRequestToJSONTyped(json, false);
}
function DataSvcUpdateObjectsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'filters': value['filters'] == null ? undefined : (value['filters'].map(DatastoreFilterToJSON)),
        'object': DataSvcObjectToJSON(value['object']),
        'table': value['table'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcUpsertObjectRequest interface.
 */
function instanceOfDataSvcUpsertObjectRequest(value) {
    return true;
}
function DataSvcUpsertObjectRequestFromJSON(json) {
    return DataSvcUpsertObjectRequestFromJSONTyped(json);
}
function DataSvcUpsertObjectRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'object': json['object'] == null ? undefined : DataSvcCreateObjectFieldsFromJSON(json['object']),
    };
}
function DataSvcUpsertObjectRequestToJSON(json) {
    return DataSvcUpsertObjectRequestToJSONTyped(json, false);
}
function DataSvcUpsertObjectRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'object': DataSvcCreateObjectFieldsToJSON(value['object']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DataSvcUpsertObjectResponse interface.
 */
function instanceOfDataSvcUpsertObjectResponse(value) {
    return true;
}
function DataSvcUpsertObjectResponseFromJSON(json) {
    return DataSvcUpsertObjectResponseFromJSONTyped(json);
}
function DataSvcUpsertObjectResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'object': json['object'] == null ? undefined : DataSvcObjectFromJSON(json['object']),
    };
}
function DataSvcUpsertObjectResponseToJSON(json) {
    return DataSvcUpsertObjectResponseToJSONTyped(json, false);
}
function DataSvcUpsertObjectResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'object': DataSvcObjectToJSON(value['object']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcAutoScalingConfig interface.
 */
function instanceOfDeploySvcAutoScalingConfig(value) {
    return true;
}
function DeploySvcAutoScalingConfigFromJSON(json) {
    return DeploySvcAutoScalingConfigFromJSONTyped(json);
}
function DeploySvcAutoScalingConfigFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cpuThreshold': json['cpuThreshold'] == null ? undefined : json['cpuThreshold'],
        'maxReplicas': json['maxReplicas'] == null ? undefined : json['maxReplicas'],
        'minReplicas': json['minReplicas'] == null ? undefined : json['minReplicas'],
    };
}
function DeploySvcAutoScalingConfigToJSON(json) {
    return DeploySvcAutoScalingConfigToJSONTyped(json, false);
}
function DeploySvcAutoScalingConfigToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cpuThreshold': value['cpuThreshold'],
        'maxReplicas': value['maxReplicas'],
        'minReplicas': value['minReplicas'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcDeleteDeploymentRequest interface.
 */
function instanceOfDeploySvcDeleteDeploymentRequest(value) {
    if (!('deploymentId' in value) || value['deploymentId'] === undefined)
        return false;
    return true;
}
function DeploySvcDeleteDeploymentRequestFromJSON(json) {
    return DeploySvcDeleteDeploymentRequestFromJSONTyped(json);
}
function DeploySvcDeleteDeploymentRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'deploymentId': json['deploymentId'],
    };
}
function DeploySvcDeleteDeploymentRequestToJSON(json) {
    return DeploySvcDeleteDeploymentRequestToJSONTyped(json, false);
}
function DeploySvcDeleteDeploymentRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'deploymentId': value['deploymentId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const DeploySvcStrategyType = {
    StrategyRollingUpdate: 'RollingUpdate',
    StrategyRecreate: 'Recreate'
};
function instanceOfDeploySvcStrategyType(value) {
    for (const key in DeploySvcStrategyType) {
        if (Object.prototype.hasOwnProperty.call(DeploySvcStrategyType, key)) {
            if (DeploySvcStrategyType[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function DeploySvcStrategyTypeFromJSON(json) {
    return DeploySvcStrategyTypeFromJSONTyped(json);
}
function DeploySvcStrategyTypeFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function DeploySvcStrategyTypeToJSON(value) {
    return value;
}
function DeploySvcStrategyTypeToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcDeploymentStrategy interface.
 */
function instanceOfDeploySvcDeploymentStrategy(value) {
    return true;
}
function DeploySvcDeploymentStrategyFromJSON(json) {
    return DeploySvcDeploymentStrategyFromJSONTyped(json);
}
function DeploySvcDeploymentStrategyFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'maxSurge': json['maxSurge'] == null ? undefined : json['maxSurge'],
        'maxUnavailable': json['maxUnavailable'] == null ? undefined : json['maxUnavailable'],
        'type': json['type'] == null ? undefined : DeploySvcStrategyTypeFromJSON(json['type']),
    };
}
function DeploySvcDeploymentStrategyToJSON(json) {
    return DeploySvcDeploymentStrategyToJSONTyped(json, false);
}
function DeploySvcDeploymentStrategyToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'maxSurge': value['maxSurge'],
        'maxUnavailable': value['maxUnavailable'],
        'type': DeploySvcStrategyTypeToJSON(value['type']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const DeploySvcDeploymentStatus = {
    DeploymentStatusOK: 'OK',
    DeploymentStatusError: 'Error',
    DeploymentStatusPending: 'Pending',
    DeploymentStatusFailed: 'Failed',
    DeploymentStatusDeploying: 'Deploying'
};
function instanceOfDeploySvcDeploymentStatus(value) {
    for (const key in DeploySvcDeploymentStatus) {
        if (Object.prototype.hasOwnProperty.call(DeploySvcDeploymentStatus, key)) {
            if (DeploySvcDeploymentStatus[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function DeploySvcDeploymentStatusFromJSON(json) {
    return DeploySvcDeploymentStatusFromJSONTyped(json);
}
function DeploySvcDeploymentStatusFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function DeploySvcDeploymentStatusToJSON(value) {
    return value;
}
function DeploySvcDeploymentStatusToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcTargetRegion interface.
 */
function instanceOfDeploySvcTargetRegion(value) {
    return true;
}
function DeploySvcTargetRegionFromJSON(json) {
    return DeploySvcTargetRegionFromJSONTyped(json);
}
function DeploySvcTargetRegionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cluster': json['cluster'] == null ? undefined : json['cluster'],
        'zone': json['zone'] == null ? undefined : json['zone'],
    };
}
function DeploySvcTargetRegionToJSON(json) {
    return DeploySvcTargetRegionToJSONTyped(json, false);
}
function DeploySvcTargetRegionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cluster': value['cluster'],
        'zone': value['zone'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcResourceLimits interface.
 */
function instanceOfDeploySvcResourceLimits(value) {
    return true;
}
function DeploySvcResourceLimitsFromJSON(json) {
    return DeploySvcResourceLimitsFromJSONTyped(json);
}
function DeploySvcResourceLimitsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cpu': json['cpu'] == null ? undefined : json['cpu'],
        'memory': json['memory'] == null ? undefined : json['memory'],
        'vram': json['vram'] == null ? undefined : json['vram'],
    };
}
function DeploySvcResourceLimitsToJSON(json) {
    return DeploySvcResourceLimitsToJSONTyped(json, false);
}
function DeploySvcResourceLimitsToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cpu': value['cpu'],
        'memory': value['memory'],
        'vram': value['vram'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcDeployment interface.
 */
function instanceOfDeploySvcDeployment(value) {
    if (!('definitionId' in value) || value['definitionId'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    return true;
}
function DeploySvcDeploymentFromJSON(json) {
    return DeploySvcDeploymentFromJSONTyped(json);
}
function DeploySvcDeploymentFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'autoScaling': json['autoScaling'] == null ? undefined : DeploySvcAutoScalingConfigFromJSON(json['autoScaling']),
        'definitionId': json['definitionId'],
        'description': json['description'] == null ? undefined : json['description'],
        'details': json['details'] == null ? undefined : json['details'],
        'envars': json['envars'] == null ? undefined : json['envars'],
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'replicas': json['replicas'] == null ? undefined : json['replicas'],
        'resources': json['resources'] == null ? undefined : DeploySvcResourceLimitsFromJSON(json['resources']),
        'status': json['status'] == null ? undefined : DeploySvcDeploymentStatusFromJSON(json['status']),
        'strategy': json['strategy'] == null ? undefined : DeploySvcDeploymentStrategyFromJSON(json['strategy']),
        'targetRegions': json['targetRegions'] == null ? undefined : (json['targetRegions'].map(DeploySvcTargetRegionFromJSON)),
    };
}
function DeploySvcDeploymentToJSON(json) {
    return DeploySvcDeploymentToJSONTyped(json, false);
}
function DeploySvcDeploymentToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'autoScaling': DeploySvcAutoScalingConfigToJSON(value['autoScaling']),
        'definitionId': value['definitionId'],
        'description': value['description'],
        'details': value['details'],
        'envars': value['envars'],
        'id': value['id'],
        'name': value['name'],
        'replicas': value['replicas'],
        'resources': DeploySvcResourceLimitsToJSON(value['resources']),
        'status': DeploySvcDeploymentStatusToJSON(value['status']),
        'strategy': DeploySvcDeploymentStrategyToJSON(value['strategy']),
        'targetRegions': value['targetRegions'] == null ? undefined : (value['targetRegions'].map(DeploySvcTargetRegionToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcErrorResponse interface.
 */
function instanceOfDeploySvcErrorResponse(value) {
    return true;
}
function DeploySvcErrorResponseFromJSON(json) {
    return DeploySvcErrorResponseFromJSONTyped(json);
}
function DeploySvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function DeploySvcErrorResponseToJSON(json) {
    return DeploySvcErrorResponseToJSONTyped(json, false);
}
function DeploySvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcListDeploymentsResponse interface.
 */
function instanceOfDeploySvcListDeploymentsResponse(value) {
    return true;
}
function DeploySvcListDeploymentsResponseFromJSON(json) {
    return DeploySvcListDeploymentsResponseFromJSONTyped(json);
}
function DeploySvcListDeploymentsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'deployments': json['deployments'] == null ? undefined : (json['deployments'].map(DeploySvcDeploymentFromJSON)),
    };
}
function DeploySvcListDeploymentsResponseToJSON(json) {
    return DeploySvcListDeploymentsResponseToJSONTyped(json, false);
}
function DeploySvcListDeploymentsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'deployments': value['deployments'] == null ? undefined : (value['deployments'].map(DeploySvcDeploymentToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcSaveDeploymentRequest interface.
 */
function instanceOfDeploySvcSaveDeploymentRequest(value) {
    return true;
}
function DeploySvcSaveDeploymentRequestFromJSON(json) {
    return DeploySvcSaveDeploymentRequestFromJSONTyped(json);
}
function DeploySvcSaveDeploymentRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'deployment': json['deployment'] == null ? undefined : DeploySvcDeploymentFromJSON(json['deployment']),
    };
}
function DeploySvcSaveDeploymentRequestToJSON(json) {
    return DeploySvcSaveDeploymentRequestToJSONTyped(json, false);
}
function DeploySvcSaveDeploymentRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'deployment': DeploySvcDeploymentToJSON(value['deployment']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the EmailSvcErrorResponse interface.
 */
function instanceOfEmailSvcErrorResponse(value) {
    return true;
}
function EmailSvcErrorResponseFromJSON(json) {
    return EmailSvcErrorResponseFromJSONTyped(json);
}
function EmailSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function EmailSvcErrorResponseToJSON(json) {
    return EmailSvcErrorResponseToJSONTyped(json, false);
}
function EmailSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the EmailSvcFile interface.
 */
function instanceOfEmailSvcFile(value) {
    if (!('content' in value) || value['content'] === undefined)
        return false;
    if (!('contentType' in value) || value['contentType'] === undefined)
        return false;
    if (!('filename' in value) || value['filename'] === undefined)
        return false;
    return true;
}
function EmailSvcFileFromJSON(json) {
    return EmailSvcFileFromJSONTyped(json);
}
function EmailSvcFileFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'content': json['content'],
        'contentType': json['contentType'],
        'filename': json['filename'],
    };
}
function EmailSvcFileToJSON(json) {
    return EmailSvcFileToJSONTyped(json, false);
}
function EmailSvcFileToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'content': value['content'],
        'contentType': value['contentType'],
        'filename': value['filename'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the EmailSvcSendEmailRequest interface.
 */
function instanceOfEmailSvcSendEmailRequest(value) {
    if (!('body' in value) || value['body'] === undefined)
        return false;
    if (!('contentType' in value) || value['contentType'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('subject' in value) || value['subject'] === undefined)
        return false;
    if (!('to' in value) || value['to'] === undefined)
        return false;
    return true;
}
function EmailSvcSendEmailRequestFromJSON(json) {
    return EmailSvcSendEmailRequestFromJSONTyped(json);
}
function EmailSvcSendEmailRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'attachments': json['attachments'] == null ? undefined : (json['attachments'].map(EmailSvcFileFromJSON)),
        'bcc': json['bcc'] == null ? undefined : json['bcc'],
        'body': json['body'],
        'cc': json['cc'] == null ? undefined : json['cc'],
        'contentType': json['contentType'],
        'createdAt': json['createdAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'subject': json['subject'],
        'to': json['to'],
    };
}
function EmailSvcSendEmailRequestToJSON(json) {
    return EmailSvcSendEmailRequestToJSONTyped(json, false);
}
function EmailSvcSendEmailRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'attachments': value['attachments'] == null ? undefined : (value['attachments'].map(EmailSvcFileToJSON)),
        'bcc': value['bcc'],
        'body': value['body'],
        'cc': value['cc'],
        'contentType': value['contentType'],
        'createdAt': value['createdAt'],
        'id': value['id'],
        'subject': value['subject'],
        'to': value['to'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the EmailSvcSendEmailResponse interface.
 */
function instanceOfEmailSvcSendEmailResponse(value) {
    return true;
}
function EmailSvcSendEmailResponseFromJSON(json) {
    return EmailSvcSendEmailResponseFromJSONTyped(json);
}
function EmailSvcSendEmailResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'emailId': json['emailId'] == null ? undefined : json['emailId'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}
function EmailSvcSendEmailResponseToJSON(json) {
    return EmailSvcSendEmailResponseToJSONTyped(json, false);
}
function EmailSvcSendEmailResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'emailId': value['emailId'],
        'status': value['status'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcDownload interface.
 */
function instanceOfFileSvcDownload(value) {
    return true;
}
function FileSvcDownloadFromJSON(json) {
    return FileSvcDownloadFromJSONTyped(json);
}
function FileSvcDownloadFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'downloadedBytes': json['downloadedBytes'] == null ? undefined : json['downloadedBytes'],
        'error': json['error'] == null ? undefined : json['error'],
        'fileName': json['fileName'] == null ? undefined : json['fileName'],
        'filePath': json['filePath'] == null ? undefined : json['filePath'],
        'fileSize': json['fileSize'] == null ? undefined : json['fileSize'],
        'id': json['id'] == null ? undefined : json['id'],
        'progress': json['progress'] == null ? undefined : json['progress'],
        'status': json['status'] == null ? undefined : json['status'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}
function FileSvcDownloadToJSON(json) {
    return FileSvcDownloadToJSONTyped(json, false);
}
function FileSvcDownloadToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'downloadedBytes': value['downloadedBytes'],
        'error': value['error'],
        'fileName': value['fileName'],
        'filePath': value['filePath'],
        'fileSize': value['fileSize'],
        'id': value['id'],
        'progress': value['progress'],
        'status': value['status'],
        'updatedAt': value['updatedAt'],
        'url': value['url'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcDownloadFileRequest interface.
 */
function instanceOfFileSvcDownloadFileRequest(value) {
    if (!('url' in value) || value['url'] === undefined)
        return false;
    return true;
}
function FileSvcDownloadFileRequestFromJSON(json) {
    return FileSvcDownloadFileRequestFromJSONTyped(json);
}
function FileSvcDownloadFileRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'folderPath': json['folderPath'] == null ? undefined : json['folderPath'],
        'url': json['url'],
    };
}
function FileSvcDownloadFileRequestToJSON(json) {
    return FileSvcDownloadFileRequestToJSONTyped(json, false);
}
function FileSvcDownloadFileRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'folderPath': value['folderPath'],
        'url': value['url'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcDownloadsResponse interface.
 */
function instanceOfFileSvcDownloadsResponse(value) {
    return true;
}
function FileSvcDownloadsResponseFromJSON(json) {
    return FileSvcDownloadsResponseFromJSONTyped(json);
}
function FileSvcDownloadsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'downloads': json['downloads'] == null ? undefined : (json['downloads'].map(FileSvcDownloadFromJSON)),
    };
}
function FileSvcDownloadsResponseToJSON(json) {
    return FileSvcDownloadsResponseToJSONTyped(json, false);
}
function FileSvcDownloadsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'downloads': value['downloads'] == null ? undefined : (value['downloads'].map(FileSvcDownloadToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcErrorResponse interface.
 */
function instanceOfFileSvcErrorResponse(value) {
    return true;
}
function FileSvcErrorResponseFromJSON(json) {
    return FileSvcErrorResponseFromJSONTyped(json);
}
function FileSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function FileSvcErrorResponseToJSON(json) {
    return FileSvcErrorResponseToJSONTyped(json, false);
}
function FileSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcGetDownloadResponse interface.
 */
function instanceOfFileSvcGetDownloadResponse(value) {
    if (!('_exists' in value) || value['_exists'] === undefined)
        return false;
    return true;
}
function FileSvcGetDownloadResponseFromJSON(json) {
    return FileSvcGetDownloadResponseFromJSONTyped(json);
}
function FileSvcGetDownloadResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'download': json['download'] == null ? undefined : FileSvcDownloadFromJSON(json['download']),
        '_exists': json['exists'],
    };
}
function FileSvcGetDownloadResponseToJSON(json) {
    return FileSvcGetDownloadResponseToJSONTyped(json, false);
}
function FileSvcGetDownloadResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'download': FileSvcDownloadToJSON(value['download']),
        'exists': value['_exists'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcListUploadsRequest interface.
 */
function instanceOfFileSvcListUploadsRequest(value) {
    return true;
}
function FileSvcListUploadsRequestFromJSON(json) {
    return FileSvcListUploadsRequestFromJSONTyped(json);
}
function FileSvcListUploadsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'after': json['after'] == null ? undefined : json['after'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}
function FileSvcListUploadsRequestToJSON(json) {
    return FileSvcListUploadsRequestToJSONTyped(json, false);
}
function FileSvcListUploadsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'after': value['after'],
        'limit': value['limit'],
        'userId': value['userId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcUpload interface.
 */
function instanceOfFileSvcUpload(value) {
    if (!('fileSize' in value) || value['fileSize'] === undefined)
        return false;
    return true;
}
function FileSvcUploadFromJSON(json) {
    return FileSvcUploadFromJSONTyped(json);
}
function FileSvcUploadFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'fileId': json['fileId'] == null ? undefined : json['fileId'],
        'fileName': json['fileName'] == null ? undefined : json['fileName'],
        'filePath': json['filePath'] == null ? undefined : json['filePath'],
        'fileSize': json['fileSize'],
        'id': json['id'] == null ? undefined : json['id'],
        'nodeId': json['nodeId'] == null ? undefined : json['nodeId'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}
function FileSvcUploadToJSON(json) {
    return FileSvcUploadToJSONTyped(json, false);
}
function FileSvcUploadToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'fileId': value['fileId'],
        'fileName': value['fileName'],
        'filePath': value['filePath'],
        'fileSize': value['fileSize'],
        'id': value['id'],
        'nodeId': value['nodeId'],
        'updatedAt': value['updatedAt'],
        'userId': value['userId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcListUploadsResponse interface.
 */
function instanceOfFileSvcListUploadsResponse(value) {
    return true;
}
function FileSvcListUploadsResponseFromJSON(json) {
    return FileSvcListUploadsResponseFromJSONTyped(json);
}
function FileSvcListUploadsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'uploads': json['uploads'] == null ? undefined : (json['uploads'].map(FileSvcUploadFromJSON)),
    };
}
function FileSvcListUploadsResponseToJSON(json) {
    return FileSvcListUploadsResponseToJSONTyped(json, false);
}
function FileSvcListUploadsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'uploads': value['uploads'] == null ? undefined : (value['uploads'].map(FileSvcUploadToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FileSvcUploadFileResponse interface.
 */
function instanceOfFileSvcUploadFileResponse(value) {
    return true;
}
function FileSvcUploadFileResponseFromJSON(json) {
    return FileSvcUploadFileResponseFromJSONTyped(json);
}
function FileSvcUploadFileResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'upload': json['upload'] == null ? undefined : FileSvcUploadFromJSON(json['upload']),
    };
}
function FileSvcUploadFileResponseToJSON(json) {
    return FileSvcUploadFileResponseToJSONTyped(json, false);
}
function FileSvcUploadFileResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'upload': FileSvcUploadToJSON(value['upload']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FirehoseSvcErrorResponse interface.
 */
function instanceOfFirehoseSvcErrorResponse(value) {
    return true;
}
function FirehoseSvcErrorResponseFromJSON(json) {
    return FirehoseSvcErrorResponseFromJSONTyped(json);
}
function FirehoseSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function FirehoseSvcErrorResponseToJSON(json) {
    return FirehoseSvcErrorResponseToJSONTyped(json, false);
}
function FirehoseSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FirehoseSvcEvent interface.
 */
function instanceOfFirehoseSvcEvent(value) {
    return true;
}
function FirehoseSvcEventFromJSON(json) {
    return FirehoseSvcEventFromJSONTyped(json);
}
function FirehoseSvcEventFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'data': json['data'] == null ? undefined : json['data'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}
function FirehoseSvcEventToJSON(json) {
    return FirehoseSvcEventToJSONTyped(json, false);
}
function FirehoseSvcEventToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'data': value['data'],
        'name': value['name'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the FirehoseSvcEventPublishRequest interface.
 */
function instanceOfFirehoseSvcEventPublishRequest(value) {
    return true;
}
function FirehoseSvcEventPublishRequestFromJSON(json) {
    return FirehoseSvcEventPublishRequestFromJSONTyped(json);
}
function FirehoseSvcEventPublishRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'event': json['event'] == null ? undefined : FirehoseSvcEventFromJSON(json['event']),
    };
}
function FirehoseSvcEventPublishRequestToJSON(json) {
    return FirehoseSvcEventPublishRequestToJSONTyped(json, false);
}
function FirehoseSvcEventPublishRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'event': FirehoseSvcEventToJSON(value['event']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcKeep interface.
 */
function instanceOfModelSvcKeep(value) {
    return true;
}
function ModelSvcKeepFromJSON(json) {
    return ModelSvcKeepFromJSONTyped(json);
}
function ModelSvcKeepFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'path': json['path'] == null ? undefined : json['path'],
        'readOnly': json['readOnly'] == null ? undefined : json['readOnly'],
    };
}
function ModelSvcKeepToJSON(json) {
    return ModelSvcKeepToJSONTyped(json, false);
}
function ModelSvcKeepToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'path': value['path'],
        'readOnly': value['readOnly'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcEnvVar interface.
 */
function instanceOfModelSvcEnvVar(value) {
    return true;
}
function ModelSvcEnvVarFromJSON(json) {
    return ModelSvcEnvVarFromJSONTyped(json);
}
function ModelSvcEnvVarFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'key': json['key'] == null ? undefined : json['key'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}
function ModelSvcEnvVarToJSON(json) {
    return ModelSvcEnvVarToJSONTyped(json, false);
}
function ModelSvcEnvVarToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'key': value['key'],
        'value': value['value'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcContainer interface.
 */
function instanceOfModelSvcContainer(value) {
    return true;
}
function ModelSvcContainerFromJSON(json) {
    return ModelSvcContainerFromJSONTyped(json);
}
function ModelSvcContainerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'envars': json['envars'] == null ? undefined : (json['envars'].map(ModelSvcEnvVarFromJSON)),
        'imageTemplate': json['imageTemplate'] == null ? undefined : json['imageTemplate'],
        'keeps': json['keeps'] == null ? undefined : (json['keeps'].map(ModelSvcKeepFromJSON)),
        'port': json['port'] == null ? undefined : json['port'],
    };
}
function ModelSvcContainerToJSON(json) {
    return ModelSvcContainerToJSONTyped(json, false);
}
function ModelSvcContainerToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'envars': value['envars'] == null ? undefined : (value['envars'].map(ModelSvcEnvVarToJSON)),
        'imageTemplate': value['imageTemplate'],
        'keeps': value['keeps'] == null ? undefined : (value['keeps'].map(ModelSvcKeepToJSON)),
        'port': value['port'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcCudaParameters interface.
 */
function instanceOfModelSvcCudaParameters(value) {
    return true;
}
function ModelSvcCudaParametersFromJSON(json) {
    return ModelSvcCudaParametersFromJSONTyped(json);
}
function ModelSvcCudaParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'container': json['container'] == null ? undefined : ModelSvcContainerFromJSON(json['container']),
        'cudaVersionPrecision': json['cudaVersionPrecision'] == null ? undefined : json['cudaVersionPrecision'],
        'defaultCudaVersion': json['defaultCudaVersion'] == null ? undefined : json['defaultCudaVersion'],
        'defaultCudnnVersion': json['defaultCudnnVersion'] == null ? undefined : json['defaultCudnnVersion'],
    };
}
function ModelSvcCudaParametersToJSON(json) {
    return ModelSvcCudaParametersToJSONTyped(json, false);
}
function ModelSvcCudaParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'container': ModelSvcContainerToJSON(value['container']),
        'cudaVersionPrecision': value['cudaVersionPrecision'],
        'defaultCudaVersion': value['defaultCudaVersion'],
        'defaultCudnnVersion': value['defaultCudnnVersion'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcDefaultParameters interface.
 */
function instanceOfModelSvcDefaultParameters(value) {
    return true;
}
function ModelSvcDefaultParametersFromJSON(json) {
    return ModelSvcDefaultParametersFromJSONTyped(json);
}
function ModelSvcDefaultParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'container': json['container'] == null ? undefined : ModelSvcContainerFromJSON(json['container']),
    };
}
function ModelSvcDefaultParametersToJSON(json) {
    return ModelSvcDefaultParametersToJSONTyped(json, false);
}
function ModelSvcDefaultParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'container': ModelSvcContainerToJSON(value['container']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcArchitectures interface.
 */
function instanceOfModelSvcArchitectures(value) {
    return true;
}
function ModelSvcArchitecturesFromJSON(json) {
    return ModelSvcArchitecturesFromJSONTyped(json);
}
function ModelSvcArchitecturesFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cuda': json['cuda'] == null ? undefined : ModelSvcCudaParametersFromJSON(json['cuda']),
        '_default': json['default'] == null ? undefined : ModelSvcDefaultParametersFromJSON(json['default']),
    };
}
function ModelSvcArchitecturesToJSON(json) {
    return ModelSvcArchitecturesToJSONTyped(json, false);
}
function ModelSvcArchitecturesToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cuda': ModelSvcCudaParametersToJSON(value['cuda']),
        'default': ModelSvcDefaultParametersToJSON(value['_default']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcAsset interface.
 */
function instanceOfModelSvcAsset(value) {
    if (!('envVarKey' in value) || value['envVarKey'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    return true;
}
function ModelSvcAssetFromJSON(json) {
    return ModelSvcAssetFromJSONTyped(json);
}
function ModelSvcAssetFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'envVarKey': json['envVarKey'],
        'url': json['url'],
    };
}
function ModelSvcAssetToJSON(json) {
    return ModelSvcAssetToJSONTyped(json, false);
}
function ModelSvcAssetToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'envVarKey': value['envVarKey'],
        'url': value['url'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcErrorResponse interface.
 */
function instanceOfModelSvcErrorResponse(value) {
    return true;
}
function ModelSvcErrorResponseFromJSON(json) {
    return ModelSvcErrorResponseFromJSONTyped(json);
}
function ModelSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function ModelSvcErrorResponseToJSON(json) {
    return ModelSvcErrorResponseToJSONTyped(json, false);
}
function ModelSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcModel interface.
 */
function instanceOfModelSvcModel(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('platformId' in value) || value['platformId'] === undefined)
        return false;
    return true;
}
function ModelSvcModelFromJSON(json) {
    return ModelSvcModelFromJSONTyped(json);
}
function ModelSvcModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'assets': json['assets'] == null ? undefined : (json['assets'].map(ModelSvcAssetFromJSON)),
        'bits': json['bits'] == null ? undefined : json['bits'],
        'description': json['description'] == null ? undefined : json['description'],
        'extension': json['extension'] == null ? undefined : json['extension'],
        'flavour': json['flavour'] == null ? undefined : json['flavour'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'id': json['id'],
        'maxBits': json['maxBits'] == null ? undefined : json['maxBits'],
        'maxRam': json['maxRam'] == null ? undefined : json['maxRam'],
        'mirrors': json['mirrors'] == null ? undefined : json['mirrors'],
        'name': json['name'],
        'parameters': json['parameters'] == null ? undefined : json['parameters'],
        'platformId': json['platformId'],
        'promptTemplate': json['promptTemplate'] == null ? undefined : json['promptTemplate'],
        'quality': json['quality'] == null ? undefined : json['quality'],
        'quantComment': json['quantComment'] == null ? undefined : json['quantComment'],
        'size': json['size'] == null ? undefined : json['size'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'uncensored': json['uncensored'] == null ? undefined : json['uncensored'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}
function ModelSvcModelToJSON(json) {
    return ModelSvcModelToJSONTyped(json, false);
}
function ModelSvcModelToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'assets': value['assets'] == null ? undefined : (value['assets'].map(ModelSvcAssetToJSON)),
        'bits': value['bits'],
        'description': value['description'],
        'extension': value['extension'],
        'flavour': value['flavour'],
        'fullName': value['fullName'],
        'id': value['id'],
        'maxBits': value['maxBits'],
        'maxRam': value['maxRam'],
        'mirrors': value['mirrors'],
        'name': value['name'],
        'parameters': value['parameters'],
        'platformId': value['platformId'],
        'promptTemplate': value['promptTemplate'],
        'quality': value['quality'],
        'quantComment': value['quantComment'],
        'size': value['size'],
        'tags': value['tags'],
        'uncensored': value['uncensored'],
        'version': value['version'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const PromptSvcPromptType = {
    PromptTypeImageTextToText: 'Image-Text-to-Text',
    PromptTypeVisualQuestionAnswering: 'Visual Question Answering',
    PromptTypeDocumentQuestionAnswering: 'Document Question Answering',
    PromptTypeTextToImage: 'Text-to-Image',
    PromptTypeImageToImage: 'Image-to-Image',
    PromptTypeImageToVideo: 'Image-to-Video',
    PromptTypeUnconditionalImageGeneration: 'Unconditional Image Generation',
    PromptTypeTextToVideo: 'Text-to-Video',
    PromptTypeZeroShotImageClassification: 'Zero-Shot Image Classification',
    PromptTypeZeroShotObjectDetection: 'Zero-Shot Object Detection',
    PromptTypeTextTo3D: 'Text-to-3D',
    PromptTypeImageTo3D: 'Image-to-3D',
    PromptTypeImageFeatureExtraction: 'Image Feature Extraction',
    PromptTypeKeypointDetection: 'Keypoint Detection',
    PromptTypeTextToText: 'Text-to-Text',
    PromptTypeQuestionAnswering: 'Question Answering',
    PromptTypeTranslation: 'Translation',
    PromptTypeSummarization: 'Summarization',
    PromptTypeTextGeneration: 'Text Generation',
    PromptTypeFillMask: 'Fill-Mask',
    PromptTypeTextToSpeech: 'Text-to-Speech',
    PromptTypeTextToAudio: 'Text-to-Audio',
    PromptTypeAutomaticSpeechRecognition: 'Automatic Speech Recognition',
    PromptTypeAudioToAudio: 'Audio-to-Audio',
    PromptTypeAudioClassification: 'Audio Classification',
    PromptTypeReinforcementLearning: 'Reinforcement Learning',
    PromptTypeRobotics: 'Robotics',
    PromptTypeGraphMachineLearning: 'Graph Machine Learning'
};
function instanceOfPromptSvcPromptType(value) {
    for (const key in PromptSvcPromptType) {
        if (Object.prototype.hasOwnProperty.call(PromptSvcPromptType, key)) {
            if (PromptSvcPromptType[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function PromptSvcPromptTypeFromJSON(json) {
    return PromptSvcPromptTypeFromJSONTyped(json);
}
function PromptSvcPromptTypeFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function PromptSvcPromptTypeToJSON(value) {
    return value;
}
function PromptSvcPromptTypeToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcPlatform interface.
 */
function instanceOfModelSvcPlatform(value) {
    return true;
}
function ModelSvcPlatformFromJSON(json) {
    return ModelSvcPlatformFromJSONTyped(json);
}
function ModelSvcPlatformFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'architectures': json['architectures'] == null ? undefined : ModelSvcArchitecturesFromJSON(json['architectures']),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'types': json['types'] == null ? undefined : (json['types'].map(PromptSvcPromptTypeFromJSON)),
        'version': json['version'] == null ? undefined : json['version'],
    };
}
function ModelSvcPlatformToJSON(json) {
    return ModelSvcPlatformToJSONTyped(json, false);
}
function ModelSvcPlatformToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'architectures': ModelSvcArchitecturesToJSON(value['architectures']),
        'id': value['id'],
        'name': value['name'],
        'types': value['types'] == null ? undefined : (value['types'].map(PromptSvcPromptTypeToJSON)),
        'version': value['version'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcGetModelResponse interface.
 */
function instanceOfModelSvcGetModelResponse(value) {
    if (!('_exists' in value) || value['_exists'] === undefined)
        return false;
    if (!('model' in value) || value['model'] === undefined)
        return false;
    if (!('platform' in value) || value['platform'] === undefined)
        return false;
    return true;
}
function ModelSvcGetModelResponseFromJSON(json) {
    return ModelSvcGetModelResponseFromJSONTyped(json);
}
function ModelSvcGetModelResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        '_exists': json['exists'],
        'model': ModelSvcModelFromJSON(json['model']),
        'platform': ModelSvcPlatformFromJSON(json['platform']),
    };
}
function ModelSvcGetModelResponseToJSON(json) {
    return ModelSvcGetModelResponseToJSONTyped(json, false);
}
function ModelSvcGetModelResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'exists': value['_exists'],
        'model': ModelSvcModelToJSON(value['model']),
        'platform': ModelSvcPlatformToJSON(value['platform']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcListModelsResponse interface.
 */
function instanceOfModelSvcListModelsResponse(value) {
    return true;
}
function ModelSvcListModelsResponseFromJSON(json) {
    return ModelSvcListModelsResponseFromJSONTyped(json);
}
function ModelSvcListModelsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'models': json['models'] == null ? undefined : (json['models'].map(ModelSvcModelFromJSON)),
    };
}
function ModelSvcListModelsResponseToJSON(json) {
    return ModelSvcListModelsResponseToJSONTyped(json, false);
}
function ModelSvcListModelsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'models': value['models'] == null ? undefined : (value['models'].map(ModelSvcModelToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcListPlatformsResponse interface.
 */
function instanceOfModelSvcListPlatformsResponse(value) {
    if (!('platforms' in value) || value['platforms'] === undefined)
        return false;
    return true;
}
function ModelSvcListPlatformsResponseFromJSON(json) {
    return ModelSvcListPlatformsResponseFromJSONTyped(json);
}
function ModelSvcListPlatformsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'platforms': (json['platforms'].map(ModelSvcPlatformFromJSON)),
    };
}
function ModelSvcListPlatformsResponseToJSON(json) {
    return ModelSvcListPlatformsResponseToJSONTyped(json, false);
}
function ModelSvcListPlatformsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'platforms': (value['platforms'].map(ModelSvcPlatformToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcModelStatus interface.
 */
function instanceOfModelSvcModelStatus(value) {
    if (!('address' in value) || value['address'] === undefined)
        return false;
    if (!('assetsReady' in value) || value['assetsReady'] === undefined)
        return false;
    if (!('running' in value) || value['running'] === undefined)
        return false;
    return true;
}
function ModelSvcModelStatusFromJSON(json) {
    return ModelSvcModelStatusFromJSONTyped(json);
}
function ModelSvcModelStatusFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'address': json['address'],
        'assetsReady': json['assetsReady'],
        'running': json['running'],
    };
}
function ModelSvcModelStatusToJSON(json) {
    return ModelSvcModelStatusToJSONTyped(json, false);
}
function ModelSvcModelStatusToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'address': value['address'],
        'assetsReady': value['assetsReady'],
        'running': value['running'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ModelSvcStatusResponse interface.
 */
function instanceOfModelSvcStatusResponse(value) {
    return true;
}
function ModelSvcStatusResponseFromJSON(json) {
    return ModelSvcStatusResponseFromJSONTyped(json);
}
function ModelSvcStatusResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'status': json['status'] == null ? undefined : ModelSvcModelStatusFromJSON(json['status']),
    };
}
function ModelSvcStatusResponseToJSON(json) {
    return ModelSvcStatusResponseToJSONTyped(json, false);
}
function ModelSvcStatusResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'status': ModelSvcModelStatusToJSON(value['status']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PolicySvcBlocklistParameters interface.
 */
function instanceOfPolicySvcBlocklistParameters(value) {
    return true;
}
function PolicySvcBlocklistParametersFromJSON(json) {
    return PolicySvcBlocklistParametersFromJSONTyped(json);
}
function PolicySvcBlocklistParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'blockedIPs': json['blockedIPs'] == null ? undefined : json['blockedIPs'],
    };
}
function PolicySvcBlocklistParametersToJSON(json) {
    return PolicySvcBlocklistParametersToJSONTyped(json, false);
}
function PolicySvcBlocklistParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'blockedIPs': value['blockedIPs'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PolicySvcCheckRequest interface.
 */
function instanceOfPolicySvcCheckRequest(value) {
    return true;
}
function PolicySvcCheckRequestFromJSON(json) {
    return PolicySvcCheckRequestFromJSONTyped(json);
}
function PolicySvcCheckRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'endpoint': json['endpoint'] == null ? undefined : json['endpoint'],
        'ip': json['ip'] == null ? undefined : json['ip'],
        'method': json['method'] == null ? undefined : json['method'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}
function PolicySvcCheckRequestToJSON(json) {
    return PolicySvcCheckRequestToJSONTyped(json, false);
}
function PolicySvcCheckRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'endpoint': value['endpoint'],
        'ip': value['ip'],
        'method': value['method'],
        'userId': value['userId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PolicySvcCheckResponse interface.
 */
function instanceOfPolicySvcCheckResponse(value) {
    if (!('allowed' in value) || value['allowed'] === undefined)
        return false;
    return true;
}
function PolicySvcCheckResponseFromJSON(json) {
    return PolicySvcCheckResponseFromJSONTyped(json);
}
function PolicySvcCheckResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'allowed': json['allowed'],
    };
}
function PolicySvcCheckResponseToJSON(json) {
    return PolicySvcCheckResponseToJSONTyped(json, false);
}
function PolicySvcCheckResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'allowed': value['allowed'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const PolicySvcEntity = {
    EntityUserID: 'userId',
    EntityIP: 'ip'
};
function instanceOfPolicySvcEntity(value) {
    for (const key in PolicySvcEntity) {
        if (Object.prototype.hasOwnProperty.call(PolicySvcEntity, key)) {
            if (PolicySvcEntity[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function PolicySvcEntityFromJSON(json) {
    return PolicySvcEntityFromJSONTyped(json);
}
function PolicySvcEntityFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function PolicySvcEntityToJSON(value) {
    return value;
}
function PolicySvcEntityToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PolicySvcErrorResponse interface.
 */
function instanceOfPolicySvcErrorResponse(value) {
    return true;
}
function PolicySvcErrorResponseFromJSON(json) {
    return PolicySvcErrorResponseFromJSONTyped(json);
}
function PolicySvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function PolicySvcErrorResponseToJSON(json) {
    return PolicySvcErrorResponseToJSONTyped(json, false);
}
function PolicySvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const PolicySvcTemplateId = {
    TemplateIdRateLimit: 'rate-limit',
    TemplateIdBlocklist: 'blocklist'
};
function instanceOfPolicySvcTemplateId(value) {
    for (const key in PolicySvcTemplateId) {
        if (Object.prototype.hasOwnProperty.call(PolicySvcTemplateId, key)) {
            if (PolicySvcTemplateId[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function PolicySvcTemplateIdFromJSON(json) {
    return PolicySvcTemplateIdFromJSONTyped(json);
}
function PolicySvcTemplateIdFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function PolicySvcTemplateIdToJSON(value) {
    return value;
}
function PolicySvcTemplateIdToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const PolicySvcScope = {
    ScopeEndpoint: 'endpoint',
    ScopeGlobal: 'global'
};
function instanceOfPolicySvcScope(value) {
    for (const key in PolicySvcScope) {
        if (Object.prototype.hasOwnProperty.call(PolicySvcScope, key)) {
            if (PolicySvcScope[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function PolicySvcScopeFromJSON(json) {
    return PolicySvcScopeFromJSONTyped(json);
}
function PolicySvcScopeFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function PolicySvcScopeToJSON(value) {
    return value;
}
function PolicySvcScopeToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PolicySvcRateLimitParameters interface.
 */
function instanceOfPolicySvcRateLimitParameters(value) {
    return true;
}
function PolicySvcRateLimitParametersFromJSON(json) {
    return PolicySvcRateLimitParametersFromJSONTyped(json);
}
function PolicySvcRateLimitParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'entity': json['entity'] == null ? undefined : PolicySvcEntityFromJSON(json['entity']),
        'maxRequests': json['maxRequests'] == null ? undefined : json['maxRequests'],
        'scope': json['scope'] == null ? undefined : PolicySvcScopeFromJSON(json['scope']),
        'timeWindow': json['timeWindow'] == null ? undefined : json['timeWindow'],
    };
}
function PolicySvcRateLimitParametersToJSON(json) {
    return PolicySvcRateLimitParametersToJSONTyped(json, false);
}
function PolicySvcRateLimitParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'entity': PolicySvcEntityToJSON(value['entity']),
        'maxRequests': value['maxRequests'],
        'scope': PolicySvcScopeToJSON(value['scope']),
        'timeWindow': value['timeWindow'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PolicySvcParameters interface.
 */
function instanceOfPolicySvcParameters(value) {
    return true;
}
function PolicySvcParametersFromJSON(json) {
    return PolicySvcParametersFromJSONTyped(json);
}
function PolicySvcParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'blocklist': json['blocklist'] == null ? undefined : PolicySvcBlocklistParametersFromJSON(json['blocklist']),
        'rateLimit': json['rateLimit'] == null ? undefined : PolicySvcRateLimitParametersFromJSON(json['rateLimit']),
    };
}
function PolicySvcParametersToJSON(json) {
    return PolicySvcParametersToJSONTyped(json, false);
}
function PolicySvcParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'blocklist': PolicySvcBlocklistParametersToJSON(value['blocklist']),
        'rateLimit': PolicySvcRateLimitParametersToJSON(value['rateLimit']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PolicySvcInstance interface.
 */
function instanceOfPolicySvcInstance(value) {
    if (!('parameters' in value) || value['parameters'] === undefined)
        return false;
    if (!('templateId' in value) || value['templateId'] === undefined)
        return false;
    return true;
}
function PolicySvcInstanceFromJSON(json) {
    return PolicySvcInstanceFromJSONTyped(json);
}
function PolicySvcInstanceFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'endpoint': json['endpoint'] == null ? undefined : json['endpoint'],
        'id': json['id'] == null ? undefined : json['id'],
        'parameters': PolicySvcParametersFromJSON(json['parameters']),
        'templateId': PolicySvcTemplateIdFromJSON(json['templateId']),
    };
}
function PolicySvcInstanceToJSON(json) {
    return PolicySvcInstanceToJSONTyped(json, false);
}
function PolicySvcInstanceToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'endpoint': value['endpoint'],
        'id': value['id'],
        'parameters': PolicySvcParametersToJSON(value['parameters']),
        'templateId': PolicySvcTemplateIdToJSON(value['templateId']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PolicySvcUpsertInstanceRequest interface.
 */
function instanceOfPolicySvcUpsertInstanceRequest(value) {
    return true;
}
function PolicySvcUpsertInstanceRequestFromJSON(json) {
    return PolicySvcUpsertInstanceRequestFromJSONTyped(json);
}
function PolicySvcUpsertInstanceRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'instance': json['instance'] == null ? undefined : PolicySvcInstanceFromJSON(json['instance']),
    };
}
function PolicySvcUpsertInstanceRequestToJSON(json) {
    return PolicySvcUpsertInstanceRequestToJSONTyped(json, false);
}
function PolicySvcUpsertInstanceRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'instance': PolicySvcInstanceToJSON(value['instance']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcLlamaCppParameters interface.
 */
function instanceOfPromptSvcLlamaCppParameters(value) {
    return true;
}
function PromptSvcLlamaCppParametersFromJSON(json) {
    return PromptSvcLlamaCppParametersFromJSONTyped(json);
}
function PromptSvcLlamaCppParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'template': json['template'] == null ? undefined : json['template'],
    };
}
function PromptSvcLlamaCppParametersToJSON(json) {
    return PromptSvcLlamaCppParametersToJSONTyped(json, false);
}
function PromptSvcLlamaCppParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'template': value['template'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the StableDiffusionTxt2ImgRequest interface.
 */
function instanceOfStableDiffusionTxt2ImgRequest(value) {
    return true;
}
function StableDiffusionTxt2ImgRequestFromJSON(json) {
    return StableDiffusionTxt2ImgRequestFromJSONTyped(json);
}
function StableDiffusionTxt2ImgRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'alwayson_scripts': json['alwayson_scripts'] == null ? undefined : json['alwayson_scripts'],
        'batch_size': json['batch_size'] == null ? undefined : json['batch_size'],
        'cfg_scale': json['cfg_scale'] == null ? undefined : json['cfg_scale'],
        'comments': json['comments'] == null ? undefined : json['comments'],
        'denoising_strength': json['denoising_strength'] == null ? undefined : json['denoising_strength'],
        'disable_extra_networks': json['disable_extra_networks'] == null ? undefined : json['disable_extra_networks'],
        'do_not_save_grid': json['do_not_save_grid'] == null ? undefined : json['do_not_save_grid'],
        'do_not_save_samples': json['do_not_save_samples'] == null ? undefined : json['do_not_save_samples'],
        'enable_hr': json['enable_hr'] == null ? undefined : json['enable_hr'],
        'eta': json['eta'] == null ? undefined : json['eta'],
        'firstpass_image': json['firstpass_image'] == null ? undefined : json['firstpass_image'],
        'firstphase_height': json['firstphase_height'] == null ? undefined : json['firstphase_height'],
        'firstphase_width': json['firstphase_width'] == null ? undefined : json['firstphase_width'],
        'force_task_id': json['force_task_id'] == null ? undefined : json['force_task_id'],
        'height': json['height'] == null ? undefined : json['height'],
        'hr_checkpoint_name': json['hr_checkpoint_name'] == null ? undefined : json['hr_checkpoint_name'],
        'hr_negative_prompt': json['hr_negative_prompt'] == null ? undefined : json['hr_negative_prompt'],
        'hr_prompt': json['hr_prompt'] == null ? undefined : json['hr_prompt'],
        'hr_resize_x': json['hr_resize_x'] == null ? undefined : json['hr_resize_x'],
        'hr_resize_y': json['hr_resize_y'] == null ? undefined : json['hr_resize_y'],
        'hr_sampler_name': json['hr_sampler_name'] == null ? undefined : json['hr_sampler_name'],
        'hr_scale': json['hr_scale'] == null ? undefined : json['hr_scale'],
        'hr_scheduler': json['hr_scheduler'] == null ? undefined : json['hr_scheduler'],
        'hr_second_pass_steps': json['hr_second_pass_steps'] == null ? undefined : json['hr_second_pass_steps'],
        'hr_upscaler': json['hr_upscaler'] == null ? undefined : json['hr_upscaler'],
        'infotext': json['infotext'] == null ? undefined : json['infotext'],
        'n_iter': json['n_iter'] == null ? undefined : json['n_iter'],
        'negative_prompt': json['negative_prompt'] == null ? undefined : json['negative_prompt'],
        'override_settings': json['override_settings'] == null ? undefined : json['override_settings'],
        'override_settings_restore_afterwards': json['override_settings_restore_afterwards'] == null ? undefined : json['override_settings_restore_afterwards'],
        'prompt': json['prompt'] == null ? undefined : json['prompt'],
        'refiner_checkpoint': json['refiner_checkpoint'] == null ? undefined : json['refiner_checkpoint'],
        'refiner_switch_at': json['refiner_switch_at'] == null ? undefined : json['refiner_switch_at'],
        'restore_faces': json['restore_faces'] == null ? undefined : json['restore_faces'],
        's_churn': json['s_churn'] == null ? undefined : json['s_churn'],
        's_min_uncond': json['s_min_uncond'] == null ? undefined : json['s_min_uncond'],
        's_noise': json['s_noise'] == null ? undefined : json['s_noise'],
        's_tmax': json['s_tmax'] == null ? undefined : json['s_tmax'],
        's_tmin': json['s_tmin'] == null ? undefined : json['s_tmin'],
        'sampler_index': json['sampler_index'] == null ? undefined : json['sampler_index'],
        'sampler_name': json['sampler_name'] == null ? undefined : json['sampler_name'],
        'save_images': json['save_images'] == null ? undefined : json['save_images'],
        'scheduler': json['scheduler'] == null ? undefined : json['scheduler'],
        'script_args': json['script_args'] == null ? undefined : json['script_args'],
        'script_name': json['script_name'] == null ? undefined : json['script_name'],
        'seed': json['seed'] == null ? undefined : json['seed'],
        'seed_resize_from_h': json['seed_resize_from_h'] == null ? undefined : json['seed_resize_from_h'],
        'seed_resize_from_w': json['seed_resize_from_w'] == null ? undefined : json['seed_resize_from_w'],
        'send_images': json['send_images'] == null ? undefined : json['send_images'],
        'steps': json['steps'] == null ? undefined : json['steps'],
        'styles': json['styles'] == null ? undefined : json['styles'],
        'subseed': json['subseed'] == null ? undefined : json['subseed'],
        'subseed_strength': json['subseed_strength'] == null ? undefined : json['subseed_strength'],
        'tiling': json['tiling'] == null ? undefined : json['tiling'],
        'width': json['width'] == null ? undefined : json['width'],
    };
}
function StableDiffusionTxt2ImgRequestToJSON(json) {
    return StableDiffusionTxt2ImgRequestToJSONTyped(json, false);
}
function StableDiffusionTxt2ImgRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'alwayson_scripts': value['alwayson_scripts'],
        'batch_size': value['batch_size'],
        'cfg_scale': value['cfg_scale'],
        'comments': value['comments'],
        'denoising_strength': value['denoising_strength'],
        'disable_extra_networks': value['disable_extra_networks'],
        'do_not_save_grid': value['do_not_save_grid'],
        'do_not_save_samples': value['do_not_save_samples'],
        'enable_hr': value['enable_hr'],
        'eta': value['eta'],
        'firstpass_image': value['firstpass_image'],
        'firstphase_height': value['firstphase_height'],
        'firstphase_width': value['firstphase_width'],
        'force_task_id': value['force_task_id'],
        'height': value['height'],
        'hr_checkpoint_name': value['hr_checkpoint_name'],
        'hr_negative_prompt': value['hr_negative_prompt'],
        'hr_prompt': value['hr_prompt'],
        'hr_resize_x': value['hr_resize_x'],
        'hr_resize_y': value['hr_resize_y'],
        'hr_sampler_name': value['hr_sampler_name'],
        'hr_scale': value['hr_scale'],
        'hr_scheduler': value['hr_scheduler'],
        'hr_second_pass_steps': value['hr_second_pass_steps'],
        'hr_upscaler': value['hr_upscaler'],
        'infotext': value['infotext'],
        'n_iter': value['n_iter'],
        'negative_prompt': value['negative_prompt'],
        'override_settings': value['override_settings'],
        'override_settings_restore_afterwards': value['override_settings_restore_afterwards'],
        'prompt': value['prompt'],
        'refiner_checkpoint': value['refiner_checkpoint'],
        'refiner_switch_at': value['refiner_switch_at'],
        'restore_faces': value['restore_faces'],
        's_churn': value['s_churn'],
        's_min_uncond': value['s_min_uncond'],
        's_noise': value['s_noise'],
        's_tmax': value['s_tmax'],
        's_tmin': value['s_tmin'],
        'sampler_index': value['sampler_index'],
        'sampler_name': value['sampler_name'],
        'save_images': value['save_images'],
        'scheduler': value['scheduler'],
        'script_args': value['script_args'],
        'script_name': value['script_name'],
        'seed': value['seed'],
        'seed_resize_from_h': value['seed_resize_from_h'],
        'seed_resize_from_w': value['seed_resize_from_w'],
        'send_images': value['send_images'],
        'steps': value['steps'],
        'styles': value['styles'],
        'subseed': value['subseed'],
        'subseed_strength': value['subseed_strength'],
        'tiling': value['tiling'],
        'width': value['width'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcStableDiffusionParameters interface.
 */
function instanceOfPromptSvcStableDiffusionParameters(value) {
    return true;
}
function PromptSvcStableDiffusionParametersFromJSON(json) {
    return PromptSvcStableDiffusionParametersFromJSONTyped(json);
}
function PromptSvcStableDiffusionParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'txt2Img': json['txt2Img'] == null ? undefined : StableDiffusionTxt2ImgRequestFromJSON(json['txt2Img']),
    };
}
function PromptSvcStableDiffusionParametersToJSON(json) {
    return PromptSvcStableDiffusionParametersToJSONTyped(json, false);
}
function PromptSvcStableDiffusionParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'txt2Img': StableDiffusionTxt2ImgRequestToJSON(value['txt2Img']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcEngineParameters interface.
 */
function instanceOfPromptSvcEngineParameters(value) {
    return true;
}
function PromptSvcEngineParametersFromJSON(json) {
    return PromptSvcEngineParametersFromJSONTyped(json);
}
function PromptSvcEngineParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'llamaCppParameters': json['llamaCppParameters'] == null ? undefined : PromptSvcLlamaCppParametersFromJSON(json['llamaCppParameters']),
        'stableDiffusion': json['stableDiffusion'] == null ? undefined : PromptSvcStableDiffusionParametersFromJSON(json['stableDiffusion']),
    };
}
function PromptSvcEngineParametersToJSON(json) {
    return PromptSvcEngineParametersToJSONTyped(json, false);
}
function PromptSvcEngineParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'llamaCppParameters': PromptSvcLlamaCppParametersToJSON(value['llamaCppParameters']),
        'stableDiffusion': PromptSvcStableDiffusionParametersToJSON(value['stableDiffusion']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcErrorResponse interface.
 */
function instanceOfPromptSvcErrorResponse(value) {
    return true;
}
function PromptSvcErrorResponseFromJSON(json) {
    return PromptSvcErrorResponseFromJSONTyped(json);
}
function PromptSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function PromptSvcErrorResponseToJSON(json) {
    return PromptSvcErrorResponseToJSONTyped(json, false);
}
function PromptSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcListPromptsRequest interface.
 */
function instanceOfPromptSvcListPromptsRequest(value) {
    return true;
}
function PromptSvcListPromptsRequestFromJSON(json) {
    return PromptSvcListPromptsRequestFromJSONTyped(json);
}
function PromptSvcListPromptsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'query': json['query'] == null ? undefined : DatastoreQueryFromJSON(json['query']),
    };
}
function PromptSvcListPromptsRequestToJSON(json) {
    return PromptSvcListPromptsRequestToJSONTyped(json, false);
}
function PromptSvcListPromptsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'query': DatastoreQueryToJSON(value['query']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcTextToImageParameters interface.
 */
function instanceOfPromptSvcTextToImageParameters(value) {
    return true;
}
function PromptSvcTextToImageParametersFromJSON(json) {
    return PromptSvcTextToImageParametersFromJSONTyped(json);
}
function PromptSvcTextToImageParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'aspectRatio': json['aspectRatio'] == null ? undefined : json['aspectRatio'],
        'batchSize': json['batchSize'] == null ? undefined : json['batchSize'],
        'denoisingStrength': json['denoisingStrength'] == null ? undefined : json['denoisingStrength'],
        'enableUpscaling': json['enableUpscaling'] == null ? undefined : json['enableUpscaling'],
        'format': json['format'] == null ? undefined : json['format'],
        'guidanceScale': json['guidanceScale'] == null ? undefined : json['guidanceScale'],
        'height': json['height'] == null ? undefined : json['height'],
        'negativePrompt': json['negativePrompt'] == null ? undefined : json['negativePrompt'],
        'numIterations': json['numIterations'] == null ? undefined : json['numIterations'],
        'prompt': json['prompt'] == null ? undefined : json['prompt'],
        'qualityPreset': json['qualityPreset'] == null ? undefined : json['qualityPreset'],
        'restoreFaces': json['restoreFaces'] == null ? undefined : json['restoreFaces'],
        'scheduler': json['scheduler'] == null ? undefined : json['scheduler'],
        'seed': json['seed'] == null ? undefined : json['seed'],
        'steps': json['steps'] == null ? undefined : json['steps'],
        'styles': json['styles'] == null ? undefined : json['styles'],
        'width': json['width'] == null ? undefined : json['width'],
    };
}
function PromptSvcTextToImageParametersToJSON(json) {
    return PromptSvcTextToImageParametersToJSONTyped(json, false);
}
function PromptSvcTextToImageParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'aspectRatio': value['aspectRatio'],
        'batchSize': value['batchSize'],
        'denoisingStrength': value['denoisingStrength'],
        'enableUpscaling': value['enableUpscaling'],
        'format': value['format'],
        'guidanceScale': value['guidanceScale'],
        'height': value['height'],
        'negativePrompt': value['negativePrompt'],
        'numIterations': value['numIterations'],
        'prompt': value['prompt'],
        'qualityPreset': value['qualityPreset'],
        'restoreFaces': value['restoreFaces'],
        'scheduler': value['scheduler'],
        'seed': value['seed'],
        'steps': value['steps'],
        'styles': value['styles'],
        'width': value['width'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcTextToTextParameters interface.
 */
function instanceOfPromptSvcTextToTextParameters(value) {
    return true;
}
function PromptSvcTextToTextParametersFromJSON(json) {
    return PromptSvcTextToTextParametersFromJSONTyped(json);
}
function PromptSvcTextToTextParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'template': json['template'] == null ? undefined : json['template'],
    };
}
function PromptSvcTextToTextParametersToJSON(json) {
    return PromptSvcTextToTextParametersToJSONTyped(json, false);
}
function PromptSvcTextToTextParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'template': value['template'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcParameters interface.
 */
function instanceOfPromptSvcParameters(value) {
    return true;
}
function PromptSvcParametersFromJSON(json) {
    return PromptSvcParametersFromJSONTyped(json);
}
function PromptSvcParametersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'textToImage': json['textToImage'] == null ? undefined : PromptSvcTextToImageParametersFromJSON(json['textToImage']),
        'textToText': json['textToText'] == null ? undefined : PromptSvcTextToTextParametersFromJSON(json['textToText']),
    };
}
function PromptSvcParametersToJSON(json) {
    return PromptSvcParametersToJSONTyped(json, false);
}
function PromptSvcParametersToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'textToImage': PromptSvcTextToImageParametersToJSON(value['textToImage']),
        'textToText': PromptSvcTextToTextParametersToJSON(value['textToText']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const PromptSvcPromptStatus = {
    PromptStatusScheduled: 'scheduled',
    PromptStatusRunning: 'running',
    PromptStatusCompleted: 'completed',
    PromptStatusErrored: 'errored',
    PromptStatusAbandoned: 'abandoned',
    PromptStatusCanceled: 'canceled'
};
function instanceOfPromptSvcPromptStatus(value) {
    for (const key in PromptSvcPromptStatus) {
        if (Object.prototype.hasOwnProperty.call(PromptSvcPromptStatus, key)) {
            if (PromptSvcPromptStatus[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function PromptSvcPromptStatusFromJSON(json) {
    return PromptSvcPromptStatusFromJSONTyped(json);
}
function PromptSvcPromptStatusFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function PromptSvcPromptStatusToJSON(value) {
    return value;
}
function PromptSvcPromptStatusToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcPrompt interface.
 */
function instanceOfPromptSvcPrompt(value) {
    if (!('prompt' in value) || value['prompt'] === undefined)
        return false;
    return true;
}
function PromptSvcPromptFromJSON(json) {
    return PromptSvcPromptFromJSONTyped(json);
}
function PromptSvcPromptFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'engineParameters': json['engineParameters'] == null ? undefined : PromptSvcEngineParametersFromJSON(json['engineParameters']),
        'error': json['error'] == null ? undefined : json['error'],
        'id': json['id'] == null ? undefined : json['id'],
        'lastRun': json['lastRun'] == null ? undefined : json['lastRun'],
        'maxRetries': json['maxRetries'] == null ? undefined : json['maxRetries'],
        'modelId': json['modelId'] == null ? undefined : json['modelId'],
        'parameters': json['parameters'] == null ? undefined : PromptSvcParametersFromJSON(json['parameters']),
        'prompt': json['prompt'],
        'requestMessageId': json['requestMessageId'] == null ? undefined : json['requestMessageId'],
        'responseMessageId': json['responseMessageId'] == null ? undefined : json['responseMessageId'],
        'runCount': json['runCount'] == null ? undefined : json['runCount'],
        'status': json['status'] == null ? undefined : PromptSvcPromptStatusFromJSON(json['status']),
        'sync': json['sync'] == null ? undefined : json['sync'],
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
        'type': json['type'] == null ? undefined : PromptSvcPromptTypeFromJSON(json['type']),
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}
function PromptSvcPromptToJSON(json) {
    return PromptSvcPromptToJSONTyped(json, false);
}
function PromptSvcPromptToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'engineParameters': PromptSvcEngineParametersToJSON(value['engineParameters']),
        'error': value['error'],
        'id': value['id'],
        'lastRun': value['lastRun'],
        'maxRetries': value['maxRetries'],
        'modelId': value['modelId'],
        'parameters': PromptSvcParametersToJSON(value['parameters']),
        'prompt': value['prompt'],
        'requestMessageId': value['requestMessageId'],
        'responseMessageId': value['responseMessageId'],
        'runCount': value['runCount'],
        'status': PromptSvcPromptStatusToJSON(value['status']),
        'sync': value['sync'],
        'threadId': value['threadId'],
        'type': PromptSvcPromptTypeToJSON(value['type']),
        'updatedAt': value['updatedAt'],
        'userId': value['userId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcListPromptsResponse interface.
 */
function instanceOfPromptSvcListPromptsResponse(value) {
    return true;
}
function PromptSvcListPromptsResponseFromJSON(json) {
    return PromptSvcListPromptsResponseFromJSONTyped(json);
}
function PromptSvcListPromptsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'after': json['after'] == null ? undefined : json['after'],
        'count': json['count'] == null ? undefined : json['count'],
        'prompts': json['prompts'] == null ? undefined : (json['prompts'].map(PromptSvcPromptFromJSON)),
    };
}
function PromptSvcListPromptsResponseToJSON(json) {
    return PromptSvcListPromptsResponseToJSONTyped(json, false);
}
function PromptSvcListPromptsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'after': value['after'],
        'count': value['count'],
        'prompts': value['prompts'] == null ? undefined : (value['prompts'].map(PromptSvcPromptToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcPromptRequest interface.
 */
function instanceOfPromptSvcPromptRequest(value) {
    if (!('prompt' in value) || value['prompt'] === undefined)
        return false;
    return true;
}
function PromptSvcPromptRequestFromJSON(json) {
    return PromptSvcPromptRequestFromJSONTyped(json);
}
function PromptSvcPromptRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'engineParameters': json['engineParameters'] == null ? undefined : PromptSvcEngineParametersFromJSON(json['engineParameters']),
        'id': json['id'] == null ? undefined : json['id'],
        'maxRetries': json['maxRetries'] == null ? undefined : json['maxRetries'],
        'modelId': json['modelId'] == null ? undefined : json['modelId'],
        'parameters': json['parameters'] == null ? undefined : PromptSvcParametersFromJSON(json['parameters']),
        'prompt': json['prompt'],
        'sync': json['sync'] == null ? undefined : json['sync'],
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
    };
}
function PromptSvcPromptRequestToJSON(json) {
    return PromptSvcPromptRequestToJSONTyped(json, false);
}
function PromptSvcPromptRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'engineParameters': PromptSvcEngineParametersToJSON(value['engineParameters']),
        'id': value['id'],
        'maxRetries': value['maxRetries'],
        'modelId': value['modelId'],
        'parameters': PromptSvcParametersToJSON(value['parameters']),
        'prompt': value['prompt'],
        'sync': value['sync'],
        'threadId': value['threadId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcPromptResponse interface.
 */
function instanceOfPromptSvcPromptResponse(value) {
    return true;
}
function PromptSvcPromptResponseFromJSON(json) {
    return PromptSvcPromptResponseFromJSONTyped(json);
}
function PromptSvcPromptResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'prompt': json['prompt'] == null ? undefined : PromptSvcPromptFromJSON(json['prompt']),
        'responseMessage': json['responseMessage'] == null ? undefined : ChatSvcMessageFromJSON(json['responseMessage']),
    };
}
function PromptSvcPromptResponseToJSON(json) {
    return PromptSvcPromptResponseToJSONTyped(json, false);
}
function PromptSvcPromptResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'prompt': PromptSvcPromptToJSON(value['prompt']),
        'responseMessage': ChatSvcMessageToJSON(value['responseMessage']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcRemovePromptRequest interface.
 */
function instanceOfPromptSvcRemovePromptRequest(value) {
    return true;
}
function PromptSvcRemovePromptRequestFromJSON(json) {
    return PromptSvcRemovePromptRequestFromJSONTyped(json);
}
function PromptSvcRemovePromptRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'promptId': json['promptId'] == null ? undefined : json['promptId'],
    };
}
function PromptSvcRemovePromptRequestToJSON(json) {
    return PromptSvcRemovePromptRequestToJSONTyped(json, false);
}
function PromptSvcRemovePromptRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'promptId': value['promptId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const PromptSvcStreamChunkType = {
    ChunkTypeProgress: 'progress',
    ChunkTypeDone: 'done'
};
function instanceOfPromptSvcStreamChunkType(value) {
    for (const key in PromptSvcStreamChunkType) {
        if (Object.prototype.hasOwnProperty.call(PromptSvcStreamChunkType, key)) {
            if (PromptSvcStreamChunkType[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function PromptSvcStreamChunkTypeFromJSON(json) {
    return PromptSvcStreamChunkTypeFromJSONTyped(json);
}
function PromptSvcStreamChunkTypeFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function PromptSvcStreamChunkTypeToJSON(value) {
    return value;
}
function PromptSvcStreamChunkTypeToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcStreamChunk interface.
 */
function instanceOfPromptSvcStreamChunk(value) {
    return true;
}
function PromptSvcStreamChunkFromJSON(json) {
    return PromptSvcStreamChunkFromJSONTyped(json);
}
function PromptSvcStreamChunkFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'messageId': json['messageId'] == null ? undefined : json['messageId'],
        'text': json['text'] == null ? undefined : json['text'],
        'type': json['type'] == null ? undefined : PromptSvcStreamChunkTypeFromJSON(json['type']),
    };
}
function PromptSvcStreamChunkToJSON(json) {
    return PromptSvcStreamChunkToJSONTyped(json, false);
}
function PromptSvcStreamChunkToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'messageId': value['messageId'],
        'text': value['text'],
        'type': PromptSvcStreamChunkTypeToJSON(value['type']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the PromptSvcTypesResponse interface.
 */
function instanceOfPromptSvcTypesResponse(value) {
    return true;
}
function PromptSvcTypesResponseFromJSON(json) {
    return PromptSvcTypesResponseFromJSONTyped(json);
}
function PromptSvcTypesResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'chunk': json['chunk'] == null ? undefined : PromptSvcStreamChunkFromJSON(json['chunk']),
    };
}
function PromptSvcTypesResponseToJSON(json) {
    return PromptSvcTypesResponseToJSONTyped(json, false);
}
function PromptSvcTypesResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'chunk': PromptSvcStreamChunkToJSON(value['chunk']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcAPISpec interface.
 */
function instanceOfRegistrySvcAPISpec(value) {
    return true;
}
function RegistrySvcAPISpecFromJSON(json) {
    return RegistrySvcAPISpecFromJSONTyped(json);
}
function RegistrySvcAPISpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'protocolType': json['protocolType'] == null ? undefined : json['protocolType'],
        'url': json['url'] == null ? undefined : json['url'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}
function RegistrySvcAPISpecToJSON(json) {
    return RegistrySvcAPISpecToJSONTyped(json, false);
}
function RegistrySvcAPISpecToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'metadata': value['metadata'],
        'protocolType': value['protocolType'],
        'url': value['url'],
        'version': value['version'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const RegistrySvcLanguage = {
    JavaScript: 'JavaScript',
    Python: 'Python',
    Java: 'Java',
    CSharp: 'C#',
    CPlusPlus: 'C++',
    Ruby: 'Ruby',
    Go: 'Go',
    Swift: 'Swift',
    PHP: 'PHP',
    TypeScript: 'TypeScript',
    Kotlin: 'Kotlin',
    Scala: 'Scala',
    Perl: 'Perl',
    Rust: 'Rust',
    Haskell: 'Haskell',
    Clojure: 'Clojure',
    Elixir: 'Elixir',
    ObjectiveC: 'Objective-C',
    FSharp: 'F#'
};
function instanceOfRegistrySvcLanguage(value) {
    for (const key in RegistrySvcLanguage) {
        if (Object.prototype.hasOwnProperty.call(RegistrySvcLanguage, key)) {
            if (RegistrySvcLanguage[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function RegistrySvcLanguageFromJSON(json) {
    return RegistrySvcLanguageFromJSONTyped(json);
}
function RegistrySvcLanguageFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function RegistrySvcLanguageToJSON(value) {
    return value;
}
function RegistrySvcLanguageToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcClient interface.
 */
function instanceOfRegistrySvcClient(value) {
    if (!('language' in value) || value['language'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    return true;
}
function RegistrySvcClientFromJSON(json) {
    return RegistrySvcClientFromJSONTyped(json);
}
function RegistrySvcClientFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'language': RegistrySvcLanguageFromJSON(json['language']),
        'url': json['url'],
    };
}
function RegistrySvcClientToJSON(json) {
    return RegistrySvcClientToJSONTyped(json, false);
}
function RegistrySvcClientToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'language': RegistrySvcLanguageToJSON(value['language']),
        'url': value['url'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcPortMapping interface.
 */
function instanceOfRegistrySvcPortMapping(value) {
    if (!('host' in value) || value['host'] === undefined)
        return false;
    if (!('internal' in value) || value['internal'] === undefined)
        return false;
    return true;
}
function RegistrySvcPortMappingFromJSON(json) {
    return RegistrySvcPortMappingFromJSONTyped(json);
}
function RegistrySvcPortMappingFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'host': json['host'],
        'internal': json['internal'],
    };
}
function RegistrySvcPortMappingToJSON(json) {
    return RegistrySvcPortMappingToJSONTyped(json, false);
}
function RegistrySvcPortMappingToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'host': value['host'],
        'internal': value['internal'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcImageSpec interface.
 */
function instanceOfRegistrySvcImageSpec(value) {
    if (!('internalPorts' in value) || value['internalPorts'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    return true;
}
function RegistrySvcImageSpecFromJSON(json) {
    return RegistrySvcImageSpecFromJSONTyped(json);
}
function RegistrySvcImageSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'internalPorts': json['internalPorts'],
        'name': json['name'],
    };
}
function RegistrySvcImageSpecToJSON(json) {
    return RegistrySvcImageSpecToJSONTyped(json, false);
}
function RegistrySvcImageSpecToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'internalPorts': value['internalPorts'],
        'name': value['name'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcRepositorySpec interface.
 */
function instanceOfRegistrySvcRepositorySpec(value) {
    if (!('ports' in value) || value['ports'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    return true;
}
function RegistrySvcRepositorySpecFromJSON(json) {
    return RegistrySvcRepositorySpecFromJSONTyped(json);
}
function RegistrySvcRepositorySpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'buildContext': json['buildContext'] == null ? undefined : json['buildContext'],
        'containerFile': json['containerFile'] == null ? undefined : json['containerFile'],
        'ports': json['ports'],
        'url': json['url'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}
function RegistrySvcRepositorySpecToJSON(json) {
    return RegistrySvcRepositorySpecToJSONTyped(json, false);
}
function RegistrySvcRepositorySpecToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'buildContext': value['buildContext'],
        'containerFile': value['containerFile'],
        'ports': value['ports'],
        'url': value['url'],
        'version': value['version'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcEnvVar interface.
 */
function instanceOfRegistrySvcEnvVar(value) {
    if (!('key' in value) || value['key'] === undefined)
        return false;
    if (!('value' in value) || value['value'] === undefined)
        return false;
    return true;
}
function RegistrySvcEnvVarFromJSON(json) {
    return RegistrySvcEnvVarFromJSONTyped(json);
}
function RegistrySvcEnvVarFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'key': json['key'],
        'value': json['value'],
    };
}
function RegistrySvcEnvVarToJSON(json) {
    return RegistrySvcEnvVarToJSONTyped(json, false);
}
function RegistrySvcEnvVarToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'key': value['key'],
        'value': value['value'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcDefinition interface.
 */
function instanceOfRegistrySvcDefinition(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    return true;
}
function RegistrySvcDefinitionFromJSON(json) {
    return RegistrySvcDefinitionFromJSONTyped(json);
}
function RegistrySvcDefinitionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'apiSpecs': json['apiSpecs'] == null ? undefined : (json['apiSpecs'].map(RegistrySvcAPISpecFromJSON)),
        'clients': json['clients'] == null ? undefined : (json['clients'].map(RegistrySvcClientFromJSON)),
        'envars': json['envars'] == null ? undefined : (json['envars'].map(RegistrySvcEnvVarFromJSON)),
        'id': json['id'],
        'image': json['image'] == null ? undefined : RegistrySvcImageSpecFromJSON(json['image']),
        'ports': json['ports'] == null ? undefined : (json['ports'].map(RegistrySvcPortMappingFromJSON)),
        'repository': json['repository'] == null ? undefined : RegistrySvcRepositorySpecFromJSON(json['repository']),
    };
}
function RegistrySvcDefinitionToJSON(json) {
    return RegistrySvcDefinitionToJSONTyped(json, false);
}
function RegistrySvcDefinitionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'apiSpecs': value['apiSpecs'] == null ? undefined : (value['apiSpecs'].map(RegistrySvcAPISpecToJSON)),
        'clients': value['clients'] == null ? undefined : (value['clients'].map(RegistrySvcClientToJSON)),
        'envars': value['envars'] == null ? undefined : (value['envars'].map(RegistrySvcEnvVarToJSON)),
        'id': value['id'],
        'image': RegistrySvcImageSpecToJSON(value['image']),
        'ports': value['ports'] == null ? undefined : (value['ports'].map(RegistrySvcPortMappingToJSON)),
        'repository': RegistrySvcRepositorySpecToJSON(value['repository']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcErrorResponse interface.
 */
function instanceOfRegistrySvcErrorResponse(value) {
    return true;
}
function RegistrySvcErrorResponseFromJSON(json) {
    return RegistrySvcErrorResponseFromJSONTyped(json);
}
function RegistrySvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function RegistrySvcErrorResponseToJSON(json) {
    return RegistrySvcErrorResponseToJSONTyped(json, false);
}
function RegistrySvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcProcess interface.
 */
function instanceOfRegistrySvcProcess(value) {
    return true;
}
function RegistrySvcProcessFromJSON(json) {
    return RegistrySvcProcessFromJSONTyped(json);
}
function RegistrySvcProcessFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'memoryUsage': json['memoryUsage'] == null ? undefined : json['memoryUsage'],
        'pid': json['pid'] == null ? undefined : json['pid'],
        'processName': json['processName'] == null ? undefined : json['processName'],
    };
}
function RegistrySvcProcessToJSON(json) {
    return RegistrySvcProcessToJSONTyped(json, false);
}
function RegistrySvcProcessToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'memoryUsage': value['memoryUsage'],
        'pid': value['pid'],
        'processName': value['processName'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcGPU interface.
 */
function instanceOfRegistrySvcGPU(value) {
    return true;
}
function RegistrySvcGPUFromJSON(json) {
    return RegistrySvcGPUFromJSONTyped(json);
}
function RegistrySvcGPUFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'busId': json['busId'] == null ? undefined : json['busId'],
        'computeMode': json['computeMode'] == null ? undefined : json['computeMode'],
        'cudaVersion': json['cudaVersion'] == null ? undefined : json['cudaVersion'],
        'gpuUtilization': json['gpuUtilization'] == null ? undefined : json['gpuUtilization'],
        'id': json['id'] == null ? undefined : json['id'],
        'intraNodeId': json['intraNodeId'] == null ? undefined : json['intraNodeId'],
        'memoryTotal': json['memoryTotal'] == null ? undefined : json['memoryTotal'],
        'memoryUsage': json['memoryUsage'] == null ? undefined : json['memoryUsage'],
        'name': json['name'] == null ? undefined : json['name'],
        'performanceState': json['performanceState'] == null ? undefined : json['performanceState'],
        'powerCap': json['powerCap'] == null ? undefined : json['powerCap'],
        'powerUsage': json['powerUsage'] == null ? undefined : json['powerUsage'],
        'processDetails': json['processDetails'] == null ? undefined : (json['processDetails'].map(RegistrySvcProcessFromJSON)),
        'temperature': json['temperature'] == null ? undefined : json['temperature'],
    };
}
function RegistrySvcGPUToJSON(json) {
    return RegistrySvcGPUToJSONTyped(json, false);
}
function RegistrySvcGPUToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'busId': value['busId'],
        'computeMode': value['computeMode'],
        'cudaVersion': value['cudaVersion'],
        'gpuUtilization': value['gpuUtilization'],
        'id': value['id'],
        'intraNodeId': value['intraNodeId'],
        'memoryTotal': value['memoryTotal'],
        'memoryUsage': value['memoryUsage'],
        'name': value['name'],
        'performanceState': value['performanceState'],
        'powerCap': value['powerCap'],
        'powerUsage': value['powerUsage'],
        'processDetails': value['processDetails'] == null ? undefined : (value['processDetails'].map(RegistrySvcProcessToJSON)),
        'temperature': value['temperature'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const RegistrySvcInstanceStatus = {
    InstanceStatusUnknown: 'Unknown',
    InstanceStatusHealthy: 'Healthy',
    InstanceStatusDegraded: 'Degraded',
    InstanceStatusUnreachable: 'Unreachable',
    InstanceStatusError: 'Error'
};
function instanceOfRegistrySvcInstanceStatus(value) {
    for (const key in RegistrySvcInstanceStatus) {
        if (Object.prototype.hasOwnProperty.call(RegistrySvcInstanceStatus, key)) {
            if (RegistrySvcInstanceStatus[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function RegistrySvcInstanceStatusFromJSON(json) {
    return RegistrySvcInstanceStatusFromJSONTyped(json);
}
function RegistrySvcInstanceStatusFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function RegistrySvcInstanceStatusToJSON(value) {
    return value;
}
function RegistrySvcInstanceStatusToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcInstance interface.
 */
function instanceOfRegistrySvcInstance(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    return true;
}
function RegistrySvcInstanceFromJSON(json) {
    return RegistrySvcInstanceFromJSONTyped(json);
}
function RegistrySvcInstanceFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'deploymentId': json['deploymentId'] == null ? undefined : json['deploymentId'],
        'details': json['details'] == null ? undefined : json['details'],
        'host': json['host'] == null ? undefined : json['host'],
        'id': json['id'],
        'ip': json['ip'] == null ? undefined : json['ip'],
        'lastHeartbeat': json['lastHeartbeat'] == null ? undefined : json['lastHeartbeat'],
        'nodeUrl': json['nodeUrl'] == null ? undefined : json['nodeUrl'],
        'path': json['path'] == null ? undefined : json['path'],
        'port': json['port'] == null ? undefined : json['port'],
        'scheme': json['scheme'] == null ? undefined : json['scheme'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'status': RegistrySvcInstanceStatusFromJSON(json['status']),
        'tags': json['tags'] == null ? undefined : json['tags'],
        'url': json['url'],
    };
}
function RegistrySvcInstanceToJSON(json) {
    return RegistrySvcInstanceToJSONTyped(json, false);
}
function RegistrySvcInstanceToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'deploymentId': value['deploymentId'],
        'details': value['details'],
        'host': value['host'],
        'id': value['id'],
        'ip': value['ip'],
        'lastHeartbeat': value['lastHeartbeat'],
        'nodeUrl': value['nodeUrl'],
        'path': value['path'],
        'port': value['port'],
        'scheme': value['scheme'],
        'slug': value['slug'],
        'status': RegistrySvcInstanceStatusToJSON(value['status']),
        'tags': value['tags'],
        'url': value['url'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcListDefinitionsResponse interface.
 */
function instanceOfRegistrySvcListDefinitionsResponse(value) {
    return true;
}
function RegistrySvcListDefinitionsResponseFromJSON(json) {
    return RegistrySvcListDefinitionsResponseFromJSONTyped(json);
}
function RegistrySvcListDefinitionsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'definitions': json['definitions'] == null ? undefined : (json['definitions'].map(RegistrySvcDefinitionFromJSON)),
    };
}
function RegistrySvcListDefinitionsResponseToJSON(json) {
    return RegistrySvcListDefinitionsResponseToJSONTyped(json, false);
}
function RegistrySvcListDefinitionsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'definitions': value['definitions'] == null ? undefined : (value['definitions'].map(RegistrySvcDefinitionToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcListInstancesResponse interface.
 */
function instanceOfRegistrySvcListInstancesResponse(value) {
    return true;
}
function RegistrySvcListInstancesResponseFromJSON(json) {
    return RegistrySvcListInstancesResponseFromJSONTyped(json);
}
function RegistrySvcListInstancesResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'instances': json['instances'] == null ? undefined : (json['instances'].map(RegistrySvcInstanceFromJSON)),
    };
}
function RegistrySvcListInstancesResponseToJSON(json) {
    return RegistrySvcListInstancesResponseToJSONTyped(json, false);
}
function RegistrySvcListInstancesResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'instances': value['instances'] == null ? undefined : (value['instances'].map(RegistrySvcInstanceToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcListNodesRequest interface.
 */
function instanceOfRegistrySvcListNodesRequest(value) {
    return true;
}
function RegistrySvcListNodesRequestFromJSON(json) {
    return RegistrySvcListNodesRequestFromJSONTyped(json);
}
function RegistrySvcListNodesRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'ids': json['ids'] == null ? undefined : json['ids'],
    };
}
function RegistrySvcListNodesRequestToJSON(json) {
    return RegistrySvcListNodesRequestToJSONTyped(json, false);
}
function RegistrySvcListNodesRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'ids': value['ids'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcUsage interface.
 */
function instanceOfRegistrySvcUsage(value) {
    return true;
}
function RegistrySvcUsageFromJSON(json) {
    return RegistrySvcUsageFromJSONTyped(json);
}
function RegistrySvcUsageFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'percent': json['percent'] == null ? undefined : json['percent'],
        'total': json['total'] == null ? undefined : json['total'],
        'used': json['used'] == null ? undefined : json['used'],
    };
}
function RegistrySvcUsageToJSON(json) {
    return RegistrySvcUsageToJSONTyped(json, false);
}
function RegistrySvcUsageToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'percent': value['percent'],
        'total': value['total'],
        'used': value['used'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcResourceUsage interface.
 */
function instanceOfRegistrySvcResourceUsage(value) {
    return true;
}
function RegistrySvcResourceUsageFromJSON(json) {
    return RegistrySvcResourceUsageFromJSONTyped(json);
}
function RegistrySvcResourceUsageFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cpu': json['cpu'] == null ? undefined : RegistrySvcUsageFromJSON(json['cpu']),
        'disk': json['disk'] == null ? undefined : RegistrySvcUsageFromJSON(json['disk']),
        'memory': json['memory'] == null ? undefined : RegistrySvcUsageFromJSON(json['memory']),
    };
}
function RegistrySvcResourceUsageToJSON(json) {
    return RegistrySvcResourceUsageToJSONTyped(json, false);
}
function RegistrySvcResourceUsageToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cpu': RegistrySvcUsageToJSON(value['cpu']),
        'disk': RegistrySvcUsageToJSON(value['disk']),
        'memory': RegistrySvcUsageToJSON(value['memory']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcNode interface.
 */
function instanceOfRegistrySvcNode(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    return true;
}
function RegistrySvcNodeFromJSON(json) {
    return RegistrySvcNodeFromJSONTyped(json);
}
function RegistrySvcNodeFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'availabilityZone': json['availabilityZone'] == null ? undefined : json['availabilityZone'],
        'gpus': json['gpus'] == null ? undefined : (json['gpus'].map(RegistrySvcGPUFromJSON)),
        'id': json['id'],
        'lastHeartbeat': json['lastHeartbeat'] == null ? undefined : json['lastHeartbeat'],
        'region': json['region'] == null ? undefined : json['region'],
        'url': json['url'],
        'usage': json['usage'] == null ? undefined : RegistrySvcResourceUsageFromJSON(json['usage']),
    };
}
function RegistrySvcNodeToJSON(json) {
    return RegistrySvcNodeToJSONTyped(json, false);
}
function RegistrySvcNodeToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'availabilityZone': value['availabilityZone'],
        'gpus': value['gpus'] == null ? undefined : (value['gpus'].map(RegistrySvcGPUToJSON)),
        'id': value['id'],
        'lastHeartbeat': value['lastHeartbeat'],
        'region': value['region'],
        'url': value['url'],
        'usage': RegistrySvcResourceUsageToJSON(value['usage']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcListNodesResponse interface.
 */
function instanceOfRegistrySvcListNodesResponse(value) {
    return true;
}
function RegistrySvcListNodesResponseFromJSON(json) {
    return RegistrySvcListNodesResponseFromJSONTyped(json);
}
function RegistrySvcListNodesResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'nodes': json['nodes'] == null ? undefined : (json['nodes'].map(RegistrySvcNodeFromJSON)),
    };
}
function RegistrySvcListNodesResponseToJSON(json) {
    return RegistrySvcListNodesResponseToJSONTyped(json, false);
}
function RegistrySvcListNodesResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'nodes': value['nodes'] == null ? undefined : (value['nodes'].map(RegistrySvcNodeToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcNodeSelfResponse interface.
 */
function instanceOfRegistrySvcNodeSelfResponse(value) {
    if (!('node' in value) || value['node'] === undefined)
        return false;
    return true;
}
function RegistrySvcNodeSelfResponseFromJSON(json) {
    return RegistrySvcNodeSelfResponseFromJSONTyped(json);
}
function RegistrySvcNodeSelfResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'node': RegistrySvcNodeFromJSON(json['node']),
    };
}
function RegistrySvcNodeSelfResponseToJSON(json) {
    return RegistrySvcNodeSelfResponseToJSONTyped(json, false);
}
function RegistrySvcNodeSelfResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'node': RegistrySvcNodeToJSON(value['node']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcRegisterInstanceRequest interface.
 */
function instanceOfRegistrySvcRegisterInstanceRequest(value) {
    if (!('url' in value) || value['url'] === undefined)
        return false;
    return true;
}
function RegistrySvcRegisterInstanceRequestFromJSON(json) {
    return RegistrySvcRegisterInstanceRequestFromJSONTyped(json);
}
function RegistrySvcRegisterInstanceRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'deploymentId': json['deploymentId'] == null ? undefined : json['deploymentId'],
        'host': json['host'] == null ? undefined : json['host'],
        'id': json['id'] == null ? undefined : json['id'],
        'ip': json['ip'] == null ? undefined : json['ip'],
        'path': json['path'] == null ? undefined : json['path'],
        'port': json['port'] == null ? undefined : json['port'],
        'scheme': json['scheme'] == null ? undefined : json['scheme'],
        'url': json['url'],
    };
}
function RegistrySvcRegisterInstanceRequestToJSON(json) {
    return RegistrySvcRegisterInstanceRequestToJSONTyped(json, false);
}
function RegistrySvcRegisterInstanceRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'deploymentId': value['deploymentId'],
        'host': value['host'],
        'id': value['id'],
        'ip': value['ip'],
        'path': value['path'],
        'port': value['port'],
        'scheme': value['scheme'],
        'url': value['url'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the RegistrySvcSaveDefinitionRequest interface.
 */
function instanceOfRegistrySvcSaveDefinitionRequest(value) {
    return true;
}
function RegistrySvcSaveDefinitionRequestFromJSON(json) {
    return RegistrySvcSaveDefinitionRequestFromJSONTyped(json);
}
function RegistrySvcSaveDefinitionRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'definition': json['definition'] == null ? undefined : RegistrySvcDefinitionFromJSON(json['definition']),
    };
}
function RegistrySvcSaveDefinitionRequestToJSON(json) {
    return RegistrySvcSaveDefinitionRequestToJSONTyped(json, false);
}
function RegistrySvcSaveDefinitionRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'definition': RegistrySvcDefinitionToJSON(value['definition']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
const SecretSvcChecksumAlgorithm = {
    ChecksumAlgorithmUnspecified: '',
    ChecksumAlgorithmCRC32: 'CRC32',
    ChecksumAlgorithmBlake2s: 'BLAKE2s',
    ChecksumAlgorithmSha256: 'SHA-256',
    ChecksumAlgorithmSha512: 'SHA-512'
};
function instanceOfSecretSvcChecksumAlgorithm(value) {
    for (const key in SecretSvcChecksumAlgorithm) {
        if (Object.prototype.hasOwnProperty.call(SecretSvcChecksumAlgorithm, key)) {
            if (SecretSvcChecksumAlgorithm[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function SecretSvcChecksumAlgorithmFromJSON(json) {
    return SecretSvcChecksumAlgorithmFromJSONTyped(json);
}
function SecretSvcChecksumAlgorithmFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function SecretSvcChecksumAlgorithmToJSON(value) {
    return value;
}
function SecretSvcChecksumAlgorithmToJSONTyped(value, ignoreDiscriminator) {
    return value;
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcDecryptValueRequest interface.
 */
function instanceOfSecretSvcDecryptValueRequest(value) {
    return true;
}
function SecretSvcDecryptValueRequestFromJSON(json) {
    return SecretSvcDecryptValueRequestFromJSONTyped(json);
}
function SecretSvcDecryptValueRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'value': json['value'] == null ? undefined : json['value'],
        'values': json['values'] == null ? undefined : json['values'],
    };
}
function SecretSvcDecryptValueRequestToJSON(json) {
    return SecretSvcDecryptValueRequestToJSONTyped(json, false);
}
function SecretSvcDecryptValueRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'value': value['value'],
        'values': value['values'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcDecryptValueResponse interface.
 */
function instanceOfSecretSvcDecryptValueResponse(value) {
    return true;
}
function SecretSvcDecryptValueResponseFromJSON(json) {
    return SecretSvcDecryptValueResponseFromJSONTyped(json);
}
function SecretSvcDecryptValueResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'value': json['value'] == null ? undefined : json['value'],
        'values': json['values'] == null ? undefined : json['values'],
    };
}
function SecretSvcDecryptValueResponseToJSON(json) {
    return SecretSvcDecryptValueResponseToJSONTyped(json, false);
}
function SecretSvcDecryptValueResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'value': value['value'],
        'values': value['values'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcEncryptValueRequest interface.
 */
function instanceOfSecretSvcEncryptValueRequest(value) {
    return true;
}
function SecretSvcEncryptValueRequestFromJSON(json) {
    return SecretSvcEncryptValueRequestFromJSONTyped(json);
}
function SecretSvcEncryptValueRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'value': json['value'] == null ? undefined : json['value'],
        'values': json['values'] == null ? undefined : json['values'],
    };
}
function SecretSvcEncryptValueRequestToJSON(json) {
    return SecretSvcEncryptValueRequestToJSONTyped(json, false);
}
function SecretSvcEncryptValueRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'value': value['value'],
        'values': value['values'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcEncryptValueResponse interface.
 */
function instanceOfSecretSvcEncryptValueResponse(value) {
    return true;
}
function SecretSvcEncryptValueResponseFromJSON(json) {
    return SecretSvcEncryptValueResponseFromJSONTyped(json);
}
function SecretSvcEncryptValueResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'value': json['value'] == null ? undefined : json['value'],
        'values': json['values'] == null ? undefined : json['values'],
    };
}
function SecretSvcEncryptValueResponseToJSON(json) {
    return SecretSvcEncryptValueResponseToJSONTyped(json, false);
}
function SecretSvcEncryptValueResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'value': value['value'],
        'values': value['values'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcIsSecureResponse interface.
 */
function instanceOfSecretSvcIsSecureResponse(value) {
    if (!('isSecure' in value) || value['isSecure'] === undefined)
        return false;
    return true;
}
function SecretSvcIsSecureResponseFromJSON(json) {
    return SecretSvcIsSecureResponseFromJSONTyped(json);
}
function SecretSvcIsSecureResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'isSecure': json['isSecure'],
    };
}
function SecretSvcIsSecureResponseToJSON(json) {
    return SecretSvcIsSecureResponseToJSONTyped(json, false);
}
function SecretSvcIsSecureResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'isSecure': value['isSecure'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcListSecretsRequest interface.
 */
function instanceOfSecretSvcListSecretsRequest(value) {
    return true;
}
function SecretSvcListSecretsRequestFromJSON(json) {
    return SecretSvcListSecretsRequestFromJSONTyped(json);
}
function SecretSvcListSecretsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'key': json['key'] == null ? undefined : json['key'],
        'keys': json['keys'] == null ? undefined : json['keys'],
        'namespace': json['namespace'] == null ? undefined : json['namespace'],
    };
}
function SecretSvcListSecretsRequestToJSON(json) {
    return SecretSvcListSecretsRequestToJSONTyped(json, false);
}
function SecretSvcListSecretsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'key': value['key'],
        'keys': value['keys'],
        'namespace': value['namespace'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcSecret interface.
 */
function instanceOfSecretSvcSecret(value) {
    return true;
}
function SecretSvcSecretFromJSON(json) {
    return SecretSvcSecretFromJSONTyped(json);
}
function SecretSvcSecretFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'canChangeDeleters': json['canChangeDeleters'] == null ? undefined : json['canChangeDeleters'],
        'canChangeReaders': json['canChangeReaders'] == null ? undefined : json['canChangeReaders'],
        'canChangeWriters': json['canChangeWriters'] == null ? undefined : json['canChangeWriters'],
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'checksumAlgorithm': json['checksumAlgorithm'] == null ? undefined : SecretSvcChecksumAlgorithmFromJSON(json['checksumAlgorithm']),
        'deleters': json['deleters'] == null ? undefined : json['deleters'],
        'encrypted': json['encrypted'] == null ? undefined : json['encrypted'],
        'id': json['id'] == null ? undefined : json['id'],
        'key': json['key'] == null ? undefined : json['key'],
        'namespace': json['namespace'] == null ? undefined : json['namespace'],
        'readers': json['readers'] == null ? undefined : json['readers'],
        'value': json['value'] == null ? undefined : json['value'],
        'writers': json['writers'] == null ? undefined : json['writers'],
    };
}
function SecretSvcSecretToJSON(json) {
    return SecretSvcSecretToJSONTyped(json, false);
}
function SecretSvcSecretToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'canChangeDeleters': value['canChangeDeleters'],
        'canChangeReaders': value['canChangeReaders'],
        'canChangeWriters': value['canChangeWriters'],
        'checksum': value['checksum'],
        'checksumAlgorithm': SecretSvcChecksumAlgorithmToJSON(value['checksumAlgorithm']),
        'deleters': value['deleters'],
        'encrypted': value['encrypted'],
        'id': value['id'],
        'key': value['key'],
        'namespace': value['namespace'],
        'readers': value['readers'],
        'value': value['value'],
        'writers': value['writers'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcListSecretsResponse interface.
 */
function instanceOfSecretSvcListSecretsResponse(value) {
    return true;
}
function SecretSvcListSecretsResponseFromJSON(json) {
    return SecretSvcListSecretsResponseFromJSONTyped(json);
}
function SecretSvcListSecretsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'secrets': json['secrets'] == null ? undefined : (json['secrets'].map(SecretSvcSecretFromJSON)),
    };
}
function SecretSvcListSecretsResponseToJSON(json) {
    return SecretSvcListSecretsResponseToJSONTyped(json, false);
}
function SecretSvcListSecretsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'secrets': value['secrets'] == null ? undefined : (value['secrets'].map(SecretSvcSecretToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcRemoveSecretsRequest interface.
 */
function instanceOfSecretSvcRemoveSecretsRequest(value) {
    return true;
}
function SecretSvcRemoveSecretsRequestFromJSON(json) {
    return SecretSvcRemoveSecretsRequestFromJSONTyped(json);
}
function SecretSvcRemoveSecretsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'ids': json['ids'] == null ? undefined : json['ids'],
        'key': json['key'] == null ? undefined : json['key'],
        'keys': json['keys'] == null ? undefined : json['keys'],
    };
}
function SecretSvcRemoveSecretsRequestToJSON(json) {
    return SecretSvcRemoveSecretsRequestToJSONTyped(json, false);
}
function SecretSvcRemoveSecretsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'ids': value['ids'],
        'key': value['key'],
        'keys': value['keys'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SecretSvcSaveSecretsRequest interface.
 */
function instanceOfSecretSvcSaveSecretsRequest(value) {
    return true;
}
function SecretSvcSaveSecretsRequestFromJSON(json) {
    return SecretSvcSaveSecretsRequestFromJSONTyped(json);
}
function SecretSvcSaveSecretsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'secrets': json['secrets'] == null ? undefined : (json['secrets'].map(SecretSvcSecretFromJSON)),
    };
}
function SecretSvcSaveSecretsRequestToJSON(json) {
    return SecretSvcSaveSecretsRequestToJSONTyped(json, false);
}
function SecretSvcSaveSecretsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'secrets': value['secrets'] == null ? undefined : (value['secrets'].map(SecretSvcSecretToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SourceSvcCheckoutRepoRequest interface.
 */
function instanceOfSourceSvcCheckoutRepoRequest(value) {
    return true;
}
function SourceSvcCheckoutRepoRequestFromJSON(json) {
    return SourceSvcCheckoutRepoRequestFromJSONTyped(json);
}
function SourceSvcCheckoutRepoRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'password': json['password'] == null ? undefined : json['password'],
        'ssh_key': json['ssh_key'] == null ? undefined : json['ssh_key'],
        'ssh_key_pwd': json['ssh_key_pwd'] == null ? undefined : json['ssh_key_pwd'],
        'token': json['token'] == null ? undefined : json['token'],
        'url': json['url'] == null ? undefined : json['url'],
        'username': json['username'] == null ? undefined : json['username'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}
function SourceSvcCheckoutRepoRequestToJSON(json) {
    return SourceSvcCheckoutRepoRequestToJSONTyped(json, false);
}
function SourceSvcCheckoutRepoRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'password': value['password'],
        'ssh_key': value['ssh_key'],
        'ssh_key_pwd': value['ssh_key_pwd'],
        'token': value['token'],
        'url': value['url'],
        'username': value['username'],
        'version': value['version'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SourceSvcCheckoutRepoResponse interface.
 */
function instanceOfSourceSvcCheckoutRepoResponse(value) {
    return true;
}
function SourceSvcCheckoutRepoResponseFromJSON(json) {
    return SourceSvcCheckoutRepoResponseFromJSONTyped(json);
}
function SourceSvcCheckoutRepoResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'dir': json['dir'] == null ? undefined : json['dir'],
    };
}
function SourceSvcCheckoutRepoResponseToJSON(json) {
    return SourceSvcCheckoutRepoResponseToJSONTyped(json, false);
}
function SourceSvcCheckoutRepoResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'dir': value['dir'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the SourceSvcErrorResponse interface.
 */
function instanceOfSourceSvcErrorResponse(value) {
    return true;
}
function SourceSvcErrorResponseFromJSON(json) {
    return SourceSvcErrorResponseFromJSONTyped(json);
}
function SourceSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function SourceSvcErrorResponseToJSON(json) {
    return SourceSvcErrorResponseToJSONTyped(json, false);
}
function SourceSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcAddUserToOrganizationRequest interface.
 */
function instanceOfUserSvcAddUserToOrganizationRequest(value) {
    return true;
}
function UserSvcAddUserToOrganizationRequestFromJSON(json) {
    return UserSvcAddUserToOrganizationRequestFromJSONTyped(json);
}
function UserSvcAddUserToOrganizationRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}
function UserSvcAddUserToOrganizationRequestToJSON(json) {
    return UserSvcAddUserToOrganizationRequestToJSONTyped(json, false);
}
function UserSvcAddUserToOrganizationRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'userId': value['userId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcPermissionLink interface.
 */
function instanceOfUserSvcPermissionLink(value) {
    return true;
}
function UserSvcPermissionLinkFromJSON(json) {
    return UserSvcPermissionLinkFromJSONTyped(json);
}
function UserSvcPermissionLinkFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'permissionId': json['permissionId'] == null ? undefined : json['permissionId'],
        'roleId': json['roleId'] == null ? undefined : json['roleId'],
    };
}
function UserSvcPermissionLinkToJSON(json) {
    return UserSvcPermissionLinkToJSONTyped(json, false);
}
function UserSvcPermissionLinkToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'permissionId': value['permissionId'],
        'roleId': value['roleId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcAssignPermissionsRequest interface.
 */
function instanceOfUserSvcAssignPermissionsRequest(value) {
    return true;
}
function UserSvcAssignPermissionsRequestFromJSON(json) {
    return UserSvcAssignPermissionsRequestFromJSONTyped(json);
}
function UserSvcAssignPermissionsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'permissionLinks': json['permissionLinks'] == null ? undefined : (json['permissionLinks'].map(UserSvcPermissionLinkFromJSON)),
    };
}
function UserSvcAssignPermissionsRequestToJSON(json) {
    return UserSvcAssignPermissionsRequestToJSONTyped(json, false);
}
function UserSvcAssignPermissionsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'permissionLinks': value['permissionLinks'] == null ? undefined : (value['permissionLinks'].map(UserSvcPermissionLinkToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcAuthToken interface.
 */
function instanceOfUserSvcAuthToken(value) {
    return true;
}
function UserSvcAuthTokenFromJSON(json) {
    return UserSvcAuthTokenFromJSONTyped(json);
}
function UserSvcAuthTokenFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'active': json['active'] == null ? undefined : json['active'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'deletedAt': json['deletedAt'] == null ? undefined : json['deletedAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'token': json['token'] == null ? undefined : json['token'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}
function UserSvcAuthTokenToJSON(json) {
    return UserSvcAuthTokenToJSONTyped(json, false);
}
function UserSvcAuthTokenToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'active': value['active'],
        'createdAt': value['createdAt'],
        'deletedAt': value['deletedAt'],
        'id': value['id'],
        'token': value['token'],
        'updatedAt': value['updatedAt'],
        'userId': value['userId'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcChangePasswordRequest interface.
 */
function instanceOfUserSvcChangePasswordRequest(value) {
    return true;
}
function UserSvcChangePasswordRequestFromJSON(json) {
    return UserSvcChangePasswordRequestFromJSONTyped(json);
}
function UserSvcChangePasswordRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'currentPassword': json['currentPassword'] == null ? undefined : json['currentPassword'],
        'newPassword': json['newPassword'] == null ? undefined : json['newPassword'],
        'slug': json['slug'] == null ? undefined : json['slug'],
    };
}
function UserSvcChangePasswordRequestToJSON(json) {
    return UserSvcChangePasswordRequestToJSONTyped(json, false);
}
function UserSvcChangePasswordRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'currentPassword': value['currentPassword'],
        'newPassword': value['newPassword'],
        'slug': value['slug'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcContact interface.
 */
function instanceOfUserSvcContact(value) {
    return true;
}
function UserSvcContactFromJSON(json) {
    return UserSvcContactFromJSONTyped(json);
}
function UserSvcContactFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'deletedAt': json['deletedAt'] == null ? undefined : json['deletedAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'isPrimary': json['isPrimary'] == null ? undefined : json['isPrimary'],
        'platform': json['platform'] == null ? undefined : json['platform'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'value': json['value'] == null ? undefined : json['value'],
        'verified': json['verified'] == null ? undefined : json['verified'],
    };
}
function UserSvcContactToJSON(json) {
    return UserSvcContactToJSONTyped(json, false);
}
function UserSvcContactToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'deletedAt': value['deletedAt'],
        'id': value['id'],
        'isPrimary': value['isPrimary'],
        'platform': value['platform'],
        'updatedAt': value['updatedAt'],
        'userId': value['userId'],
        'value': value['value'],
        'verified': value['verified'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcCreateOrganizationRequest interface.
 */
function instanceOfUserSvcCreateOrganizationRequest(value) {
    return true;
}
function UserSvcCreateOrganizationRequestFromJSON(json) {
    return UserSvcCreateOrganizationRequestFromJSONTyped(json);
}
function UserSvcCreateOrganizationRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'slug': json['slug'] == null ? undefined : json['slug'],
    };
}
function UserSvcCreateOrganizationRequestToJSON(json) {
    return UserSvcCreateOrganizationRequestToJSONTyped(json, false);
}
function UserSvcCreateOrganizationRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'name': value['name'],
        'slug': value['slug'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcCreateRoleRequest interface.
 */
function instanceOfUserSvcCreateRoleRequest(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    return true;
}
function UserSvcCreateRoleRequestFromJSON(json) {
    return UserSvcCreateRoleRequestFromJSONTyped(json);
}
function UserSvcCreateRoleRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'description': json['description'] == null ? undefined : json['description'],
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'permissionIds': json['permissionIds'] == null ? undefined : json['permissionIds'],
    };
}
function UserSvcCreateRoleRequestToJSON(json) {
    return UserSvcCreateRoleRequestToJSONTyped(json, false);
}
function UserSvcCreateRoleRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'description': value['description'],
        'id': value['id'],
        'name': value['name'],
        'permissionIds': value['permissionIds'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcRole interface.
 */
function instanceOfUserSvcRole(value) {
    return true;
}
function UserSvcRoleFromJSON(json) {
    return UserSvcRoleFromJSONTyped(json);
}
function UserSvcRoleFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'description': json['description'] == null ? undefined : json['description'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
    };
}
function UserSvcRoleToJSON(json) {
    return UserSvcRoleToJSONTyped(json, false);
}
function UserSvcRoleToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'description': value['description'],
        'id': value['id'],
        'name': value['name'],
        'ownerId': value['ownerId'],
        'updatedAt': value['updatedAt'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcCreateRoleResponse interface.
 */
function instanceOfUserSvcCreateRoleResponse(value) {
    return true;
}
function UserSvcCreateRoleResponseFromJSON(json) {
    return UserSvcCreateRoleResponseFromJSONTyped(json);
}
function UserSvcCreateRoleResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'role': json['role'] == null ? undefined : UserSvcRoleFromJSON(json['role']),
    };
}
function UserSvcCreateRoleResponseToJSON(json) {
    return UserSvcCreateRoleResponseToJSONTyped(json, false);
}
function UserSvcCreateRoleResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'role': UserSvcRoleToJSON(value['role']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcUser interface.
 */
function instanceOfUserSvcUser(value) {
    return true;
}
function UserSvcUserFromJSON(json) {
    return UserSvcUserFromJSONTyped(json);
}
function UserSvcUserFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'contacts': json['contacts'] == null ? undefined : (json['contacts'].map(UserSvcContactFromJSON)),
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'deletedAt': json['deletedAt'] == null ? undefined : json['deletedAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'passwordHash': json['passwordHash'] == null ? undefined : json['passwordHash'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
    };
}
function UserSvcUserToJSON(json) {
    return UserSvcUserToJSONTyped(json, false);
}
function UserSvcUserToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'contacts': value['contacts'] == null ? undefined : (value['contacts'].map(UserSvcContactToJSON)),
        'createdAt': value['createdAt'],
        'deletedAt': value['deletedAt'],
        'id': value['id'],
        'name': value['name'],
        'passwordHash': value['passwordHash'],
        'slug': value['slug'],
        'updatedAt': value['updatedAt'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcCreateUserRequest interface.
 */
function instanceOfUserSvcCreateUserRequest(value) {
    return true;
}
function UserSvcCreateUserRequestFromJSON(json) {
    return UserSvcCreateUserRequestFromJSONTyped(json);
}
function UserSvcCreateUserRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'password': json['password'] == null ? undefined : json['password'],
        'roleIds': json['roleIds'] == null ? undefined : json['roleIds'],
        'user': json['user'] == null ? undefined : UserSvcUserFromJSON(json['user']),
    };
}
function UserSvcCreateUserRequestToJSON(json) {
    return UserSvcCreateUserRequestToJSONTyped(json, false);
}
function UserSvcCreateUserRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'password': value['password'],
        'roleIds': value['roleIds'],
        'user': UserSvcUserToJSON(value['user']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcErrorResponse interface.
 */
function instanceOfUserSvcErrorResponse(value) {
    return true;
}
function UserSvcErrorResponseFromJSON(json) {
    return UserSvcErrorResponseFromJSONTyped(json);
}
function UserSvcErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'error': json['error'] == null ? undefined : json['error'],
    };
}
function UserSvcErrorResponseToJSON(json) {
    return UserSvcErrorResponseToJSONTyped(json, false);
}
function UserSvcErrorResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'error': value['error'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcPermission interface.
 */
function instanceOfUserSvcPermission(value) {
    return true;
}
function UserSvcPermissionFromJSON(json) {
    return UserSvcPermissionFromJSONTyped(json);
}
function UserSvcPermissionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'description': json['description'] == null ? undefined : json['description'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
    };
}
function UserSvcPermissionToJSON(json) {
    return UserSvcPermissionToJSONTyped(json, false);
}
function UserSvcPermissionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'description': value['description'],
        'id': value['id'],
        'name': value['name'],
        'ownerId': value['ownerId'],
        'updatedAt': value['updatedAt'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcGetPermissionsResponse interface.
 */
function instanceOfUserSvcGetPermissionsResponse(value) {
    return true;
}
function UserSvcGetPermissionsResponseFromJSON(json) {
    return UserSvcGetPermissionsResponseFromJSONTyped(json);
}
function UserSvcGetPermissionsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'permissions': json['permissions'] == null ? undefined : (json['permissions'].map(UserSvcPermissionFromJSON)),
    };
}
function UserSvcGetPermissionsResponseToJSON(json) {
    return UserSvcGetPermissionsResponseToJSONTyped(json, false);
}
function UserSvcGetPermissionsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'permissions': value['permissions'] == null ? undefined : (value['permissions'].map(UserSvcPermissionToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcGetPublicKeyResponse interface.
 */
function instanceOfUserSvcGetPublicKeyResponse(value) {
    return true;
}
function UserSvcGetPublicKeyResponseFromJSON(json) {
    return UserSvcGetPublicKeyResponseFromJSONTyped(json);
}
function UserSvcGetPublicKeyResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'publicKey': json['publicKey'] == null ? undefined : json['publicKey'],
    };
}
function UserSvcGetPublicKeyResponseToJSON(json) {
    return UserSvcGetPublicKeyResponseToJSONTyped(json, false);
}
function UserSvcGetPublicKeyResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'publicKey': value['publicKey'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcGetRolesResponse interface.
 */
function instanceOfUserSvcGetRolesResponse(value) {
    return true;
}
function UserSvcGetRolesResponseFromJSON(json) {
    return UserSvcGetRolesResponseFromJSONTyped(json);
}
function UserSvcGetRolesResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'roles': json['roles'] == null ? undefined : (json['roles'].map(UserSvcRoleFromJSON)),
    };
}
function UserSvcGetRolesResponseToJSON(json) {
    return UserSvcGetRolesResponseToJSONTyped(json, false);
}
function UserSvcGetRolesResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'roles': value['roles'] == null ? undefined : (value['roles'].map(UserSvcRoleToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcGetUsersRequest interface.
 */
function instanceOfUserSvcGetUsersRequest(value) {
    return true;
}
function UserSvcGetUsersRequestFromJSON(json) {
    return UserSvcGetUsersRequestFromJSONTyped(json);
}
function UserSvcGetUsersRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'query': json['query'] == null ? undefined : DatastoreQueryFromJSON(json['query']),
    };
}
function UserSvcGetUsersRequestToJSON(json) {
    return UserSvcGetUsersRequestToJSONTyped(json, false);
}
function UserSvcGetUsersRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'query': DatastoreQueryToJSON(value['query']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcGetUsersResponse interface.
 */
function instanceOfUserSvcGetUsersResponse(value) {
    return true;
}
function UserSvcGetUsersResponseFromJSON(json) {
    return UserSvcGetUsersResponseFromJSONTyped(json);
}
function UserSvcGetUsersResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'after': json['after'] == null ? undefined : json['after'],
        'count': json['count'] == null ? undefined : json['count'],
        'users': json['users'] == null ? undefined : (json['users'].map(UserSvcUserFromJSON)),
    };
}
function UserSvcGetUsersResponseToJSON(json) {
    return UserSvcGetUsersResponseToJSONTyped(json, false);
}
function UserSvcGetUsersResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'after': value['after'],
        'count': value['count'],
        'users': value['users'] == null ? undefined : (value['users'].map(UserSvcUserToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcGrant interface.
 */
function instanceOfUserSvcGrant(value) {
    return true;
}
function UserSvcGrantFromJSON(json) {
    return UserSvcGrantFromJSONTyped(json);
}
function UserSvcGrantFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'permissionId': json['permissionId'] == null ? undefined : json['permissionId'],
        'slugs': json['slugs'] == null ? undefined : json['slugs'],
    };
}
function UserSvcGrantToJSON(json) {
    return UserSvcGrantToJSONTyped(json, false);
}
function UserSvcGrantToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'permissionId': value['permissionId'],
        'slugs': value['slugs'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcIsAuthorizedRequest interface.
 */
function instanceOfUserSvcIsAuthorizedRequest(value) {
    return true;
}
function UserSvcIsAuthorizedRequestFromJSON(json) {
    return UserSvcIsAuthorizedRequestFromJSONTyped(json);
}
function UserSvcIsAuthorizedRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'contactsGranted': json['contactsGranted'] == null ? undefined : json['contactsGranted'],
        'grantedSlugs': json['grantedSlugs'] == null ? undefined : json['grantedSlugs'],
    };
}
function UserSvcIsAuthorizedRequestToJSON(json) {
    return UserSvcIsAuthorizedRequestToJSONTyped(json, false);
}
function UserSvcIsAuthorizedRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'contactsGranted': value['contactsGranted'],
        'grantedSlugs': value['grantedSlugs'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcIsAuthorizedResponse interface.
 */
function instanceOfUserSvcIsAuthorizedResponse(value) {
    return true;
}
function UserSvcIsAuthorizedResponseFromJSON(json) {
    return UserSvcIsAuthorizedResponseFromJSONTyped(json);
}
function UserSvcIsAuthorizedResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'authorized': json['authorized'] == null ? undefined : json['authorized'],
        'user': json['user'] == null ? undefined : UserSvcUserFromJSON(json['user']),
    };
}
function UserSvcIsAuthorizedResponseToJSON(json) {
    return UserSvcIsAuthorizedResponseToJSONTyped(json, false);
}
function UserSvcIsAuthorizedResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'authorized': value['authorized'],
        'user': UserSvcUserToJSON(value['user']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcListGrantsRequest interface.
 */
function instanceOfUserSvcListGrantsRequest(value) {
    return true;
}
function UserSvcListGrantsRequestFromJSON(json) {
    return UserSvcListGrantsRequestFromJSONTyped(json);
}
function UserSvcListGrantsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'permissionId': json['permissionId'] == null ? undefined : json['permissionId'],
        'slug': json['slug'] == null ? undefined : json['slug'],
    };
}
function UserSvcListGrantsRequestToJSON(json) {
    return UserSvcListGrantsRequestToJSONTyped(json, false);
}
function UserSvcListGrantsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'permissionId': value['permissionId'],
        'slug': value['slug'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcListGrantsResponse interface.
 */
function instanceOfUserSvcListGrantsResponse(value) {
    return true;
}
function UserSvcListGrantsResponseFromJSON(json) {
    return UserSvcListGrantsResponseFromJSONTyped(json);
}
function UserSvcListGrantsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'grants': json['grants'] == null ? undefined : (json['grants'].map(UserSvcGrantFromJSON)),
    };
}
function UserSvcListGrantsResponseToJSON(json) {
    return UserSvcListGrantsResponseToJSONTyped(json, false);
}
function UserSvcListGrantsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'grants': value['grants'] == null ? undefined : (value['grants'].map(UserSvcGrantToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcLoginRequest interface.
 */
function instanceOfUserSvcLoginRequest(value) {
    return true;
}
function UserSvcLoginRequestFromJSON(json) {
    return UserSvcLoginRequestFromJSONTyped(json);
}
function UserSvcLoginRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'contact': json['contact'] == null ? undefined : json['contact'],
        'password': json['password'] == null ? undefined : json['password'],
        'slug': json['slug'] == null ? undefined : json['slug'],
    };
}
function UserSvcLoginRequestToJSON(json) {
    return UserSvcLoginRequestToJSONTyped(json, false);
}
function UserSvcLoginRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'contact': value['contact'],
        'password': value['password'],
        'slug': value['slug'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcLoginResponse interface.
 */
function instanceOfUserSvcLoginResponse(value) {
    return true;
}
function UserSvcLoginResponseFromJSON(json) {
    return UserSvcLoginResponseFromJSONTyped(json);
}
function UserSvcLoginResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'token': json['token'] == null ? undefined : UserSvcAuthTokenFromJSON(json['token']),
    };
}
function UserSvcLoginResponseToJSON(json) {
    return UserSvcLoginResponseToJSONTyped(json, false);
}
function UserSvcLoginResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'token': UserSvcAuthTokenToJSON(value['token']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcOrganization interface.
 */
function instanceOfUserSvcOrganization(value) {
    return true;
}
function UserSvcOrganizationFromJSON(json) {
    return UserSvcOrganizationFromJSONTyped(json);
}
function UserSvcOrganizationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'deletedAt': json['deletedAt'] == null ? undefined : json['deletedAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
    };
}
function UserSvcOrganizationToJSON(json) {
    return UserSvcOrganizationToJSONTyped(json, false);
}
function UserSvcOrganizationToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'createdAt': value['createdAt'],
        'deletedAt': value['deletedAt'],
        'id': value['id'],
        'name': value['name'],
        'slug': value['slug'],
        'updatedAt': value['updatedAt'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcReadUserByTokenResponse interface.
 */
function instanceOfUserSvcReadUserByTokenResponse(value) {
    return true;
}
function UserSvcReadUserByTokenResponseFromJSON(json) {
    return UserSvcReadUserByTokenResponseFromJSONTyped(json);
}
function UserSvcReadUserByTokenResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'activeOrganizationId': json['activeOrganizationId'] == null ? undefined : json['activeOrganizationId'],
        'organizations': json['organizations'] == null ? undefined : (json['organizations'].map(UserSvcOrganizationFromJSON)),
        'user': json['user'] == null ? undefined : UserSvcUserFromJSON(json['user']),
    };
}
function UserSvcReadUserByTokenResponseToJSON(json) {
    return UserSvcReadUserByTokenResponseToJSONTyped(json, false);
}
function UserSvcReadUserByTokenResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'activeOrganizationId': value['activeOrganizationId'],
        'organizations': value['organizations'] == null ? undefined : (value['organizations'].map(UserSvcOrganizationToJSON)),
        'user': UserSvcUserToJSON(value['user']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcRegisterRequest interface.
 */
function instanceOfUserSvcRegisterRequest(value) {
    return true;
}
function UserSvcRegisterRequestFromJSON(json) {
    return UserSvcRegisterRequestFromJSONTyped(json);
}
function UserSvcRegisterRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'contact': json['contact'] == null ? undefined : UserSvcContactFromJSON(json['contact']),
        'name': json['name'] == null ? undefined : json['name'],
        'password': json['password'] == null ? undefined : json['password'],
        'slug': json['slug'] == null ? undefined : json['slug'],
    };
}
function UserSvcRegisterRequestToJSON(json) {
    return UserSvcRegisterRequestToJSONTyped(json, false);
}
function UserSvcRegisterRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'contact': UserSvcContactToJSON(value['contact']),
        'name': value['name'],
        'password': value['password'],
        'slug': value['slug'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcRegisterResponse interface.
 */
function instanceOfUserSvcRegisterResponse(value) {
    return true;
}
function UserSvcRegisterResponseFromJSON(json) {
    return UserSvcRegisterResponseFromJSONTyped(json);
}
function UserSvcRegisterResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'token': json['token'] == null ? undefined : UserSvcAuthTokenFromJSON(json['token']),
    };
}
function UserSvcRegisterResponseToJSON(json) {
    return UserSvcRegisterResponseToJSONTyped(json, false);
}
function UserSvcRegisterResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'token': UserSvcAuthTokenToJSON(value['token']),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcResetPasswordRequest interface.
 */
function instanceOfUserSvcResetPasswordRequest(value) {
    return true;
}
function UserSvcResetPasswordRequestFromJSON(json) {
    return UserSvcResetPasswordRequestFromJSONTyped(json);
}
function UserSvcResetPasswordRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'newPassword': json['newPassword'] == null ? undefined : json['newPassword'],
        'slug': json['slug'] == null ? undefined : json['slug'],
    };
}
function UserSvcResetPasswordRequestToJSON(json) {
    return UserSvcResetPasswordRequestToJSONTyped(json, false);
}
function UserSvcResetPasswordRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'newPassword': value['newPassword'],
        'slug': value['slug'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcSaveGrantsRequest interface.
 */
function instanceOfUserSvcSaveGrantsRequest(value) {
    return true;
}
function UserSvcSaveGrantsRequestFromJSON(json) {
    return UserSvcSaveGrantsRequestFromJSONTyped(json);
}
function UserSvcSaveGrantsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'grants': json['grants'] == null ? undefined : (json['grants'].map(UserSvcGrantFromJSON)),
    };
}
function UserSvcSaveGrantsRequestToJSON(json) {
    return UserSvcSaveGrantsRequestToJSONTyped(json, false);
}
function UserSvcSaveGrantsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'grants': value['grants'] == null ? undefined : (value['grants'].map(UserSvcGrantToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcSavePermissionsRequest interface.
 */
function instanceOfUserSvcSavePermissionsRequest(value) {
    return true;
}
function UserSvcSavePermissionsRequestFromJSON(json) {
    return UserSvcSavePermissionsRequestFromJSONTyped(json);
}
function UserSvcSavePermissionsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'permissions': json['permissions'] == null ? undefined : (json['permissions'].map(UserSvcPermissionFromJSON)),
    };
}
function UserSvcSavePermissionsRequestToJSON(json) {
    return UserSvcSavePermissionsRequestToJSONTyped(json, false);
}
function UserSvcSavePermissionsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'permissions': value['permissions'] == null ? undefined : (value['permissions'].map(UserSvcPermissionToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcSavePermissionsResponse interface.
 */
function instanceOfUserSvcSavePermissionsResponse(value) {
    return true;
}
function UserSvcSavePermissionsResponseFromJSON(json) {
    return UserSvcSavePermissionsResponseFromJSONTyped(json);
}
function UserSvcSavePermissionsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'permissions': json['permissions'] == null ? undefined : (json['permissions'].map(UserSvcPermissionFromJSON)),
    };
}
function UserSvcSavePermissionsResponseToJSON(json) {
    return UserSvcSavePermissionsResponseToJSONTyped(json, false);
}
function UserSvcSavePermissionsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'permissions': value['permissions'] == null ? undefined : (value['permissions'].map(UserSvcPermissionToJSON)),
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcSaveProfileRequest interface.
 */
function instanceOfUserSvcSaveProfileRequest(value) {
    return true;
}
function UserSvcSaveProfileRequestFromJSON(json) {
    return UserSvcSaveProfileRequestFromJSONTyped(json);
}
function UserSvcSaveProfileRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'] == null ? undefined : json['name'],
        'slug': json['slug'] == null ? undefined : json['slug'],
    };
}
function UserSvcSaveProfileRequestToJSON(json) {
    return UserSvcSaveProfileRequestToJSONTyped(json, false);
}
function UserSvcSaveProfileRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'slug': value['slug'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UserSvcSetRolePermissionsRequest interface.
 */
function instanceOfUserSvcSetRolePermissionsRequest(value) {
    return true;
}
function UserSvcSetRolePermissionsRequestFromJSON(json) {
    return UserSvcSetRolePermissionsRequestFromJSONTyped(json);
}
function UserSvcSetRolePermissionsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'permissionIds': json['permissionIds'] == null ? undefined : json['permissionIds'],
    };
}
function UserSvcSetRolePermissionsRequestToJSON(json) {
    return UserSvcSetRolePermissionsRequestToJSONTyped(json, false);
}
function UserSvcSetRolePermissionsRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'permissionIds': value['permissionIds'],
    };
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class ChatSvcApi extends BaseAPI {
    /**
     * Add a new message to a specific thread.
     * Add Message
     */
    addMessageRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['threadId'] == null) {
                throw new RequiredError('threadId', 'Required parameter "threadId" was null or undefined when calling addMessage().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling addMessage().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/thread/{threadId}/message`.replace(`{${"threadId"}}`, encodeURIComponent(String(requestParameters['threadId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ChatSvcAddMessageRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Add a new message to a specific thread.
     * Add Message
     */
    addMessage(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.addMessageRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Create a new chat thread and add the requesting user to it. Requires the `chat-svc:thread:create` permission.
     * Add Thread
     */
    addThreadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling addThread().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/thread`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ChatSvcAddThreadRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ChatSvcAddThreadResponseFromJSON(jsonValue));
        });
    }
    /**
     * Create a new chat thread and add the requesting user to it. Requires the `chat-svc:thread:create` permission.
     * Add Thread
     */
    addThread(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.addThreadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Delete a specific message from a chat thread by its ID
     * Delete a Message
     */
    deleteMessageRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['messageId'] == null) {
                throw new RequiredError('messageId', 'Required parameter "messageId" was null or undefined when calling deleteMessage().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/message/{messageId}`.replace(`{${"messageId"}}`, encodeURIComponent(String(requestParameters['messageId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Delete a specific message from a chat thread by its ID
     * Delete a Message
     */
    deleteMessage(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteMessageRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Delete a specific chat thread by its ID
     * Delete a Thread
     */
    deleteThreadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['threadId'] == null) {
                throw new RequiredError('threadId', 'Required parameter "threadId" was null or undefined when calling deleteThread().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/thread/{threadId}`.replace(`{${"threadId"}}`, encodeURIComponent(String(requestParameters['threadId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Delete a specific chat thread by its ID
     * Delete a Thread
     */
    deleteThread(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteThreadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Events is a dummy endpoint to display documentation about the events that this service emits.
     * Events
     */
    eventsRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/chat-svc/events`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ChatSvcEventThreadUpdateFromJSON(jsonValue));
        });
    }
    /**
     * Events is a dummy endpoint to display documentation about the events that this service emits.
     * Events
     */
    events(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.eventsRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Fetch information about a specific chat message by its ID
     * Get Message
     */
    getMessageRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['messageId'] == null) {
                throw new RequiredError('messageId', 'Required parameter "messageId" was null or undefined when calling getMessage().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/message/{messageId}`.replace(`{${"messageId"}}`, encodeURIComponent(String(requestParameters['messageId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ChatSvcGetMessageResponseFromJSON(jsonValue));
        });
    }
    /**
     * Fetch information about a specific chat message by its ID
     * Get Message
     */
    getMessage(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getMessageRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Fetch messages (and associated assets) for a specific chat thread.
     * List Messages
     */
    getMessagesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['threadId'] == null) {
                throw new RequiredError('threadId', 'Required parameter "threadId" was null or undefined when calling getMessages().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/thread/{threadId}/messages`.replace(`{${"threadId"}}`, encodeURIComponent(String(requestParameters['threadId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ChatSvcGetMessagesResponseFromJSON(jsonValue));
        });
    }
    /**
     * Fetch messages (and associated assets) for a specific chat thread.
     * List Messages
     */
    getMessages(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getMessagesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Fetch information about a specific chat thread by its ID
     * Get Thread
     */
    getThreadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['threadId'] == null) {
                throw new RequiredError('threadId', 'Required parameter "threadId" was null or undefined when calling getThread().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/thread/{threadId}`.replace(`{${"threadId"}}`, encodeURIComponent(String(requestParameters['threadId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ChatSvcGetThreadResponseFromJSON(jsonValue));
        });
    }
    /**
     * Fetch information about a specific chat thread by its ID
     * Get Thread
     */
    getThread(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getThreadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Fetch all chat threads associated with a specific user
     * Get Threads
     */
    getThreadsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/threads`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters['body'],
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ChatSvcGetThreadsResponseFromJSON(jsonValue));
        });
    }
    /**
     * Fetch all chat threads associated with a specific user
     * Get Threads
     */
    getThreads() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.getThreadsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Modify the details of a specific chat thread
     * Update Thread
     */
    updateThreadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['threadId'] == null) {
                throw new RequiredError('threadId', 'Required parameter "threadId" was null or undefined when calling updateThread().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling updateThread().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/chat-svc/thread/{threadId}`.replace(`{${"threadId"}}`, encodeURIComponent(String(requestParameters['threadId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: ChatSvcUpdateThreadRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ChatSvcAddThreadResponseFromJSON(jsonValue));
        });
    }
    /**
     * Modify the details of a specific chat thread
     * Update Thread
     */
    updateThread(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateThreadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class ConfigSvcApi extends BaseAPI {
    /**
     * Fetch the current configuration from the server
     * Get Config
     */
    getConfigRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['namespace'] != null) {
                queryParameters['namespace'] = requestParameters['namespace'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/config-svc/config`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ConfigSvcGetConfigResponseFromJSON(jsonValue));
        });
    }
    /**
     * Fetch the current configuration from the server
     * Get Config
     */
    getConfig() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.getConfigRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Save the provided configuration to the server
     * Save Config
     */
    saveConfigRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling saveConfig().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/config-svc/config`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: ConfigSvcSaveConfigRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Save the provided configuration to the server
     * Save Config
     */
    saveConfig(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveConfigRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class ContainerSvcApi extends BaseAPI {
    /**
     * Builds a Docker image with the specified parameters.  Requires the `container-svc:image:build` permission.
     * Build an Image
     */
    buildImageRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling buildImage().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/image`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: ContainerSvcBuildImageRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Builds a Docker image with the specified parameters.  Requires the `container-svc:image:build` permission.
     * Build an Image
     */
    buildImage(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.buildImageRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieve detailed information about the availability and status of container daemons on the node.
     * Get Container Daemon Information
     */
    containerDaemonInfoRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/daemon/info`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ContainerSvcDaemonInfoResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieve detailed information about the availability and status of container daemons on the node.
     * Get Container Daemon Information
     */
    containerDaemonInfo(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.containerDaemonInfoRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Check if a Docker container is running, identified by hash or name.
     * Check If a Container Is Running
     */
    containerIsRunningRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['hash'] != null) {
                queryParameters['hash'] = requestParameters['hash'];
            }
            if (requestParameters['name'] != null) {
                queryParameters['name'] = requestParameters['name'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/container/is-running`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ContainerSvcContainerIsRunningResponseFromJSON(jsonValue));
        });
    }
    /**
     * Check if a Docker container is running, identified by hash or name.
     * Check If a Container Is Running
     */
    containerIsRunning() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.containerIsRunningRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get a summary of the Docker container identified by hash or name, limited to a specified number of lines.
     * Get Container Summary
     */
    containerSummaryRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['hash'] != null) {
                queryParameters['hash'] = requestParameters['hash'];
            }
            if (requestParameters['name'] != null) {
                queryParameters['name'] = requestParameters['name'];
            }
            if (requestParameters['lines'] != null) {
                queryParameters['lines'] = requestParameters['lines'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/container/summary`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ContainerSvcGetContainerSummaryResponseFromJSON(jsonValue));
        });
    }
    /**
     * Get a summary of the Docker container identified by hash or name, limited to a specified number of lines.
     * Get Container Summary
     */
    containerSummary() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.containerSummaryRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieve information about the Container host
     * Get Container Host
     */
    getHostRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/host`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ContainerSvcGetHostResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieve information about the Container host
     * Get Container Host
     */
    getHost(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getHostRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Check if an image exists on in the container registry and is pullable.
     * Check if Container Image is Pullable
     */
    imagePullableRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['imageName'] == null) {
                throw new RequiredError('imageName', 'Required parameter "imageName" was null or undefined when calling imagePullable().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/image/{imageName}/pullable`.replace(`{${"imageName"}}`, encodeURIComponent(String(requestParameters['imageName']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ContainerSvcImagePullableResponseFromJSON(jsonValue));
        });
    }
    /**
     * Check if an image exists on in the container registry and is pullable.
     * Check if Container Image is Pullable
     */
    imagePullable(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.imagePullableRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * List Container logs.  Requires the `container-svc:log:view` permission.
     * List Logs
     */
    listContainerLogsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling listContainerLogs().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/logs`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ContainerSvcListLogsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ContainerSvcListLogsResponseFromJSON(jsonValue));
        });
    }
    /**
     * List Container logs.  Requires the `container-svc:log:view` permission.
     * List Logs
     */
    listContainerLogs(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listContainerLogsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * List containers.  Requires the `container-svc:container:view` permission.
     * List Containers
     */
    listContainersRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling listContainers().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/containers`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ContainerSvcListContainersRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ContainerSvcListContainersResponseFromJSON(jsonValue));
        });
    }
    /**
     * List containers.  Requires the `container-svc:container:view` permission.
     * List Containers
     */
    listContainers(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listContainersRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Runs a Docker container with the specified parameters.  Requires the `container-svc:container:run` permission.
     * Run a Container
     */
    runContainerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling runContainer().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/container`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: ContainerSvcRunContainerRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ContainerSvcRunContainerResponseFromJSON(jsonValue));
        });
    }
    /**
     * Runs a Docker container with the specified parameters.  Requires the `container-svc:container:run` permission.
     * Run a Container
     */
    runContainer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.runContainerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Stops a Docker container with the specified parameters.  Requires the `container-svc:container:stop` permission.
     * Stop a Container
     */
    stopContainerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling stopContainer().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/container-svc/container/stop`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: ContainerSvcStopContainerRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Stops a Docker container with the specified parameters.  Requires the `container-svc:container:stop` permission.
     * Stop a Container
     */
    stopContainer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.stopContainerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class DataSvcApi extends BaseAPI {
    /**
     * Creates a new object with the provided details. Requires authorization and user authentication.
     * Create a Generic Object
     */
    createObjectRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling createObject().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/data-svc/object`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: DataSvcCreateObjectRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => DataSvcCreateObjectResponseFromJSON(jsonValue));
        });
    }
    /**
     * Creates a new object with the provided details. Requires authorization and user authentication.
     * Create a Generic Object
     */
    createObject(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createObjectRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Deletes all objects matchin the provided filters.
     * Delete Objects
     */
    deleteObjectsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling deleteObjects().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/data-svc/objects/delete`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: DataSvcDeleteObjectRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Deletes all objects matchin the provided filters.
     * Delete Objects
     */
    deleteObjects(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteObjectsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieves objects from a specified table based on search criteria. Requires authorization and user authentication.   Use helper functions in your respective client library such as condition constructors (`equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.
     * Query Objects
     */
    queryObjectsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/data-svc/objects`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: DataSvcQueryRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => DataSvcQueryResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieves objects from a specified table based on search criteria. Requires authorization and user authentication.   Use helper functions in your respective client library such as condition constructors (`equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.
     * Query Objects
     */
    queryObjects() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.queryObjectsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Update fields of objects that match the given filters using the provided object. Any fields not included in the incoming object will remain unchanged.
     * Update Objects
     */
    updateObjectsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling updateObjects().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/data-svc/objects/update`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: DataSvcUpdateObjectsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Update fields of objects that match the given filters using the provided object. Any fields not included in the incoming object will remain unchanged.
     * Update Objects
     */
    updateObjects(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateObjectsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Creates a new dynamic object or updates an existing one based on the provided data. Requires authorization and user authentication.
     * Upsert a Generic Object
     */
    upsertObjectRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['objectId'] == null) {
                throw new RequiredError('objectId', 'Required parameter "objectId" was null or undefined when calling upsertObject().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling upsertObject().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/data-svc/object/{objectId}`.replace(`{${"objectId"}}`, encodeURIComponent(String(requestParameters['objectId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: DataSvcUpsertObjectRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => DataSvcUpsertObjectResponseFromJSON(jsonValue));
        });
    }
    /**
     * Creates a new dynamic object or updates an existing one based on the provided data. Requires authorization and user authentication.
     * Upsert a Generic Object
     */
    upsertObject(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.upsertObjectRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Upserts objects by ids.
     * Upsert Objects
     */
    upsertObjectsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling upsertObjects().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/data-svc/objects/upsert`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: DataSvcUpsertObjectRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => DataSvcUpsertObjectResponseFromJSON(jsonValue));
        });
    }
    /**
     * Upserts objects by ids.
     * Upsert Objects
     */
    upsertObjects(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.upsertObjectsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class DeploySvcApi extends BaseAPI {
    /**
     * Delete a deployment.
     * Delete Deployment
     */
    deleteDeploymentRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/deploy-svc/deployment`,
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: DeploySvcDeleteDeploymentRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Delete a deployment.
     * Delete Deployment
     */
    deleteDeployment() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.deleteDeploymentRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieve a list of deployments.
     * List Deployments
     */
    listDeploymentsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/deploy-svc/deployments`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters['body'],
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => DeploySvcListDeploymentsResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieve a list of deployments.
     * List Deployments
     */
    listDeployments() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.listDeploymentsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Save a deployment.
     * Save Deployment
     */
    saveDeploymentRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/deploy-svc/deployment`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: DeploySvcSaveDeploymentRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Save a deployment.
     * Save Deployment
     */
    saveDeployment() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.saveDeploymentRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class EmailSvcApi extends BaseAPI {
    /**
     * Send an email with attachments.
     * Send an Email
     */
    sendEmailRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling sendEmail().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/email-svc/email`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: EmailSvcSendEmailRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => EmailSvcSendEmailResponseFromJSON(jsonValue));
        });
    }
    /**
     * Send an email with attachments.
     * Send an Email
     */
    sendEmail(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.sendEmailRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class FileSvcApi extends BaseAPI {
    /**
     * Start or resume the download for a specified URL.  Requires the `file-svc:download:create` permission.
     * Download a File
     */
    downloadFileRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling downloadFile().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/file-svc/download`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: FileSvcDownloadFileRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Start or resume the download for a specified URL.  Requires the `file-svc:download:create` permission.
     * Download a File
     */
    downloadFile(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.downloadFileRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get a download by URL.  Requires the `file-svc:download:view` permission.
     * Get a Download
     */
    getDownloadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['url'] == null) {
                throw new RequiredError('url', 'Required parameter "url" was null or undefined when calling getDownload().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/file-svc/download/{url}`.replace(`{${"url"}}`, encodeURIComponent(String(requestParameters['url']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => FileSvcGetDownloadResponseFromJSON(jsonValue));
        });
    }
    /**
     * Get a download by URL.  Requires the `file-svc:download:view` permission.
     * Get a Download
     */
    getDownload(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getDownloadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * List download details.  Requires the `file-svc:download:view` permission.
     * List Downloads
     */
    listDownloadsRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/file-svc/downloads`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => FileSvcDownloadsResponseFromJSON(jsonValue));
        });
    }
    /**
     * List download details.  Requires the `file-svc:download:view` permission.
     * List Downloads
     */
    listDownloads(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listDownloadsRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * List the uploaded files.  Requires the `file-svc:upload:view` permission.
     * List Uploads
     */
    listUploadsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/file-svc/uploads`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: FileSvcListUploadsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => FileSvcListUploadsResponseFromJSON(jsonValue));
        });
    }
    /**
     * List the uploaded files.  Requires the `file-svc:upload:view` permission.
     * List Uploads
     */
    listUploads() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.listUploadsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Pause a download that is currently in progress.  Requires the `file-svc:download:edit` permission.
     * Pause a Download
     */
    pauseDownloadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['url'] == null) {
                throw new RequiredError('url', 'Required parameter "url" was null or undefined when calling pauseDownload().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/file-svc/download/{url}/pause`.replace(`{${"url"}}`, encodeURIComponent(String(requestParameters['url']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Pause a download that is currently in progress.  Requires the `file-svc:download:edit` permission.
     * Pause a Download
     */
    pauseDownload(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.pauseDownloadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Serves a previously downloaded file based on its URL.
     * Serve a Downloaded file
     */
    serveDownloadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['url'] == null) {
                throw new RequiredError('url', 'Required parameter "url" was null or undefined when calling serveDownload().');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/file-svc/serve/download/{url}`.replace(`{${"url"}}`, encodeURIComponent(String(requestParameters['url']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new BlobApiResponse(response);
        });
    }
    /**
     * Serves a previously downloaded file based on its URL.
     * Serve a Downloaded file
     */
    serveDownload(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.serveDownloadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieves and serves a previously uploaded file using its File ID. Note: The `ID` and `FileID` fields of an upload are different. - `FileID` is a unique identifier for the file itself. - `ID` is a unique identifier for a specific replica of the file. Since OpenOrch is a distributed system, files can be replicated across multiple nodes. This means each uploaded file may have multiple records with the same `FileID` but different `ID`s.
     * Serve an Uploaded File
     */
    serveUploadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['fileId'] == null) {
                throw new RequiredError('fileId', 'Required parameter "fileId" was null or undefined when calling serveUpload().');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/file-svc/serve/upload/{fileId}`.replace(`{${"fileId"}}`, encodeURIComponent(String(requestParameters['fileId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new BlobApiResponse(response);
        });
    }
    /**
     * Retrieves and serves a previously uploaded file using its File ID. Note: The `ID` and `FileID` fields of an upload are different. - `FileID` is a unique identifier for the file itself. - `ID` is a unique identifier for a specific replica of the file. Since OpenOrch is a distributed system, files can be replicated across multiple nodes. This means each uploaded file may have multiple records with the same `FileID` but different `ID`s.
     * Serve an Uploaded File
     */
    serveUpload(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.serveUploadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Uploads a file to the server. Currently if using the clients only one file can be uploaded at a time due to this bug https://github.com/OpenAPITools/openapi-generator/issues/11341 Once that is fixed we should have an `PUT /file-svc/uploads`/uploadFiles (note the plural) endpoints. In reality the endpoint \"unofficially\" supports multiple files. YMMV.  Requires the `file-svc:upload:create` permission.
     * Upload a File
     */
    uploadFileRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['file'] == null) {
                throw new RequiredError('file', 'Required parameter "file" was null or undefined when calling uploadFile().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const consumes = [
                { contentType: 'multipart/form-data' },
            ];
            // @ts-ignore: canConsumeForm may be unused
            const canConsumeForm$1 = canConsumeForm(consumes);
            let formParams;
            let useForm = false;
            // use FormData to transmit files using content-type "multipart/form-data"
            useForm = canConsumeForm$1;
            if (useForm) {
                formParams = new FormData();
            }
            else {
                formParams = new URLSearchParams();
            }
            if (requestParameters['file'] != null) {
                formParams.append('file', requestParameters['file']);
            }
            const response = yield this.request({
                path: `/file-svc/upload`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: formParams,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => FileSvcUploadFileResponseFromJSON(jsonValue));
        });
    }
    /**
     * Uploads a file to the server. Currently if using the clients only one file can be uploaded at a time due to this bug https://github.com/OpenAPITools/openapi-generator/issues/11341 Once that is fixed we should have an `PUT /file-svc/uploads`/uploadFiles (note the plural) endpoints. In reality the endpoint \"unofficially\" supports multiple files. YMMV.  Requires the `file-svc:upload:create` permission.
     * Upload a File
     */
    uploadFile(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.uploadFileRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class FirehoseSvcApi extends BaseAPI {
    /**
     * Publishes an event to the firehose service after authorization check
     * Publish an Event
     */
    publishEventRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['event'] == null) {
                throw new RequiredError('event', 'Required parameter "event" was null or undefined when calling publishEvent().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/firehose-svc/event`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: FirehoseSvcEventPublishRequestToJSON(requestParameters['event']),
            }, initOverrides);
            return new VoidApiResponse(response);
        });
    }
    /**
     * Publishes an event to the firehose service after authorization check
     * Publish an Event
     */
    publishEvent(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.publishEventRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Establish a subscription to the firehose events and accept a real time stream of them.
     * Subscribe to the Event Stream
     */
    subscribeToEventsRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/firehose-svc/events/subscribe`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            if (this.isJsonMime(response.headers.get('content-type'))) {
                return new JSONApiResponse(response);
            }
            else {
                return new TextApiResponse(response);
            }
        });
    }
    /**
     * Establish a subscription to the firehose events and accept a real time stream of them.
     * Subscribe to the Event Stream
     */
    subscribeToEvents(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.subscribeToEventsRaw(initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class ModelSvcApi extends BaseAPI {
    /**
     * Retrieves the status of the default model.  Requires the `model-svc:model:view` permission.
     * Get Default Model Status
     */
    getDefaultModelStatusRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/model-svc/default-model/status`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ModelSvcStatusResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieves the status of the default model.  Requires the `model-svc:model:view` permission.
     * Get Default Model Status
     */
    getDefaultModelStatus(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getDefaultModelStatusRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieves the details of a model by its ID.  the Requires `model.view` permission.
     * Get a Model
     */
    getModelRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['modelId'] == null) {
                throw new RequiredError('modelId', 'Required parameter "modelId" was null or undefined when calling getModel().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/model-svc/model/{modelId}`.replace(`{${"modelId"}}`, encodeURIComponent(String(requestParameters['modelId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ModelSvcGetModelResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieves the details of a model by its ID.  the Requires `model.view` permission.
     * Get a Model
     */
    getModel(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getModelRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieves the status of a model by ID.  Requires the `model-svc:model:view` permission.
     * Get Model Status
     */
    getModelStatusRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['modelId'] == null) {
                throw new RequiredError('modelId', 'Required parameter "modelId" was null or undefined when calling getModelStatus().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/model-svc/model/{modelId}/status`.replace(`{${"modelId"}}`, encodeURIComponent(String(requestParameters['modelId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ModelSvcStatusResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieves the status of a model by ID.  Requires the `model-svc:model:view` permission.
     * Get Model Status
     */
    getModelStatus(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getModelStatusRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieves a list of models.  Requires `model-svc:model:view` permission.
     * List Models
     */
    listModelsRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/model-svc/models`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ModelSvcListModelsResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieves a list of models.  Requires `model-svc:model:view` permission.
     * List Models
     */
    listModels(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listModelsRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.  Requires `model-svc:platform:view` permission.
     * List Platforms
     */
    listPlatformsRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/model-svc/platforms`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => ModelSvcListPlatformsResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.  Requires `model-svc:platform:view` permission.
     * List Platforms
     */
    listPlatforms(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listPlatformsRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Sets a model as the default model — when prompts are sent without a Model ID, the default model is used.
     * Make a Model Default
     */
    makeDefaultRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['modelId'] == null) {
                throw new RequiredError('modelId', 'Required parameter "modelId" was null or undefined when calling makeDefault().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/model-svc/model/{modelId}/make-default`.replace(`{${"modelId"}}`, encodeURIComponent(String(requestParameters['modelId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Sets a model as the default model — when prompts are sent without a Model ID, the default model is used.
     * Make a Model Default
     */
    makeDefault(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.makeDefaultRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Starts The Default Model.  Requires the `model-svc:model:create` permission.
     * Start the Default Model
     */
    startDefaultModelRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/model-svc/default-model/start`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Starts The Default Model.  Requires the `model-svc:model:create` permission.
     * Start the Default Model
     */
    startDefaultModel(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.startDefaultModelRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Starts a model by ID
     * Start a Model
     */
    startModelRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['modelId'] == null) {
                throw new RequiredError('modelId', 'Required parameter "modelId" was null or undefined when calling startModel().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/model-svc/model/{modelId}/start`.replace(`{${"modelId"}}`, encodeURIComponent(String(requestParameters['modelId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Starts a model by ID
     * Start a Model
     */
    startModel(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.startModelRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class PolicySvcApi extends BaseAPI {
    /**
     * Check records a resource access and returns if the access is allowed.
     * Check
     */
    checkRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling check().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/policy-svc/check`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: PolicySvcCheckRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => PolicySvcCheckResponseFromJSON(jsonValue));
        });
    }
    /**
     * Check records a resource access and returns if the access is allowed.
     * Check
     */
    check(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.checkRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Allows user to upsert a new policy instance based on a template.
     * Upsert an Instance
     */
    upsertInstanceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['instanceId'] == null) {
                throw new RequiredError('instanceId', 'Required parameter "instanceId" was null or undefined when calling upsertInstance().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling upsertInstance().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/policy-svc/instance/{instanceId}`.replace(`{${"instanceId"}}`, encodeURIComponent(String(requestParameters['instanceId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: PolicySvcUpsertInstanceRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Allows user to upsert a new policy instance based on a template.
     * Upsert an Instance
     */
    upsertInstance(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.upsertInstanceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class PromptSvcApi extends BaseAPI {
    /**
     * List prompts that satisfy a query.
     * List Prompts
     */
    listPromptsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/prompt-svc/prompts`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: PromptSvcListPromptsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => PromptSvcListPromptsResponseFromJSON(jsonValue));
        });
    }
    /**
     * List prompts that satisfy a query.
     * List Prompts
     */
    listPrompts() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.listPromptsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.  Prompts can be used for `text-to-text`, `text-to-image`, `image-to-image`, and other types of generation. If no model ID is specified, the default model will be used (see `Model Svc` for details). The default model may or may not support the requested generation type.  **Prompting Modes** - **High-Level Parameters**: Uses predefined parameters relevant to `text-to-image`, `image-to-image`, etc. This mode abstracts away the underlying engine (e.g., LLaMA, Stable Diffusion) and focuses on functionality. - **Engine-Specific Parameters**: Uses `engineParameters` to directly specify an AI engine, exposing all available parameters for fine-tuned control.  **Permissions Required:** `prompt-svc:prompt:create`
     * Prompt an AI
     */
    promptRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling prompt().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/prompt-svc/prompt`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: PromptSvcPromptRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => PromptSvcPromptResponseFromJSON(jsonValue));
        });
    }
    /**
     * Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.  Prompts can be used for `text-to-text`, `text-to-image`, `image-to-image`, and other types of generation. If no model ID is specified, the default model will be used (see `Model Svc` for details). The default model may or may not support the requested generation type.  **Prompting Modes** - **High-Level Parameters**: Uses predefined parameters relevant to `text-to-image`, `image-to-image`, etc. This mode abstracts away the underlying engine (e.g., LLaMA, Stable Diffusion) and focuses on functionality. - **Engine-Specific Parameters**: Uses `engineParameters` to directly specify an AI engine, exposing all available parameters for fine-tuned control.  **Permissions Required:** `prompt-svc:prompt:create`
     * Prompt an AI
     */
    prompt(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.promptRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * The only purpose of this \"endpoint\" is to export types otherwise not appearing in the API docs. This endpoint otherwise does nothing. Do not depend on this endpoint, only its types.
     * Prompt Types
     */
    promptTypesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling promptTypes().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/prompt-svc/types`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters['body'],
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => PromptSvcTypesResponseFromJSON(jsonValue));
        });
    }
    /**
     * The only purpose of this \"endpoint\" is to export types otherwise not appearing in the API docs. This endpoint otherwise does nothing. Do not depend on this endpoint, only its types.
     * Prompt Types
     */
    promptTypes(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.promptTypesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Remove a prompt by ID.
     * Remove Prompt
     */
    removePromptRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling removePrompt().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/prompt-svc/remove`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: PromptSvcRemovePromptRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Remove a prompt by ID.
     * Remove Prompt
     */
    removePrompt(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.removePromptRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Subscribe to prompt responses by thread via Server-Sent Events (SSE). You can subscribe to threads before they are created. The streamed strings are of type `StreamChunk`, see the PromptTypes endpoint for more details.
     * Subscribe to Prompt Responses by Thread
     */
    subscribeToPromptResponsesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['threadId'] == null) {
                throw new RequiredError('threadId', 'Required parameter "threadId" was null or undefined when calling subscribeToPromptResponses().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/prompt-svc/prompts/{threadId}/responses/subscribe`.replace(`{${"threadId"}}`, encodeURIComponent(String(requestParameters['threadId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            if (this.isJsonMime(response.headers.get('content-type'))) {
                return new JSONApiResponse(response);
            }
            else {
                return new TextApiResponse(response);
            }
        });
    }
    /**
     * Subscribe to prompt responses by thread via Server-Sent Events (SSE). You can subscribe to threads before they are created. The streamed strings are of type `StreamChunk`, see the PromptTypes endpoint for more details.
     * Subscribe to Prompt Responses by Thread
     */
    subscribeToPromptResponses(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.subscribeToPromptResponsesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class RegistrySvcApi extends BaseAPI {
    /**
     * Deletes a registered definition by ID.
     * Delete Definition
     */
    deleteDefinitionRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['id'] == null) {
                throw new RequiredError('id', 'Required parameter "id" was null or undefined when calling deleteDefinition().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/definition/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new VoidApiResponse(response);
        });
    }
    /**
     * Deletes a registered definition by ID.
     * Delete Definition
     */
    deleteDefinition(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteDefinitionRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Deletes a registered node by node URL. This endpoint is useful when a node is no longer available but it\'s still present in the database.
     * Delete Node
     */
    deleteNodeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['url'] == null) {
                throw new RequiredError('url', 'Required parameter "url" was null or undefined when calling deleteNode().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/node/{url}`.replace(`{${"url"}}`, encodeURIComponent(String(requestParameters['url']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new VoidApiResponse(response);
        });
    }
    /**
     * Deletes a registered node by node URL. This endpoint is useful when a node is no longer available but it\'s still present in the database.
     * Delete Node
     */
    deleteNode(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteNodeRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Retrieves a list of all definitions or filters them by specific criteria.
     * List Definitions
     */
    listDefinitionsRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/definitions`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => RegistrySvcListDefinitionsResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieves a list of all definitions or filters them by specific criteria.
     * List Definitions
     */
    listDefinitions(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listDefinitionsRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieves a list of all instances or filters them by specific criteria (e.g., host, IP).
     * List Service Instances
     */
    listInstancesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['scheme'] != null) {
                queryParameters['scheme'] = requestParameters['scheme'];
            }
            if (requestParameters['ip'] != null) {
                queryParameters['ip'] = requestParameters['ip'];
            }
            if (requestParameters['deploymentId'] != null) {
                queryParameters['deploymentId'] = requestParameters['deploymentId'];
            }
            if (requestParameters['host'] != null) {
                queryParameters['host'] = requestParameters['host'];
            }
            if (requestParameters['ip2'] != null) {
                queryParameters['ip'] = requestParameters['ip2'];
            }
            if (requestParameters['id'] != null) {
                queryParameters['id'] = requestParameters['id'];
            }
            if (requestParameters['slug'] != null) {
                queryParameters['slug'] = requestParameters['slug'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/instances`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => RegistrySvcListInstancesResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieves a list of all instances or filters them by specific criteria (e.g., host, IP).
     * List Service Instances
     */
    listInstances() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.listInstancesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieve a list of nodes.
     * List Nodes
     */
    listNodesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/nodes`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: RegistrySvcListNodesRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => RegistrySvcListNodesResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieve a list of nodes.
     * List Nodes
     */
    listNodes() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.listNodesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Registers an instance. Idempotent.
     * Register Instance
     */
    registerInstanceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling registerInstance().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/instance`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: RegistrySvcRegisterInstanceRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Registers an instance. Idempotent.
     * Register Instance
     */
    registerInstance(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.registerInstanceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Removes a registered instance by ID.
     * Remove Instance
     */
    removeInstanceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['id'] == null) {
                throw new RequiredError('id', 'Required parameter "id" was null or undefined when calling removeInstance().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/instance/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new VoidApiResponse(response);
        });
    }
    /**
     * Removes a registered instance by ID.
     * Remove Instance
     */
    removeInstance(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.removeInstanceRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Registers a new definition, associating an definition address with a slug acquired from the bearer token.
     * Register a Definition
     */
    saveDefinitionRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling saveDefinition().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/definition`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: RegistrySvcSaveDefinitionRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Registers a new definition, associating an definition address with a slug acquired from the bearer token.
     * Register a Definition
     */
    saveDefinition(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveDefinitionRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Show the local node.
     * View Self Node
     */
    selfNodeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/registry-svc/node/self`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters['body'],
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => RegistrySvcNodeSelfResponseFromJSON(jsonValue));
        });
    }
    /**
     * Show the local node.
     * View Self Node
     */
    selfNode() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.selfNodeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class SecretSvcApi extends BaseAPI {
    /**
     * Decrypt a value and return the encrypted result
     * Decrypt a Value
     */
    decryptValueRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling decryptValue().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/secret-svc/decrypt`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SecretSvcDecryptValueRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => SecretSvcDecryptValueResponseFromJSON(jsonValue));
        });
    }
    /**
     * Decrypt a value and return the encrypted result
     * Decrypt a Value
     */
    decryptValue(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.decryptValueRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Encrypt a value and return the encrypted result
     * Encrypt a Value
     */
    encryptValueRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling encryptValue().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/secret-svc/encrypt`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SecretSvcEncryptValueRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => SecretSvcEncryptValueResponseFromJSON(jsonValue));
        });
    }
    /**
     * Encrypt a value and return the encrypted result
     * Encrypt a Value
     */
    encryptValue(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.encryptValueRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Returns true if the encryption key is sufficiently secure.
     * Check Security Status
     */
    isSecureRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/secret-svc/is-secure`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => SecretSvcIsSecureResponseFromJSON(jsonValue));
        });
    }
    /**
     * Returns true if the encryption key is sufficiently secure.
     * Check Security Status
     */
    isSecure(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.isSecureRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * List secrets by key(s) if authorized.
     * List Secrets
     */
    listSecretsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/secret-svc/secrets`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SecretSvcListSecretsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => SecretSvcListSecretsResponseFromJSON(jsonValue));
        });
    }
    /**
     * List secrets by key(s) if authorized.
     * List Secrets
     */
    listSecrets() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.listSecretsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Remove secrets if authorized to do so
     * Remove Secrets
     */
    removeSecretsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling removeSecrets().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/secret-svc/secrets`,
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: SecretSvcRemoveSecretsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Remove secrets if authorized to do so
     * Remove Secrets
     */
    removeSecrets(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.removeSecretsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Save secrets if authorized to do so
     * Save Secrets
     */
    saveSecretsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling saveSecrets().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/secret-svc/secrets`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: SecretSvcSaveSecretsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Save secrets if authorized to do so
     * Save Secrets
     */
    saveSecrets(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveSecretsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class SourceSvcApi extends BaseAPI {
    /**
     * Checkout a git repository over https or ssh at a specific version into a temporary directory. Performs a shallow clone with minimal history for faster checkout.
     * Checkout a git repository
     */
    checkoutRepoRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling checkoutRepo().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/source-svc/repo/checkout`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SourceSvcCheckoutRepoRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => SourceSvcCheckoutRepoResponseFromJSON(jsonValue));
        });
    }
    /**
     * Checkout a git repository over https or ssh at a specific version into a temporary directory. Performs a shallow clone with minimal history for faster checkout.
     * Checkout a git repository
     */
    checkoutRepo(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.checkoutRepoRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * A language-agnostic microservices framework for building AI applications.
 *
 * The version of the OpenAPI document: 0.3.0-rc.29
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class UserSvcApi extends BaseAPI {
    /**
     * Allows an authorized user to add another user to a specific organization. The user will be assigned a specific role within the organization.
     * Add a User to an Organization
     */
    addUserToOrganizationRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['organizationId'] == null) {
                throw new RequiredError('organizationId', 'Required parameter "organizationId" was null or undefined when calling addUserToOrganization().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling addUserToOrganization().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/organization/{organizationId}/user`.replace(`{${"organizationId"}}`, encodeURIComponent(String(requestParameters['organizationId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcAddUserToOrganizationRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Allows an authorized user to add another user to a specific organization. The user will be assigned a specific role within the organization.
     * Add a User to an Organization
     */
    addUserToOrganization(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.addUserToOrganizationRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Assign permissions to roles.  Requires the `user-svc:permission:assign` permission.
     * Assign Permissions
     */
    assignPermissionsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling assignPermissions().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/roles/permissions`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcAssignPermissionsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Assign permissions to roles.  Requires the `user-svc:permission:assign` permission.
     * Assign Permissions
     */
    assignPermissions(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.assignPermissionsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Allows an authenticated user to change their own password.
     * Change User Password
     */
    changePasswordRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling changePassword().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/change-password`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcChangePasswordRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Allows an authenticated user to change their own password.
     * Change User Password
     */
    changePassword(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.changePasswordRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Allows a logged-in user to create a new organization. The user initiating the request will be assigned the role of admin for that organization. The initiating user will receive a dynamic role in the format `user-svc:org:{organizationId}:admin`, where `{organizationId}` is a unique identifier for the created organization. Dynamic roles are generated based on specific user-resource associations (in this case the resource being the organization), offering more flexible permission management compared to static roles.
     * Create an Organization
     */
    createOrganizationRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling createOrganization().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/organization`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcCreateOrganizationRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Allows a logged-in user to create a new organization. The user initiating the request will be assigned the role of admin for that organization. The initiating user will receive a dynamic role in the format `user-svc:org:{organizationId}:admin`, where `{organizationId}` is a unique identifier for the created organization. Dynamic roles are generated based on specific user-resource associations (in this case the resource being the organization), offering more flexible permission management compared to static roles.
     * Create an Organization
     */
    createOrganization(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createOrganizationRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Create a new role. <b>The role ID must be prefixed by the caller\'s slug.</b> Eg. if the caller\'s slug is `petstore-svc` the role should look like `petstore-svc:admin`. The user account who creates the role will become the owner of that role, and only the owner will be able to edit the role.  Requires the `user-svc:role:create` permission.
     * Create a New Role
     */
    createRoleRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling createRole().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/role`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcCreateRoleRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcCreateRoleResponseFromJSON(jsonValue));
        });
    }
    /**
     * Create a new role. <b>The role ID must be prefixed by the caller\'s slug.</b> Eg. if the caller\'s slug is `petstore-svc` the role should look like `petstore-svc:admin`. The user account who creates the role will become the owner of that role, and only the owner will be able to edit the role.  Requires the `user-svc:role:create` permission.
     * Create a New Role
     */
    createRole(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createRoleRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Allows an authenticated administrator to create a new user with specified details.
     * Create a New User
     */
    createUserRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling createUser().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/user`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcCreateUserRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Allows an authenticated administrator to create a new user with specified details.
     * Create a New User
     */
    createUser(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createUserRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Delete a role based on the role ID.
     * Delete a Role
     */
    deleteRoleRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['roleId'] == null) {
                throw new RequiredError('roleId', 'Required parameter "roleId" was null or undefined when calling deleteRole().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/role/{roleId}`.replace(`{${"roleId"}}`, encodeURIComponent(String(requestParameters['roleId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Delete a role based on the role ID.
     * Delete a Role
     */
    deleteRole(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteRoleRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Delete a user based on the user ID.
     * Delete a User
     */
    deleteUserRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['userId'] == null) {
                throw new RequiredError('userId', 'Required parameter "userId" was null or undefined when calling deleteUser().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/user/{userId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters['userId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Delete a user based on the user ID.
     * Delete a User
     */
    deleteUser(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteUserRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieve permissions associated with a specific role ID.
     * Get Permissions by Role
     */
    getPermissionsByRoleRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['roleId'] == null) {
                throw new RequiredError('roleId', 'Required parameter "roleId" was null or undefined when calling getPermissionsByRole().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/role/{roleId}/permissions`.replace(`{${"roleId"}}`, encodeURIComponent(String(requestParameters['roleId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcGetPermissionsResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieve permissions associated with a specific role ID.
     * Get Permissions by Role
     */
    getPermissionsByRole(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getPermissionsByRoleRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get the public key to parse and verify the JWT.
     * Get Public Key
     */
    getPublicKeyRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/user-svc/public-key`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcGetPublicKeyResponseFromJSON(jsonValue));
        });
    }
    /**
     * Get the public key to parse and verify the JWT.
     * Get Public Key
     */
    getPublicKey(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getPublicKeyRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieve all roles from the user service.
     * Get all Roles
     */
    getRolesRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/roles`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcGetRolesResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieve all roles from the user service.
     * Get all Roles
     */
    getRoles(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getRolesRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Fetches a list of users with optional query filters and pagination.
     * List Users
     */
    getUsersRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/users`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcGetUsersRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcGetUsersResponseFromJSON(jsonValue));
        });
    }
    /**
     * Fetches a list of users with optional query filters and pagination.
     * List Users
     */
    getUsers() {
        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {
            const response = yield this.getUsersRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Check if a user is authorized for a specific permission.
     * Is Authorized
     */
    isAuthorizedRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['permissionId'] == null) {
                throw new RequiredError('permissionId', 'Required parameter "permissionId" was null or undefined when calling isAuthorized().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/permission/{permissionId}/is-authorized`.replace(`{${"permissionId"}}`, encodeURIComponent(String(requestParameters['permissionId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcIsAuthorizedRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcIsAuthorizedResponseFromJSON(jsonValue));
        });
    }
    /**
     * Check if a user is authorized for a specific permission.
     * Is Authorized
     */
    isAuthorized(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.isAuthorizedRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * List grants.  Grants define which slugs are assigned specific permissions, overriding the default configuration.  Requires the `user-svc:grant:view` permission.
     * List Grants
     */
    listGrantsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling listGrants().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/grants`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcListGrantsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcListGrantsResponseFromJSON(jsonValue));
        });
    }
    /**
     * List grants.  Grants define which slugs are assigned specific permissions, overriding the default configuration.  Requires the `user-svc:grant:view` permission.
     * List Grants
     */
    listGrants(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listGrantsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Authenticates a user and returns a token.
     * Login
     */
    loginRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling login().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/user-svc/login`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcLoginRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcLoginResponseFromJSON(jsonValue));
        });
    }
    /**
     * Authenticates a user and returns a token.
     * Login
     */
    login(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.loginRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieve user information based on an authentication token.
     * Read User by Token
     */
    readUserByTokenRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/user/by-token`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcReadUserByTokenResponseFromJSON(jsonValue));
        });
    }
    /**
     * Retrieve user information based on an authentication token.
     * Read User by Token
     */
    readUserByToken(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.readUserByTokenRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Register a new user with a name, email, and password.
     * Register
     */
    registerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling register().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/user-svc/register`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcRegisterRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcRegisterResponseFromJSON(jsonValue));
        });
    }
    /**
     * Register a new user with a name, email, and password.
     * Register
     */
    register(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.registerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Allows an authorized user to add another user to a specific organization. The user will be assigned a specific role within the organization.
     * Remove a User from an Organization
     */
    removeUserFromOrganizationRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['organizationId'] == null) {
                throw new RequiredError('organizationId', 'Required parameter "organizationId" was null or undefined when calling removeUserFromOrganization().');
            }
            if (requestParameters['userId'] == null) {
                throw new RequiredError('userId', 'Required parameter "userId" was null or undefined when calling removeUserFromOrganization().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/organization/{organizationId}/user/{userId}`.replace(`{${"organizationId"}}`, encodeURIComponent(String(requestParameters['organizationId']))).replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters['userId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters['body'],
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Allows an authorized user to add another user to a specific organization. The user will be assigned a specific role within the organization.
     * Remove a User from an Organization
     */
    removeUserFromOrganization(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.removeUserFromOrganizationRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Allows an administrator to change a user\'s password.
     * Reset Password
     */
    resetPasswordRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['userId'] == null) {
                throw new RequiredError('userId', 'Required parameter "userId" was null or undefined when calling resetPassword().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling resetPassword().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/{userId}/reset-password`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters['userId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcResetPasswordRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Allows an administrator to change a user\'s password.
     * Reset Password
     */
    resetPassword(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.resetPasswordRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Save grants.  Grants define which slugs are assigned specific permissions, overriding the default configuration.  Requires the `user-svc:grant:create` permission.
     * Save Grants
     */
    saveGrantsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling saveGrants().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/grants`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcSaveGrantsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Save grants.  Grants define which slugs are assigned specific permissions, overriding the default configuration.  Requires the `user-svc:grant:create` permission.
     * Save Grants
     */
    saveGrants(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveGrantsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Creates or updates a list of permissions. <b>The permission ID must be prefixed by the callers slug.</b> Eg. if the owner\'s slug is `petstore-svc` the permission should look like `petstore-svc:pet:edit`.  Requires the `user-svc:permission:create` permission.
     * Save Permissions
     */
    savePermissionsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling savePermissions().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/permissions`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcSavePermissionsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => UserSvcSavePermissionsResponseFromJSON(jsonValue));
        });
    }
    /**
     * Creates or updates a list of permissions. <b>The permission ID must be prefixed by the callers slug.</b> Eg. if the owner\'s slug is `petstore-svc` the permission should look like `petstore-svc:pet:edit`.  Requires the `user-svc:permission:create` permission.
     * Save Permissions
     */
    savePermissions(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.savePermissionsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Save user\'s own profile information.
     * Save User Profile
     */
    saveSelfRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['userId'] == null) {
                throw new RequiredError('userId', 'Required parameter "userId" was null or undefined when calling saveSelf().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling saveSelf().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/self`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters['userId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcSaveProfileRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Save user\'s own profile information.
     * Save User Profile
     */
    saveSelf(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveSelfRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Save user information based on the provided user ID. It is intended for admins, because it uses the `user-svc:user:edit` permission which only admins have. For a user to edit its own profile, see saveSelf.
     * Save User
     */
    saveUserRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['userId'] == null) {
                throw new RequiredError('userId', 'Required parameter "userId" was null or undefined when calling saveUser().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling saveUser().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/user/{userId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters['userId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcSaveProfileRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Save user information based on the provided user ID. It is intended for admins, because it uses the `user-svc:user:edit` permission which only admins have. For a user to edit its own profile, see saveSelf.
     * Save User
     */
    saveUser(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.saveUserRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Set permissions for a specified role. The caller can add permissions it owns to any role. If the caller tries to add a permission it doesn\'t own to a role, `StatusBadRequest` will be returned.
     * Set Role Permissions
     */
    setRolePermissionRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['roleId'] == null) {
                throw new RequiredError('roleId', 'Required parameter "roleId" was null or undefined when calling setRolePermission().');
            }
            if (requestParameters['body'] == null) {
                throw new RequiredError('body', 'Required parameter "body" was null or undefined when calling setRolePermission().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/user-svc/role/{roleId}/permissions`.replace(`{${"roleId"}}`, encodeURIComponent(String(requestParameters['roleId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: UserSvcSetRolePermissionsRequestToJSON(requestParameters['body']),
            }, initOverrides);
            return new JSONApiResponse(response);
        });
    }
    /**
     * Set permissions for a specified role. The caller can add permissions it owns to any role. If the caller tries to add a permission it doesn\'t own to a role, `StatusBadRequest` will be returned.
     * Set Role Permissions
     */
    setRolePermission(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.setRolePermissionRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

export { BASE_PATH, BaseAPI, BlobApiResponse, COLLECTION_FORMATS, ChatSvcAddMessageRequestFromJSON, ChatSvcAddMessageRequestFromJSONTyped, ChatSvcAddMessageRequestToJSON, ChatSvcAddMessageRequestToJSONTyped, ChatSvcAddThreadRequestFromJSON, ChatSvcAddThreadRequestFromJSONTyped, ChatSvcAddThreadRequestToJSON, ChatSvcAddThreadRequestToJSONTyped, ChatSvcAddThreadResponseFromJSON, ChatSvcAddThreadResponseFromJSONTyped, ChatSvcAddThreadResponseToJSON, ChatSvcAddThreadResponseToJSONTyped, ChatSvcApi, ChatSvcEventMessageAddedFromJSON, ChatSvcEventMessageAddedFromJSONTyped, ChatSvcEventMessageAddedToJSON, ChatSvcEventMessageAddedToJSONTyped, ChatSvcEventThreadAddedFromJSON, ChatSvcEventThreadAddedFromJSONTyped, ChatSvcEventThreadAddedToJSON, ChatSvcEventThreadAddedToJSONTyped, ChatSvcEventThreadUpdateFromJSON, ChatSvcEventThreadUpdateFromJSONTyped, ChatSvcEventThreadUpdateToJSON, ChatSvcEventThreadUpdateToJSONTyped, ChatSvcGetMessageResponseFromJSON, ChatSvcGetMessageResponseFromJSONTyped, ChatSvcGetMessageResponseToJSON, ChatSvcGetMessageResponseToJSONTyped, ChatSvcGetMessagesResponseFromJSON, ChatSvcGetMessagesResponseFromJSONTyped, ChatSvcGetMessagesResponseToJSON, ChatSvcGetMessagesResponseToJSONTyped, ChatSvcGetThreadResponseFromJSON, ChatSvcGetThreadResponseFromJSONTyped, ChatSvcGetThreadResponseToJSON, ChatSvcGetThreadResponseToJSONTyped, ChatSvcGetThreadsResponseFromJSON, ChatSvcGetThreadsResponseFromJSONTyped, ChatSvcGetThreadsResponseToJSON, ChatSvcGetThreadsResponseToJSONTyped, ChatSvcMessageFromJSON, ChatSvcMessageFromJSONTyped, ChatSvcMessageToJSON, ChatSvcMessageToJSONTyped, ChatSvcThreadFromJSON, ChatSvcThreadFromJSONTyped, ChatSvcThreadToJSON, ChatSvcThreadToJSONTyped, ChatSvcUpdateThreadRequestFromJSON, ChatSvcUpdateThreadRequestFromJSONTyped, ChatSvcUpdateThreadRequestToJSON, ChatSvcUpdateThreadRequestToJSONTyped, ConfigSvcApi, ConfigSvcConfigFromJSON, ConfigSvcConfigFromJSONTyped, ConfigSvcConfigToJSON, ConfigSvcConfigToJSONTyped, ConfigSvcGetConfigResponseFromJSON, ConfigSvcGetConfigResponseFromJSONTyped, ConfigSvcGetConfigResponseToJSON, ConfigSvcGetConfigResponseToJSONTyped, ConfigSvcSaveConfigRequestFromJSON, ConfigSvcSaveConfigRequestFromJSONTyped, ConfigSvcSaveConfigRequestToJSON, ConfigSvcSaveConfigRequestToJSONTyped, Configuration, ContainerSvcApi, ContainerSvcAssetFromJSON, ContainerSvcAssetFromJSONTyped, ContainerSvcAssetToJSON, ContainerSvcAssetToJSONTyped, ContainerSvcBuildImageRequestFromJSON, ContainerSvcBuildImageRequestFromJSONTyped, ContainerSvcBuildImageRequestToJSON, ContainerSvcBuildImageRequestToJSONTyped, ContainerSvcCapabilitiesFromJSON, ContainerSvcCapabilitiesFromJSONTyped, ContainerSvcCapabilitiesToJSON, ContainerSvcCapabilitiesToJSONTyped, ContainerSvcContainerFromJSON, ContainerSvcContainerFromJSONTyped, ContainerSvcContainerIsRunningResponseFromJSON, ContainerSvcContainerIsRunningResponseFromJSONTyped, ContainerSvcContainerIsRunningResponseToJSON, ContainerSvcContainerIsRunningResponseToJSONTyped, ContainerSvcContainerToJSON, ContainerSvcContainerToJSONTyped, ContainerSvcDaemonInfoResponseFromJSON, ContainerSvcDaemonInfoResponseFromJSONTyped, ContainerSvcDaemonInfoResponseToJSON, ContainerSvcDaemonInfoResponseToJSONTyped, ContainerSvcEnvVarFromJSON, ContainerSvcEnvVarFromJSONTyped, ContainerSvcEnvVarToJSON, ContainerSvcEnvVarToJSONTyped, ContainerSvcErrorResponseFromJSON, ContainerSvcErrorResponseFromJSONTyped, ContainerSvcErrorResponseToJSON, ContainerSvcErrorResponseToJSONTyped, ContainerSvcGetContainerSummaryResponseFromJSON, ContainerSvcGetContainerSummaryResponseFromJSONTyped, ContainerSvcGetContainerSummaryResponseToJSON, ContainerSvcGetContainerSummaryResponseToJSONTyped, ContainerSvcGetHostResponseFromJSON, ContainerSvcGetHostResponseFromJSONTyped, ContainerSvcGetHostResponseToJSON, ContainerSvcGetHostResponseToJSONTyped, ContainerSvcImagePullableResponseFromJSON, ContainerSvcImagePullableResponseFromJSONTyped, ContainerSvcImagePullableResponseToJSON, ContainerSvcImagePullableResponseToJSONTyped, ContainerSvcKeepFromJSON, ContainerSvcKeepFromJSONTyped, ContainerSvcKeepToJSON, ContainerSvcKeepToJSONTyped, ContainerSvcLabelFromJSON, ContainerSvcLabelFromJSONTyped, ContainerSvcLabelToJSON, ContainerSvcLabelToJSONTyped, ContainerSvcListContainersRequestFromJSON, ContainerSvcListContainersRequestFromJSONTyped, ContainerSvcListContainersRequestToJSON, ContainerSvcListContainersRequestToJSONTyped, ContainerSvcListContainersResponseFromJSON, ContainerSvcListContainersResponseFromJSONTyped, ContainerSvcListContainersResponseToJSON, ContainerSvcListContainersResponseToJSONTyped, ContainerSvcListLogsRequestFromJSON, ContainerSvcListLogsRequestFromJSONTyped, ContainerSvcListLogsRequestToJSON, ContainerSvcListLogsRequestToJSONTyped, ContainerSvcListLogsResponseFromJSON, ContainerSvcListLogsResponseFromJSONTyped, ContainerSvcListLogsResponseToJSON, ContainerSvcListLogsResponseToJSONTyped, ContainerSvcLogFromJSON, ContainerSvcLogFromJSONTyped, ContainerSvcLogToJSON, ContainerSvcLogToJSONTyped, ContainerSvcNetworkFromJSON, ContainerSvcNetworkFromJSONTyped, ContainerSvcNetworkToJSON, ContainerSvcNetworkToJSONTyped, ContainerSvcPortMappingFromJSON, ContainerSvcPortMappingFromJSONTyped, ContainerSvcPortMappingToJSON, ContainerSvcPortMappingToJSONTyped, ContainerSvcResourcesFromJSON, ContainerSvcResourcesFromJSONTyped, ContainerSvcResourcesToJSON, ContainerSvcResourcesToJSONTyped, ContainerSvcRunContainerRequestFromJSON, ContainerSvcRunContainerRequestFromJSONTyped, ContainerSvcRunContainerRequestToJSON, ContainerSvcRunContainerRequestToJSONTyped, ContainerSvcRunContainerResponseFromJSON, ContainerSvcRunContainerResponseFromJSONTyped, ContainerSvcRunContainerResponseToJSON, ContainerSvcRunContainerResponseToJSONTyped, ContainerSvcStopContainerRequestFromJSON, ContainerSvcStopContainerRequestFromJSONTyped, ContainerSvcStopContainerRequestToJSON, ContainerSvcStopContainerRequestToJSONTyped, ContainerSvcVolumeFromJSON, ContainerSvcVolumeFromJSONTyped, ContainerSvcVolumeToJSON, ContainerSvcVolumeToJSONTyped, DataSvcApi, DataSvcCreateObjectFieldsFromJSON, DataSvcCreateObjectFieldsFromJSONTyped, DataSvcCreateObjectFieldsToJSON, DataSvcCreateObjectFieldsToJSONTyped, DataSvcCreateObjectRequestFromJSON, DataSvcCreateObjectRequestFromJSONTyped, DataSvcCreateObjectRequestToJSON, DataSvcCreateObjectRequestToJSONTyped, DataSvcCreateObjectResponseFromJSON, DataSvcCreateObjectResponseFromJSONTyped, DataSvcCreateObjectResponseToJSON, DataSvcCreateObjectResponseToJSONTyped, DataSvcDeleteObjectRequestFromJSON, DataSvcDeleteObjectRequestFromJSONTyped, DataSvcDeleteObjectRequestToJSON, DataSvcDeleteObjectRequestToJSONTyped, DataSvcErrorResponseFromJSON, DataSvcErrorResponseFromJSONTyped, DataSvcErrorResponseToJSON, DataSvcErrorResponseToJSONTyped, DataSvcObjectFromJSON, DataSvcObjectFromJSONTyped, DataSvcObjectToJSON, DataSvcObjectToJSONTyped, DataSvcQueryRequestFromJSON, DataSvcQueryRequestFromJSONTyped, DataSvcQueryRequestToJSON, DataSvcQueryRequestToJSONTyped, DataSvcQueryResponseFromJSON, DataSvcQueryResponseFromJSONTyped, DataSvcQueryResponseToJSON, DataSvcQueryResponseToJSONTyped, DataSvcUpdateObjectsRequestFromJSON, DataSvcUpdateObjectsRequestFromJSONTyped, DataSvcUpdateObjectsRequestToJSON, DataSvcUpdateObjectsRequestToJSONTyped, DataSvcUpsertObjectRequestFromJSON, DataSvcUpsertObjectRequestFromJSONTyped, DataSvcUpsertObjectRequestToJSON, DataSvcUpsertObjectRequestToJSONTyped, DataSvcUpsertObjectResponseFromJSON, DataSvcUpsertObjectResponseFromJSONTyped, DataSvcUpsertObjectResponseToJSON, DataSvcUpsertObjectResponseToJSONTyped, DatastoreFilterFromJSON, DatastoreFilterFromJSONTyped, DatastoreFilterToJSON, DatastoreFilterToJSONTyped, DatastoreOp, DatastoreOpFromJSON, DatastoreOpFromJSONTyped, DatastoreOpToJSON, DatastoreOpToJSONTyped, DatastoreOrderByFromJSON, DatastoreOrderByFromJSONTyped, DatastoreOrderByToJSON, DatastoreOrderByToJSONTyped, DatastoreQueryFromJSON, DatastoreQueryFromJSONTyped, DatastoreQueryToJSON, DatastoreQueryToJSONTyped, DatastoreSortingType, DatastoreSortingTypeFromJSON, DatastoreSortingTypeFromJSONTyped, DatastoreSortingTypeToJSON, DatastoreSortingTypeToJSONTyped, DefaultConfig, DeploySvcApi, DeploySvcAutoScalingConfigFromJSON, DeploySvcAutoScalingConfigFromJSONTyped, DeploySvcAutoScalingConfigToJSON, DeploySvcAutoScalingConfigToJSONTyped, DeploySvcDeleteDeploymentRequestFromJSON, DeploySvcDeleteDeploymentRequestFromJSONTyped, DeploySvcDeleteDeploymentRequestToJSON, DeploySvcDeleteDeploymentRequestToJSONTyped, DeploySvcDeploymentFromJSON, DeploySvcDeploymentFromJSONTyped, DeploySvcDeploymentStatus, DeploySvcDeploymentStatusFromJSON, DeploySvcDeploymentStatusFromJSONTyped, DeploySvcDeploymentStatusToJSON, DeploySvcDeploymentStatusToJSONTyped, DeploySvcDeploymentStrategyFromJSON, DeploySvcDeploymentStrategyFromJSONTyped, DeploySvcDeploymentStrategyToJSON, DeploySvcDeploymentStrategyToJSONTyped, DeploySvcDeploymentToJSON, DeploySvcDeploymentToJSONTyped, DeploySvcErrorResponseFromJSON, DeploySvcErrorResponseFromJSONTyped, DeploySvcErrorResponseToJSON, DeploySvcErrorResponseToJSONTyped, DeploySvcListDeploymentsResponseFromJSON, DeploySvcListDeploymentsResponseFromJSONTyped, DeploySvcListDeploymentsResponseToJSON, DeploySvcListDeploymentsResponseToJSONTyped, DeploySvcResourceLimitsFromJSON, DeploySvcResourceLimitsFromJSONTyped, DeploySvcResourceLimitsToJSON, DeploySvcResourceLimitsToJSONTyped, DeploySvcSaveDeploymentRequestFromJSON, DeploySvcSaveDeploymentRequestFromJSONTyped, DeploySvcSaveDeploymentRequestToJSON, DeploySvcSaveDeploymentRequestToJSONTyped, DeploySvcStrategyType, DeploySvcStrategyTypeFromJSON, DeploySvcStrategyTypeFromJSONTyped, DeploySvcStrategyTypeToJSON, DeploySvcStrategyTypeToJSONTyped, DeploySvcTargetRegionFromJSON, DeploySvcTargetRegionFromJSONTyped, DeploySvcTargetRegionToJSON, DeploySvcTargetRegionToJSONTyped, EmailSvcApi, EmailSvcErrorResponseFromJSON, EmailSvcErrorResponseFromJSONTyped, EmailSvcErrorResponseToJSON, EmailSvcErrorResponseToJSONTyped, EmailSvcFileFromJSON, EmailSvcFileFromJSONTyped, EmailSvcFileToJSON, EmailSvcFileToJSONTyped, EmailSvcSendEmailRequestFromJSON, EmailSvcSendEmailRequestFromJSONTyped, EmailSvcSendEmailRequestToJSON, EmailSvcSendEmailRequestToJSONTyped, EmailSvcSendEmailResponseFromJSON, EmailSvcSendEmailResponseFromJSONTyped, EmailSvcSendEmailResponseToJSON, EmailSvcSendEmailResponseToJSONTyped, FetchError, FileSvcApi, FileSvcDownloadFileRequestFromJSON, FileSvcDownloadFileRequestFromJSONTyped, FileSvcDownloadFileRequestToJSON, FileSvcDownloadFileRequestToJSONTyped, FileSvcDownloadFromJSON, FileSvcDownloadFromJSONTyped, FileSvcDownloadToJSON, FileSvcDownloadToJSONTyped, FileSvcDownloadsResponseFromJSON, FileSvcDownloadsResponseFromJSONTyped, FileSvcDownloadsResponseToJSON, FileSvcDownloadsResponseToJSONTyped, FileSvcErrorResponseFromJSON, FileSvcErrorResponseFromJSONTyped, FileSvcErrorResponseToJSON, FileSvcErrorResponseToJSONTyped, FileSvcGetDownloadResponseFromJSON, FileSvcGetDownloadResponseFromJSONTyped, FileSvcGetDownloadResponseToJSON, FileSvcGetDownloadResponseToJSONTyped, FileSvcListUploadsRequestFromJSON, FileSvcListUploadsRequestFromJSONTyped, FileSvcListUploadsRequestToJSON, FileSvcListUploadsRequestToJSONTyped, FileSvcListUploadsResponseFromJSON, FileSvcListUploadsResponseFromJSONTyped, FileSvcListUploadsResponseToJSON, FileSvcListUploadsResponseToJSONTyped, FileSvcUploadFileResponseFromJSON, FileSvcUploadFileResponseFromJSONTyped, FileSvcUploadFileResponseToJSON, FileSvcUploadFileResponseToJSONTyped, FileSvcUploadFromJSON, FileSvcUploadFromJSONTyped, FileSvcUploadToJSON, FileSvcUploadToJSONTyped, FirehoseSvcApi, FirehoseSvcErrorResponseFromJSON, FirehoseSvcErrorResponseFromJSONTyped, FirehoseSvcErrorResponseToJSON, FirehoseSvcErrorResponseToJSONTyped, FirehoseSvcEventFromJSON, FirehoseSvcEventFromJSONTyped, FirehoseSvcEventPublishRequestFromJSON, FirehoseSvcEventPublishRequestFromJSONTyped, FirehoseSvcEventPublishRequestToJSON, FirehoseSvcEventPublishRequestToJSONTyped, FirehoseSvcEventToJSON, FirehoseSvcEventToJSONTyped, JSONApiResponse, ModelSvcApi, ModelSvcArchitecturesFromJSON, ModelSvcArchitecturesFromJSONTyped, ModelSvcArchitecturesToJSON, ModelSvcArchitecturesToJSONTyped, ModelSvcAssetFromJSON, ModelSvcAssetFromJSONTyped, ModelSvcAssetToJSON, ModelSvcAssetToJSONTyped, ModelSvcContainerFromJSON, ModelSvcContainerFromJSONTyped, ModelSvcContainerToJSON, ModelSvcContainerToJSONTyped, ModelSvcCudaParametersFromJSON, ModelSvcCudaParametersFromJSONTyped, ModelSvcCudaParametersToJSON, ModelSvcCudaParametersToJSONTyped, ModelSvcDefaultParametersFromJSON, ModelSvcDefaultParametersFromJSONTyped, ModelSvcDefaultParametersToJSON, ModelSvcDefaultParametersToJSONTyped, ModelSvcEnvVarFromJSON, ModelSvcEnvVarFromJSONTyped, ModelSvcEnvVarToJSON, ModelSvcEnvVarToJSONTyped, ModelSvcErrorResponseFromJSON, ModelSvcErrorResponseFromJSONTyped, ModelSvcErrorResponseToJSON, ModelSvcErrorResponseToJSONTyped, ModelSvcGetModelResponseFromJSON, ModelSvcGetModelResponseFromJSONTyped, ModelSvcGetModelResponseToJSON, ModelSvcGetModelResponseToJSONTyped, ModelSvcKeepFromJSON, ModelSvcKeepFromJSONTyped, ModelSvcKeepToJSON, ModelSvcKeepToJSONTyped, ModelSvcListModelsResponseFromJSON, ModelSvcListModelsResponseFromJSONTyped, ModelSvcListModelsResponseToJSON, ModelSvcListModelsResponseToJSONTyped, ModelSvcListPlatformsResponseFromJSON, ModelSvcListPlatformsResponseFromJSONTyped, ModelSvcListPlatformsResponseToJSON, ModelSvcListPlatformsResponseToJSONTyped, ModelSvcModelFromJSON, ModelSvcModelFromJSONTyped, ModelSvcModelStatusFromJSON, ModelSvcModelStatusFromJSONTyped, ModelSvcModelStatusToJSON, ModelSvcModelStatusToJSONTyped, ModelSvcModelToJSON, ModelSvcModelToJSONTyped, ModelSvcPlatformFromJSON, ModelSvcPlatformFromJSONTyped, ModelSvcPlatformToJSON, ModelSvcPlatformToJSONTyped, ModelSvcStatusResponseFromJSON, ModelSvcStatusResponseFromJSONTyped, ModelSvcStatusResponseToJSON, ModelSvcStatusResponseToJSONTyped, PolicySvcApi, PolicySvcBlocklistParametersFromJSON, PolicySvcBlocklistParametersFromJSONTyped, PolicySvcBlocklistParametersToJSON, PolicySvcBlocklistParametersToJSONTyped, PolicySvcCheckRequestFromJSON, PolicySvcCheckRequestFromJSONTyped, PolicySvcCheckRequestToJSON, PolicySvcCheckRequestToJSONTyped, PolicySvcCheckResponseFromJSON, PolicySvcCheckResponseFromJSONTyped, PolicySvcCheckResponseToJSON, PolicySvcCheckResponseToJSONTyped, PolicySvcEntity, PolicySvcEntityFromJSON, PolicySvcEntityFromJSONTyped, PolicySvcEntityToJSON, PolicySvcEntityToJSONTyped, PolicySvcErrorResponseFromJSON, PolicySvcErrorResponseFromJSONTyped, PolicySvcErrorResponseToJSON, PolicySvcErrorResponseToJSONTyped, PolicySvcInstanceFromJSON, PolicySvcInstanceFromJSONTyped, PolicySvcInstanceToJSON, PolicySvcInstanceToJSONTyped, PolicySvcParametersFromJSON, PolicySvcParametersFromJSONTyped, PolicySvcParametersToJSON, PolicySvcParametersToJSONTyped, PolicySvcRateLimitParametersFromJSON, PolicySvcRateLimitParametersFromJSONTyped, PolicySvcRateLimitParametersToJSON, PolicySvcRateLimitParametersToJSONTyped, PolicySvcScope, PolicySvcScopeFromJSON, PolicySvcScopeFromJSONTyped, PolicySvcScopeToJSON, PolicySvcScopeToJSONTyped, PolicySvcTemplateId, PolicySvcTemplateIdFromJSON, PolicySvcTemplateIdFromJSONTyped, PolicySvcTemplateIdToJSON, PolicySvcTemplateIdToJSONTyped, PolicySvcUpsertInstanceRequestFromJSON, PolicySvcUpsertInstanceRequestFromJSONTyped, PolicySvcUpsertInstanceRequestToJSON, PolicySvcUpsertInstanceRequestToJSONTyped, PromptSvcApi, PromptSvcEngineParametersFromJSON, PromptSvcEngineParametersFromJSONTyped, PromptSvcEngineParametersToJSON, PromptSvcEngineParametersToJSONTyped, PromptSvcErrorResponseFromJSON, PromptSvcErrorResponseFromJSONTyped, PromptSvcErrorResponseToJSON, PromptSvcErrorResponseToJSONTyped, PromptSvcListPromptsRequestFromJSON, PromptSvcListPromptsRequestFromJSONTyped, PromptSvcListPromptsRequestToJSON, PromptSvcListPromptsRequestToJSONTyped, PromptSvcListPromptsResponseFromJSON, PromptSvcListPromptsResponseFromJSONTyped, PromptSvcListPromptsResponseToJSON, PromptSvcListPromptsResponseToJSONTyped, PromptSvcLlamaCppParametersFromJSON, PromptSvcLlamaCppParametersFromJSONTyped, PromptSvcLlamaCppParametersToJSON, PromptSvcLlamaCppParametersToJSONTyped, PromptSvcParametersFromJSON, PromptSvcParametersFromJSONTyped, PromptSvcParametersToJSON, PromptSvcParametersToJSONTyped, PromptSvcPromptFromJSON, PromptSvcPromptFromJSONTyped, PromptSvcPromptRequestFromJSON, PromptSvcPromptRequestFromJSONTyped, PromptSvcPromptRequestToJSON, PromptSvcPromptRequestToJSONTyped, PromptSvcPromptResponseFromJSON, PromptSvcPromptResponseFromJSONTyped, PromptSvcPromptResponseToJSON, PromptSvcPromptResponseToJSONTyped, PromptSvcPromptStatus, PromptSvcPromptStatusFromJSON, PromptSvcPromptStatusFromJSONTyped, PromptSvcPromptStatusToJSON, PromptSvcPromptStatusToJSONTyped, PromptSvcPromptToJSON, PromptSvcPromptToJSONTyped, PromptSvcPromptType, PromptSvcPromptTypeFromJSON, PromptSvcPromptTypeFromJSONTyped, PromptSvcPromptTypeToJSON, PromptSvcPromptTypeToJSONTyped, PromptSvcRemovePromptRequestFromJSON, PromptSvcRemovePromptRequestFromJSONTyped, PromptSvcRemovePromptRequestToJSON, PromptSvcRemovePromptRequestToJSONTyped, PromptSvcStableDiffusionParametersFromJSON, PromptSvcStableDiffusionParametersFromJSONTyped, PromptSvcStableDiffusionParametersToJSON, PromptSvcStableDiffusionParametersToJSONTyped, PromptSvcStreamChunkFromJSON, PromptSvcStreamChunkFromJSONTyped, PromptSvcStreamChunkToJSON, PromptSvcStreamChunkToJSONTyped, PromptSvcStreamChunkType, PromptSvcStreamChunkTypeFromJSON, PromptSvcStreamChunkTypeFromJSONTyped, PromptSvcStreamChunkTypeToJSON, PromptSvcStreamChunkTypeToJSONTyped, PromptSvcTextToImageParametersFromJSON, PromptSvcTextToImageParametersFromJSONTyped, PromptSvcTextToImageParametersToJSON, PromptSvcTextToImageParametersToJSONTyped, PromptSvcTextToTextParametersFromJSON, PromptSvcTextToTextParametersFromJSONTyped, PromptSvcTextToTextParametersToJSON, PromptSvcTextToTextParametersToJSONTyped, PromptSvcTypesResponseFromJSON, PromptSvcTypesResponseFromJSONTyped, PromptSvcTypesResponseToJSON, PromptSvcTypesResponseToJSONTyped, RegistrySvcAPISpecFromJSON, RegistrySvcAPISpecFromJSONTyped, RegistrySvcAPISpecToJSON, RegistrySvcAPISpecToJSONTyped, RegistrySvcApi, RegistrySvcClientFromJSON, RegistrySvcClientFromJSONTyped, RegistrySvcClientToJSON, RegistrySvcClientToJSONTyped, RegistrySvcDefinitionFromJSON, RegistrySvcDefinitionFromJSONTyped, RegistrySvcDefinitionToJSON, RegistrySvcDefinitionToJSONTyped, RegistrySvcEnvVarFromJSON, RegistrySvcEnvVarFromJSONTyped, RegistrySvcEnvVarToJSON, RegistrySvcEnvVarToJSONTyped, RegistrySvcErrorResponseFromJSON, RegistrySvcErrorResponseFromJSONTyped, RegistrySvcErrorResponseToJSON, RegistrySvcErrorResponseToJSONTyped, RegistrySvcGPUFromJSON, RegistrySvcGPUFromJSONTyped, RegistrySvcGPUToJSON, RegistrySvcGPUToJSONTyped, RegistrySvcImageSpecFromJSON, RegistrySvcImageSpecFromJSONTyped, RegistrySvcImageSpecToJSON, RegistrySvcImageSpecToJSONTyped, RegistrySvcInstanceFromJSON, RegistrySvcInstanceFromJSONTyped, RegistrySvcInstanceStatus, RegistrySvcInstanceStatusFromJSON, RegistrySvcInstanceStatusFromJSONTyped, RegistrySvcInstanceStatusToJSON, RegistrySvcInstanceStatusToJSONTyped, RegistrySvcInstanceToJSON, RegistrySvcInstanceToJSONTyped, RegistrySvcLanguage, RegistrySvcLanguageFromJSON, RegistrySvcLanguageFromJSONTyped, RegistrySvcLanguageToJSON, RegistrySvcLanguageToJSONTyped, RegistrySvcListDefinitionsResponseFromJSON, RegistrySvcListDefinitionsResponseFromJSONTyped, RegistrySvcListDefinitionsResponseToJSON, RegistrySvcListDefinitionsResponseToJSONTyped, RegistrySvcListInstancesResponseFromJSON, RegistrySvcListInstancesResponseFromJSONTyped, RegistrySvcListInstancesResponseToJSON, RegistrySvcListInstancesResponseToJSONTyped, RegistrySvcListNodesRequestFromJSON, RegistrySvcListNodesRequestFromJSONTyped, RegistrySvcListNodesRequestToJSON, RegistrySvcListNodesRequestToJSONTyped, RegistrySvcListNodesResponseFromJSON, RegistrySvcListNodesResponseFromJSONTyped, RegistrySvcListNodesResponseToJSON, RegistrySvcListNodesResponseToJSONTyped, RegistrySvcNodeFromJSON, RegistrySvcNodeFromJSONTyped, RegistrySvcNodeSelfResponseFromJSON, RegistrySvcNodeSelfResponseFromJSONTyped, RegistrySvcNodeSelfResponseToJSON, RegistrySvcNodeSelfResponseToJSONTyped, RegistrySvcNodeToJSON, RegistrySvcNodeToJSONTyped, RegistrySvcPortMappingFromJSON, RegistrySvcPortMappingFromJSONTyped, RegistrySvcPortMappingToJSON, RegistrySvcPortMappingToJSONTyped, RegistrySvcProcessFromJSON, RegistrySvcProcessFromJSONTyped, RegistrySvcProcessToJSON, RegistrySvcProcessToJSONTyped, RegistrySvcRegisterInstanceRequestFromJSON, RegistrySvcRegisterInstanceRequestFromJSONTyped, RegistrySvcRegisterInstanceRequestToJSON, RegistrySvcRegisterInstanceRequestToJSONTyped, RegistrySvcRepositorySpecFromJSON, RegistrySvcRepositorySpecFromJSONTyped, RegistrySvcRepositorySpecToJSON, RegistrySvcRepositorySpecToJSONTyped, RegistrySvcResourceUsageFromJSON, RegistrySvcResourceUsageFromJSONTyped, RegistrySvcResourceUsageToJSON, RegistrySvcResourceUsageToJSONTyped, RegistrySvcSaveDefinitionRequestFromJSON, RegistrySvcSaveDefinitionRequestFromJSONTyped, RegistrySvcSaveDefinitionRequestToJSON, RegistrySvcSaveDefinitionRequestToJSONTyped, RegistrySvcUsageFromJSON, RegistrySvcUsageFromJSONTyped, RegistrySvcUsageToJSON, RegistrySvcUsageToJSONTyped, RequiredError, ResponseError, SecretSvcApi, SecretSvcChecksumAlgorithm, SecretSvcChecksumAlgorithmFromJSON, SecretSvcChecksumAlgorithmFromJSONTyped, SecretSvcChecksumAlgorithmToJSON, SecretSvcChecksumAlgorithmToJSONTyped, SecretSvcDecryptValueRequestFromJSON, SecretSvcDecryptValueRequestFromJSONTyped, SecretSvcDecryptValueRequestToJSON, SecretSvcDecryptValueRequestToJSONTyped, SecretSvcDecryptValueResponseFromJSON, SecretSvcDecryptValueResponseFromJSONTyped, SecretSvcDecryptValueResponseToJSON, SecretSvcDecryptValueResponseToJSONTyped, SecretSvcEncryptValueRequestFromJSON, SecretSvcEncryptValueRequestFromJSONTyped, SecretSvcEncryptValueRequestToJSON, SecretSvcEncryptValueRequestToJSONTyped, SecretSvcEncryptValueResponseFromJSON, SecretSvcEncryptValueResponseFromJSONTyped, SecretSvcEncryptValueResponseToJSON, SecretSvcEncryptValueResponseToJSONTyped, SecretSvcIsSecureResponseFromJSON, SecretSvcIsSecureResponseFromJSONTyped, SecretSvcIsSecureResponseToJSON, SecretSvcIsSecureResponseToJSONTyped, SecretSvcListSecretsRequestFromJSON, SecretSvcListSecretsRequestFromJSONTyped, SecretSvcListSecretsRequestToJSON, SecretSvcListSecretsRequestToJSONTyped, SecretSvcListSecretsResponseFromJSON, SecretSvcListSecretsResponseFromJSONTyped, SecretSvcListSecretsResponseToJSON, SecretSvcListSecretsResponseToJSONTyped, SecretSvcRemoveSecretsRequestFromJSON, SecretSvcRemoveSecretsRequestFromJSONTyped, SecretSvcRemoveSecretsRequestToJSON, SecretSvcRemoveSecretsRequestToJSONTyped, SecretSvcSaveSecretsRequestFromJSON, SecretSvcSaveSecretsRequestFromJSONTyped, SecretSvcSaveSecretsRequestToJSON, SecretSvcSaveSecretsRequestToJSONTyped, SecretSvcSecretFromJSON, SecretSvcSecretFromJSONTyped, SecretSvcSecretToJSON, SecretSvcSecretToJSONTyped, SourceSvcApi, SourceSvcCheckoutRepoRequestFromJSON, SourceSvcCheckoutRepoRequestFromJSONTyped, SourceSvcCheckoutRepoRequestToJSON, SourceSvcCheckoutRepoRequestToJSONTyped, SourceSvcCheckoutRepoResponseFromJSON, SourceSvcCheckoutRepoResponseFromJSONTyped, SourceSvcCheckoutRepoResponseToJSON, SourceSvcCheckoutRepoResponseToJSONTyped, SourceSvcErrorResponseFromJSON, SourceSvcErrorResponseFromJSONTyped, SourceSvcErrorResponseToJSON, SourceSvcErrorResponseToJSONTyped, StableDiffusionTxt2ImgRequestFromJSON, StableDiffusionTxt2ImgRequestFromJSONTyped, StableDiffusionTxt2ImgRequestToJSON, StableDiffusionTxt2ImgRequestToJSONTyped, TextApiResponse, UserSvcAddUserToOrganizationRequestFromJSON, UserSvcAddUserToOrganizationRequestFromJSONTyped, UserSvcAddUserToOrganizationRequestToJSON, UserSvcAddUserToOrganizationRequestToJSONTyped, UserSvcApi, UserSvcAssignPermissionsRequestFromJSON, UserSvcAssignPermissionsRequestFromJSONTyped, UserSvcAssignPermissionsRequestToJSON, UserSvcAssignPermissionsRequestToJSONTyped, UserSvcAuthTokenFromJSON, UserSvcAuthTokenFromJSONTyped, UserSvcAuthTokenToJSON, UserSvcAuthTokenToJSONTyped, UserSvcChangePasswordRequestFromJSON, UserSvcChangePasswordRequestFromJSONTyped, UserSvcChangePasswordRequestToJSON, UserSvcChangePasswordRequestToJSONTyped, UserSvcContactFromJSON, UserSvcContactFromJSONTyped, UserSvcContactToJSON, UserSvcContactToJSONTyped, UserSvcCreateOrganizationRequestFromJSON, UserSvcCreateOrganizationRequestFromJSONTyped, UserSvcCreateOrganizationRequestToJSON, UserSvcCreateOrganizationRequestToJSONTyped, UserSvcCreateRoleRequestFromJSON, UserSvcCreateRoleRequestFromJSONTyped, UserSvcCreateRoleRequestToJSON, UserSvcCreateRoleRequestToJSONTyped, UserSvcCreateRoleResponseFromJSON, UserSvcCreateRoleResponseFromJSONTyped, UserSvcCreateRoleResponseToJSON, UserSvcCreateRoleResponseToJSONTyped, UserSvcCreateUserRequestFromJSON, UserSvcCreateUserRequestFromJSONTyped, UserSvcCreateUserRequestToJSON, UserSvcCreateUserRequestToJSONTyped, UserSvcErrorResponseFromJSON, UserSvcErrorResponseFromJSONTyped, UserSvcErrorResponseToJSON, UserSvcErrorResponseToJSONTyped, UserSvcGetPermissionsResponseFromJSON, UserSvcGetPermissionsResponseFromJSONTyped, UserSvcGetPermissionsResponseToJSON, UserSvcGetPermissionsResponseToJSONTyped, UserSvcGetPublicKeyResponseFromJSON, UserSvcGetPublicKeyResponseFromJSONTyped, UserSvcGetPublicKeyResponseToJSON, UserSvcGetPublicKeyResponseToJSONTyped, UserSvcGetRolesResponseFromJSON, UserSvcGetRolesResponseFromJSONTyped, UserSvcGetRolesResponseToJSON, UserSvcGetRolesResponseToJSONTyped, UserSvcGetUsersRequestFromJSON, UserSvcGetUsersRequestFromJSONTyped, UserSvcGetUsersRequestToJSON, UserSvcGetUsersRequestToJSONTyped, UserSvcGetUsersResponseFromJSON, UserSvcGetUsersResponseFromJSONTyped, UserSvcGetUsersResponseToJSON, UserSvcGetUsersResponseToJSONTyped, UserSvcGrantFromJSON, UserSvcGrantFromJSONTyped, UserSvcGrantToJSON, UserSvcGrantToJSONTyped, UserSvcIsAuthorizedRequestFromJSON, UserSvcIsAuthorizedRequestFromJSONTyped, UserSvcIsAuthorizedRequestToJSON, UserSvcIsAuthorizedRequestToJSONTyped, UserSvcIsAuthorizedResponseFromJSON, UserSvcIsAuthorizedResponseFromJSONTyped, UserSvcIsAuthorizedResponseToJSON, UserSvcIsAuthorizedResponseToJSONTyped, UserSvcListGrantsRequestFromJSON, UserSvcListGrantsRequestFromJSONTyped, UserSvcListGrantsRequestToJSON, UserSvcListGrantsRequestToJSONTyped, UserSvcListGrantsResponseFromJSON, UserSvcListGrantsResponseFromJSONTyped, UserSvcListGrantsResponseToJSON, UserSvcListGrantsResponseToJSONTyped, UserSvcLoginRequestFromJSON, UserSvcLoginRequestFromJSONTyped, UserSvcLoginRequestToJSON, UserSvcLoginRequestToJSONTyped, UserSvcLoginResponseFromJSON, UserSvcLoginResponseFromJSONTyped, UserSvcLoginResponseToJSON, UserSvcLoginResponseToJSONTyped, UserSvcOrganizationFromJSON, UserSvcOrganizationFromJSONTyped, UserSvcOrganizationToJSON, UserSvcOrganizationToJSONTyped, UserSvcPermissionFromJSON, UserSvcPermissionFromJSONTyped, UserSvcPermissionLinkFromJSON, UserSvcPermissionLinkFromJSONTyped, UserSvcPermissionLinkToJSON, UserSvcPermissionLinkToJSONTyped, UserSvcPermissionToJSON, UserSvcPermissionToJSONTyped, UserSvcReadUserByTokenResponseFromJSON, UserSvcReadUserByTokenResponseFromJSONTyped, UserSvcReadUserByTokenResponseToJSON, UserSvcReadUserByTokenResponseToJSONTyped, UserSvcRegisterRequestFromJSON, UserSvcRegisterRequestFromJSONTyped, UserSvcRegisterRequestToJSON, UserSvcRegisterRequestToJSONTyped, UserSvcRegisterResponseFromJSON, UserSvcRegisterResponseFromJSONTyped, UserSvcRegisterResponseToJSON, UserSvcRegisterResponseToJSONTyped, UserSvcResetPasswordRequestFromJSON, UserSvcResetPasswordRequestFromJSONTyped, UserSvcResetPasswordRequestToJSON, UserSvcResetPasswordRequestToJSONTyped, UserSvcRoleFromJSON, UserSvcRoleFromJSONTyped, UserSvcRoleToJSON, UserSvcRoleToJSONTyped, UserSvcSaveGrantsRequestFromJSON, UserSvcSaveGrantsRequestFromJSONTyped, UserSvcSaveGrantsRequestToJSON, UserSvcSaveGrantsRequestToJSONTyped, UserSvcSavePermissionsRequestFromJSON, UserSvcSavePermissionsRequestFromJSONTyped, UserSvcSavePermissionsRequestToJSON, UserSvcSavePermissionsRequestToJSONTyped, UserSvcSavePermissionsResponseFromJSON, UserSvcSavePermissionsResponseFromJSONTyped, UserSvcSavePermissionsResponseToJSON, UserSvcSavePermissionsResponseToJSONTyped, UserSvcSaveProfileRequestFromJSON, UserSvcSaveProfileRequestFromJSONTyped, UserSvcSaveProfileRequestToJSON, UserSvcSaveProfileRequestToJSONTyped, UserSvcSetRolePermissionsRequestFromJSON, UserSvcSetRolePermissionsRequestFromJSONTyped, UserSvcSetRolePermissionsRequestToJSON, UserSvcSetRolePermissionsRequestToJSONTyped, UserSvcUserFromJSON, UserSvcUserFromJSONTyped, UserSvcUserToJSON, UserSvcUserToJSONTyped, VoidApiResponse, canConsumeForm, exists, instanceOfChatSvcAddMessageRequest, instanceOfChatSvcAddThreadRequest, instanceOfChatSvcAddThreadResponse, instanceOfChatSvcEventMessageAdded, instanceOfChatSvcEventThreadAdded, instanceOfChatSvcEventThreadUpdate, instanceOfChatSvcGetMessageResponse, instanceOfChatSvcGetMessagesResponse, instanceOfChatSvcGetThreadResponse, instanceOfChatSvcGetThreadsResponse, instanceOfChatSvcMessage, instanceOfChatSvcThread, instanceOfChatSvcUpdateThreadRequest, instanceOfConfigSvcConfig, instanceOfConfigSvcGetConfigResponse, instanceOfConfigSvcSaveConfigRequest, instanceOfContainerSvcAsset, instanceOfContainerSvcBuildImageRequest, instanceOfContainerSvcCapabilities, instanceOfContainerSvcContainer, instanceOfContainerSvcContainerIsRunningResponse, instanceOfContainerSvcDaemonInfoResponse, instanceOfContainerSvcEnvVar, instanceOfContainerSvcErrorResponse, instanceOfContainerSvcGetContainerSummaryResponse, instanceOfContainerSvcGetHostResponse, instanceOfContainerSvcImagePullableResponse, instanceOfContainerSvcKeep, instanceOfContainerSvcLabel, instanceOfContainerSvcListContainersRequest, instanceOfContainerSvcListContainersResponse, instanceOfContainerSvcListLogsRequest, instanceOfContainerSvcListLogsResponse, instanceOfContainerSvcLog, instanceOfContainerSvcNetwork, instanceOfContainerSvcPortMapping, instanceOfContainerSvcResources, instanceOfContainerSvcRunContainerRequest, instanceOfContainerSvcRunContainerResponse, instanceOfContainerSvcStopContainerRequest, instanceOfContainerSvcVolume, instanceOfDataSvcCreateObjectFields, instanceOfDataSvcCreateObjectRequest, instanceOfDataSvcCreateObjectResponse, instanceOfDataSvcDeleteObjectRequest, instanceOfDataSvcErrorResponse, instanceOfDataSvcObject, instanceOfDataSvcQueryRequest, instanceOfDataSvcQueryResponse, instanceOfDataSvcUpdateObjectsRequest, instanceOfDataSvcUpsertObjectRequest, instanceOfDataSvcUpsertObjectResponse, instanceOfDatastoreFilter, instanceOfDatastoreOp, instanceOfDatastoreOrderBy, instanceOfDatastoreQuery, instanceOfDatastoreSortingType, instanceOfDeploySvcAutoScalingConfig, instanceOfDeploySvcDeleteDeploymentRequest, instanceOfDeploySvcDeployment, instanceOfDeploySvcDeploymentStatus, instanceOfDeploySvcDeploymentStrategy, instanceOfDeploySvcErrorResponse, instanceOfDeploySvcListDeploymentsResponse, instanceOfDeploySvcResourceLimits, instanceOfDeploySvcSaveDeploymentRequest, instanceOfDeploySvcStrategyType, instanceOfDeploySvcTargetRegion, instanceOfEmailSvcErrorResponse, instanceOfEmailSvcFile, instanceOfEmailSvcSendEmailRequest, instanceOfEmailSvcSendEmailResponse, instanceOfFileSvcDownload, instanceOfFileSvcDownloadFileRequest, instanceOfFileSvcDownloadsResponse, instanceOfFileSvcErrorResponse, instanceOfFileSvcGetDownloadResponse, instanceOfFileSvcListUploadsRequest, instanceOfFileSvcListUploadsResponse, instanceOfFileSvcUpload, instanceOfFileSvcUploadFileResponse, instanceOfFirehoseSvcErrorResponse, instanceOfFirehoseSvcEvent, instanceOfFirehoseSvcEventPublishRequest, instanceOfModelSvcArchitectures, instanceOfModelSvcAsset, instanceOfModelSvcContainer, instanceOfModelSvcCudaParameters, instanceOfModelSvcDefaultParameters, instanceOfModelSvcEnvVar, instanceOfModelSvcErrorResponse, instanceOfModelSvcGetModelResponse, instanceOfModelSvcKeep, instanceOfModelSvcListModelsResponse, instanceOfModelSvcListPlatformsResponse, instanceOfModelSvcModel, instanceOfModelSvcModelStatus, instanceOfModelSvcPlatform, instanceOfModelSvcStatusResponse, instanceOfPolicySvcBlocklistParameters, instanceOfPolicySvcCheckRequest, instanceOfPolicySvcCheckResponse, instanceOfPolicySvcEntity, instanceOfPolicySvcErrorResponse, instanceOfPolicySvcInstance, instanceOfPolicySvcParameters, instanceOfPolicySvcRateLimitParameters, instanceOfPolicySvcScope, instanceOfPolicySvcTemplateId, instanceOfPolicySvcUpsertInstanceRequest, instanceOfPromptSvcEngineParameters, instanceOfPromptSvcErrorResponse, instanceOfPromptSvcListPromptsRequest, instanceOfPromptSvcListPromptsResponse, instanceOfPromptSvcLlamaCppParameters, instanceOfPromptSvcParameters, instanceOfPromptSvcPrompt, instanceOfPromptSvcPromptRequest, instanceOfPromptSvcPromptResponse, instanceOfPromptSvcPromptStatus, instanceOfPromptSvcPromptType, instanceOfPromptSvcRemovePromptRequest, instanceOfPromptSvcStableDiffusionParameters, instanceOfPromptSvcStreamChunk, instanceOfPromptSvcStreamChunkType, instanceOfPromptSvcTextToImageParameters, instanceOfPromptSvcTextToTextParameters, instanceOfPromptSvcTypesResponse, instanceOfRegistrySvcAPISpec, instanceOfRegistrySvcClient, instanceOfRegistrySvcDefinition, instanceOfRegistrySvcEnvVar, instanceOfRegistrySvcErrorResponse, instanceOfRegistrySvcGPU, instanceOfRegistrySvcImageSpec, instanceOfRegistrySvcInstance, instanceOfRegistrySvcInstanceStatus, instanceOfRegistrySvcLanguage, instanceOfRegistrySvcListDefinitionsResponse, instanceOfRegistrySvcListInstancesResponse, instanceOfRegistrySvcListNodesRequest, instanceOfRegistrySvcListNodesResponse, instanceOfRegistrySvcNode, instanceOfRegistrySvcNodeSelfResponse, instanceOfRegistrySvcPortMapping, instanceOfRegistrySvcProcess, instanceOfRegistrySvcRegisterInstanceRequest, instanceOfRegistrySvcRepositorySpec, instanceOfRegistrySvcResourceUsage, instanceOfRegistrySvcSaveDefinitionRequest, instanceOfRegistrySvcUsage, instanceOfSecretSvcChecksumAlgorithm, instanceOfSecretSvcDecryptValueRequest, instanceOfSecretSvcDecryptValueResponse, instanceOfSecretSvcEncryptValueRequest, instanceOfSecretSvcEncryptValueResponse, instanceOfSecretSvcIsSecureResponse, instanceOfSecretSvcListSecretsRequest, instanceOfSecretSvcListSecretsResponse, instanceOfSecretSvcRemoveSecretsRequest, instanceOfSecretSvcSaveSecretsRequest, instanceOfSecretSvcSecret, instanceOfSourceSvcCheckoutRepoRequest, instanceOfSourceSvcCheckoutRepoResponse, instanceOfSourceSvcErrorResponse, instanceOfStableDiffusionTxt2ImgRequest, instanceOfUserSvcAddUserToOrganizationRequest, instanceOfUserSvcAssignPermissionsRequest, instanceOfUserSvcAuthToken, instanceOfUserSvcChangePasswordRequest, instanceOfUserSvcContact, instanceOfUserSvcCreateOrganizationRequest, instanceOfUserSvcCreateRoleRequest, instanceOfUserSvcCreateRoleResponse, instanceOfUserSvcCreateUserRequest, instanceOfUserSvcErrorResponse, instanceOfUserSvcGetPermissionsResponse, instanceOfUserSvcGetPublicKeyResponse, instanceOfUserSvcGetRolesResponse, instanceOfUserSvcGetUsersRequest, instanceOfUserSvcGetUsersResponse, instanceOfUserSvcGrant, instanceOfUserSvcIsAuthorizedRequest, instanceOfUserSvcIsAuthorizedResponse, instanceOfUserSvcListGrantsRequest, instanceOfUserSvcListGrantsResponse, instanceOfUserSvcLoginRequest, instanceOfUserSvcLoginResponse, instanceOfUserSvcOrganization, instanceOfUserSvcPermission, instanceOfUserSvcPermissionLink, instanceOfUserSvcReadUserByTokenResponse, instanceOfUserSvcRegisterRequest, instanceOfUserSvcRegisterResponse, instanceOfUserSvcResetPasswordRequest, instanceOfUserSvcRole, instanceOfUserSvcSaveGrantsRequest, instanceOfUserSvcSavePermissionsRequest, instanceOfUserSvcSavePermissionsResponse, instanceOfUserSvcSaveProfileRequest, instanceOfUserSvcSetRolePermissionsRequest, instanceOfUserSvcUser, mapValues, querystring };

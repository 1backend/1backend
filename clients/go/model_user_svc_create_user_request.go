/*
1Backend

AI-native microservices platform.

API version: 0.7.6
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSvcCreateUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcCreateUserRequest{}

// UserSvcCreateUserRequest struct for UserSvcCreateUserRequest
type UserSvcCreateUserRequest struct {
	App *string `json:"app,omitempty"`
	Contacts []UserSvcContact `json:"contacts,omitempty"`
	Password *string `json:"password,omitempty"`
	RoleIds []string `json:"roleIds,omitempty"`
	User *UserSvcUserInput `json:"user,omitempty"`
}

// NewUserSvcCreateUserRequest instantiates a new UserSvcCreateUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcCreateUserRequest() *UserSvcCreateUserRequest {
	this := UserSvcCreateUserRequest{}
	return &this
}

// NewUserSvcCreateUserRequestWithDefaults instantiates a new UserSvcCreateUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcCreateUserRequestWithDefaults() *UserSvcCreateUserRequest {
	this := UserSvcCreateUserRequest{}
	return &this
}



// HasApp returns a boolean if a field has been set.
func (o *UserSvcCreateUserRequest) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}




// HasContacts returns a boolean if a field has been set.
func (o *UserSvcCreateUserRequest) HasContacts() bool {
	if o != nil && !IsNil(o.Contacts) {
		return true
	}

	return false
}




// HasPassword returns a boolean if a field has been set.
func (o *UserSvcCreateUserRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}




// HasRoleIds returns a boolean if a field has been set.
func (o *UserSvcCreateUserRequest) HasRoleIds() bool {
	if o != nil && !IsNil(o.RoleIds) {
		return true
	}

	return false
}




// HasUser returns a boolean if a field has been set.
func (o *UserSvcCreateUserRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}


func (o UserSvcCreateUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcCreateUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.RoleIds) {
		toSerialize["roleIds"] = o.RoleIds
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableUserSvcCreateUserRequest struct {
	value *UserSvcCreateUserRequest
	isSet bool
}

func (v NullableUserSvcCreateUserRequest) Get() *UserSvcCreateUserRequest {
	return v.value
}

func (v *NullableUserSvcCreateUserRequest) Set(val *UserSvcCreateUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcCreateUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcCreateUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcCreateUserRequest(val *UserSvcCreateUserRequest) *NullableUserSvcCreateUserRequest {
	return &NullableUserSvcCreateUserRequest{value: val, isSet: true}
}

func (v NullableUserSvcCreateUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcCreateUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



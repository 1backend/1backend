/*
1Backend

AI-native microservices platform.

API version: 0.8.0-rc1
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChatSvcSaveThreadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatSvcSaveThreadRequest{}

// ChatSvcSaveThreadRequest struct for ChatSvcSaveThreadRequest
type ChatSvcSaveThreadRequest struct {
	Id *string `json:"id,omitempty"`
	// Title of the thread.
	Title *string `json:"title,omitempty"`
	// TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads.
	TopicIds []string `json:"topicIds,omitempty"`
	// UserIds the ids of the users who can see this thread.
	UserIds []string `json:"userIds,omitempty"`
}

// NewChatSvcSaveThreadRequest instantiates a new ChatSvcSaveThreadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatSvcSaveThreadRequest() *ChatSvcSaveThreadRequest {
	this := ChatSvcSaveThreadRequest{}
	return &this
}

// NewChatSvcSaveThreadRequestWithDefaults instantiates a new ChatSvcSaveThreadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatSvcSaveThreadRequestWithDefaults() *ChatSvcSaveThreadRequest {
	this := ChatSvcSaveThreadRequest{}
	return &this
}



// HasId returns a boolean if a field has been set.
func (o *ChatSvcSaveThreadRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}




// HasTitle returns a boolean if a field has been set.
func (o *ChatSvcSaveThreadRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}




// HasTopicIds returns a boolean if a field has been set.
func (o *ChatSvcSaveThreadRequest) HasTopicIds() bool {
	if o != nil && !IsNil(o.TopicIds) {
		return true
	}

	return false
}




// HasUserIds returns a boolean if a field has been set.
func (o *ChatSvcSaveThreadRequest) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}


func (o ChatSvcSaveThreadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatSvcSaveThreadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.TopicIds) {
		toSerialize["topicIds"] = o.TopicIds
	}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableChatSvcSaveThreadRequest struct {
	value *ChatSvcSaveThreadRequest
	isSet bool
}

func (v NullableChatSvcSaveThreadRequest) Get() *ChatSvcSaveThreadRequest {
	return v.value
}

func (v *NullableChatSvcSaveThreadRequest) Set(val *ChatSvcSaveThreadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChatSvcSaveThreadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChatSvcSaveThreadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatSvcSaveThreadRequest(val *ChatSvcSaveThreadRequest) *NullableChatSvcSaveThreadRequest {
	return &NullableChatSvcSaveThreadRequest{value: val, isSet: true}
}

func (v NullableChatSvcSaveThreadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatSvcSaveThreadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
1Backend

AI-native microservices platform.

API version: 0.9.4
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserSvcSendOtpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcSendOtpRequest{}

// UserSvcSendOtpRequest struct for UserSvcSendOtpRequest
type UserSvcSendOtpRequest struct {
	AppHost string `json:"appHost"`
	ContactHandle *string `json:"contactHandle,omitempty"`
	ContactId string `json:"contactId"`
	ContactPlatform string `json:"contactPlatform"`
}

type _UserSvcSendOtpRequest UserSvcSendOtpRequest

// NewUserSvcSendOtpRequest instantiates a new UserSvcSendOtpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcSendOtpRequest(appHost string, contactId string, contactPlatform string) *UserSvcSendOtpRequest {
	this := UserSvcSendOtpRequest{}
	this.AppHost = appHost
	this.ContactId = contactId
	this.ContactPlatform = contactPlatform
	return &this
}

// NewUserSvcSendOtpRequestWithDefaults instantiates a new UserSvcSendOtpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcSendOtpRequestWithDefaults() *UserSvcSendOtpRequest {
	this := UserSvcSendOtpRequest{}
	return &this
}

// GetAppHost returns the AppHost field value
func (o *UserSvcSendOtpRequest) GetAppHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppHost
}

// GetAppHostOk returns a tuple with the AppHost field value
// and a boolean to check if the value has been set.
func (o *UserSvcSendOtpRequest) GetAppHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppHost, true
}

// SetAppHost sets field value
func (o *UserSvcSendOtpRequest) SetAppHost(v string) {
	o.AppHost = v
}

// GetContactHandle returns the ContactHandle field value if set, zero value otherwise.
func (o *UserSvcSendOtpRequest) GetContactHandle() string {
	if o == nil || IsNil(o.ContactHandle) {
		var ret string
		return ret
	}
	return *o.ContactHandle
}

// GetContactHandleOk returns a tuple with the ContactHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcSendOtpRequest) GetContactHandleOk() (*string, bool) {
	if o == nil || IsNil(o.ContactHandle) {
		return nil, false
	}
	return o.ContactHandle, true
}

// HasContactHandle returns a boolean if a field has been set.
func (o *UserSvcSendOtpRequest) HasContactHandle() bool {
	if o != nil && !IsNil(o.ContactHandle) {
		return true
	}

	return false
}

// SetContactHandle gets a reference to the given string and assigns it to the ContactHandle field.
func (o *UserSvcSendOtpRequest) SetContactHandle(v string) {
	o.ContactHandle = &v
}

// GetContactId returns the ContactId field value
func (o *UserSvcSendOtpRequest) GetContactId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value
// and a boolean to check if the value has been set.
func (o *UserSvcSendOtpRequest) GetContactIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContactId, true
}

// SetContactId sets field value
func (o *UserSvcSendOtpRequest) SetContactId(v string) {
	o.ContactId = v
}

// GetContactPlatform returns the ContactPlatform field value
func (o *UserSvcSendOtpRequest) GetContactPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContactPlatform
}

// GetContactPlatformOk returns a tuple with the ContactPlatform field value
// and a boolean to check if the value has been set.
func (o *UserSvcSendOtpRequest) GetContactPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContactPlatform, true
}

// SetContactPlatform sets field value
func (o *UserSvcSendOtpRequest) SetContactPlatform(v string) {
	o.ContactPlatform = v
}

func (o UserSvcSendOtpRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcSendOtpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appHost"] = o.AppHost
	if !IsNil(o.ContactHandle) {
		toSerialize["contactHandle"] = o.ContactHandle
	}
	toSerialize["contactId"] = o.ContactId
	toSerialize["contactPlatform"] = o.ContactPlatform
	return toSerialize, nil
}

func (o *UserSvcSendOtpRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"appHost",
		"contactId",
		"contactPlatform",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserSvcSendOtpRequest := _UserSvcSendOtpRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserSvcSendOtpRequest)

	if err != nil {
		return err
	}

	*o = UserSvcSendOtpRequest(varUserSvcSendOtpRequest)

	return err
}

type NullableUserSvcSendOtpRequest struct {
	value *UserSvcSendOtpRequest
	isSet bool
}

func (v NullableUserSvcSendOtpRequest) Get() *UserSvcSendOtpRequest {
	return v.value
}

func (v *NullableUserSvcSendOtpRequest) Set(val *UserSvcSendOtpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcSendOtpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcSendOtpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcSendOtpRequest(val *UserSvcSendOtpRequest) *NullableUserSvcSendOtpRequest {
	return &NullableUserSvcSendOtpRequest{value: val, isSet: true}
}

func (v NullableUserSvcSendOtpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcSendOtpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



// Code generated by MockGen. DO NOT EDIT.
//
// Generated by this command:
//
//

// Package openapi is a generated GoMock package.
package openapi

import (
	context "context"
	http "net/http"
	os "os"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockImageSvcAPI is a mock of ImageSvcAPI interface.
type MockImageSvcAPI struct {
	ctrl     *gomock.Controller
	recorder *MockImageSvcAPIMockRecorder
	isgomock struct{}
}

// MockImageSvcAPIMockRecorder is the mock recorder for MockImageSvcAPI.
type MockImageSvcAPIMockRecorder struct {
	mock *MockImageSvcAPI
}

// NewMockImageSvcAPI creates a new mock instance.
func NewMockImageSvcAPI(ctrl *gomock.Controller) *MockImageSvcAPI {
	mock := &MockImageSvcAPI{ctrl: ctrl}
	mock.recorder = &MockImageSvcAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageSvcAPI) EXPECT() *MockImageSvcAPIMockRecorder {
	return m.recorder
}

// ServeUploadedImage mocks base method.
func (m *MockImageSvcAPI) ServeUploadedImage(ctx context.Context, fileId string) ApiServeUploadedImageRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServeUploadedImage", ctx, fileId)
	ret0, _ := ret[0].(ApiServeUploadedImageRequest)
	return ret0
}

// ServeUploadedImage indicates an expected call of ServeUploadedImage.
func (mr *MockImageSvcAPIMockRecorder) ServeUploadedImage(ctx, fileId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServeUploadedImage", reflect.TypeOf((*MockImageSvcAPI)(nil).ServeUploadedImage), ctx, fileId)
}

// ServeUploadedImageExecute mocks base method.
func (m *MockImageSvcAPI) ServeUploadedImageExecute(r ApiServeUploadedImageRequest) (**os.File, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServeUploadedImageExecute", r)
	ret0, _ := ret[0].(**os.File)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ServeUploadedImageExecute indicates an expected call of ServeUploadedImageExecute.
func (mr *MockImageSvcAPIMockRecorder) ServeUploadedImageExecute(r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServeUploadedImageExecute", reflect.TypeOf((*MockImageSvcAPI)(nil).ServeUploadedImageExecute), r)
}

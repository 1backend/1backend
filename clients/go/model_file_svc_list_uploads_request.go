/*
1Backend

AI-native microservices platform.

API version: 0.7.6
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FileSvcListUploadsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileSvcListUploadsRequest{}

// FileSvcListUploadsRequest struct for FileSvcListUploadsRequest
type FileSvcListUploadsRequest struct {
	// After time value
	After *string `json:"after,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewFileSvcListUploadsRequest instantiates a new FileSvcListUploadsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileSvcListUploadsRequest() *FileSvcListUploadsRequest {
	this := FileSvcListUploadsRequest{}
	return &this
}

// NewFileSvcListUploadsRequestWithDefaults instantiates a new FileSvcListUploadsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileSvcListUploadsRequestWithDefaults() *FileSvcListUploadsRequest {
	this := FileSvcListUploadsRequest{}
	return &this
}



// HasAfter returns a boolean if a field has been set.
func (o *FileSvcListUploadsRequest) HasAfter() bool {
	if o != nil && !IsNil(o.After) {
		return true
	}

	return false
}




// HasLimit returns a boolean if a field has been set.
func (o *FileSvcListUploadsRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}




// HasUserId returns a boolean if a field has been set.
func (o *FileSvcListUploadsRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}


func (o FileSvcListUploadsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileSvcListUploadsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.After) {
		toSerialize["after"] = o.After
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableFileSvcListUploadsRequest struct {
	value *FileSvcListUploadsRequest
	isSet bool
}

func (v NullableFileSvcListUploadsRequest) Get() *FileSvcListUploadsRequest {
	return v.value
}

func (v *NullableFileSvcListUploadsRequest) Set(val *FileSvcListUploadsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileSvcListUploadsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileSvcListUploadsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileSvcListUploadsRequest(val *FileSvcListUploadsRequest) *NullableFileSvcListUploadsRequest {
	return &NullableFileSvcListUploadsRequest{value: val, isSet: true}
}

func (v NullableFileSvcListUploadsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileSvcListUploadsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



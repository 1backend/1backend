/*
1Backend

AI-native microservices platform.

API version: 0.7.6
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SourceSvcCheckoutRepoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceSvcCheckoutRepoRequest{}

// SourceSvcCheckoutRepoRequest struct for SourceSvcCheckoutRepoRequest
type SourceSvcCheckoutRepoRequest struct {
	// Password or token for HTTPS auth
	Password *string `json:"password,omitempty"`
	// SSH private key (optional for SSH connection)
	SshKey *string `json:"ssh_key,omitempty"`
	// Password for SSH private key if encrypted (optional)
	SshKeyPwd *string `json:"ssh_key_pwd,omitempty"`
	// Token for HTTPS auth (optional for SSH)
	Token *string `json:"token,omitempty"`
	// Full repository URL (e.g., https://github.com/user/repo)
	Url *string `json:"url,omitempty"`
	// Username for HTTPS or SSH user (optional for SSH)
	Username *string `json:"username,omitempty"`
	// Branch, tag, or commit SHA
	Version *string `json:"version,omitempty"`
}

// NewSourceSvcCheckoutRepoRequest instantiates a new SourceSvcCheckoutRepoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceSvcCheckoutRepoRequest() *SourceSvcCheckoutRepoRequest {
	this := SourceSvcCheckoutRepoRequest{}
	return &this
}

// NewSourceSvcCheckoutRepoRequestWithDefaults instantiates a new SourceSvcCheckoutRepoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceSvcCheckoutRepoRequestWithDefaults() *SourceSvcCheckoutRepoRequest {
	this := SourceSvcCheckoutRepoRequest{}
	return &this
}



// HasPassword returns a boolean if a field has been set.
func (o *SourceSvcCheckoutRepoRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}




// HasSshKey returns a boolean if a field has been set.
func (o *SourceSvcCheckoutRepoRequest) HasSshKey() bool {
	if o != nil && !IsNil(o.SshKey) {
		return true
	}

	return false
}




// HasSshKeyPwd returns a boolean if a field has been set.
func (o *SourceSvcCheckoutRepoRequest) HasSshKeyPwd() bool {
	if o != nil && !IsNil(o.SshKeyPwd) {
		return true
	}

	return false
}




// HasToken returns a boolean if a field has been set.
func (o *SourceSvcCheckoutRepoRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}




// HasUrl returns a boolean if a field has been set.
func (o *SourceSvcCheckoutRepoRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}




// HasUsername returns a boolean if a field has been set.
func (o *SourceSvcCheckoutRepoRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}




// HasVersion returns a boolean if a field has been set.
func (o *SourceSvcCheckoutRepoRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}


func (o SourceSvcCheckoutRepoRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceSvcCheckoutRepoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.SshKey) {
		toSerialize["ssh_key"] = o.SshKey
	}
	if !IsNil(o.SshKeyPwd) {
		toSerialize["ssh_key_pwd"] = o.SshKeyPwd
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableSourceSvcCheckoutRepoRequest struct {
	value *SourceSvcCheckoutRepoRequest
	isSet bool
}

func (v NullableSourceSvcCheckoutRepoRequest) Get() *SourceSvcCheckoutRepoRequest {
	return v.value
}

func (v *NullableSourceSvcCheckoutRepoRequest) Set(val *SourceSvcCheckoutRepoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceSvcCheckoutRepoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceSvcCheckoutRepoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceSvcCheckoutRepoRequest(val *SourceSvcCheckoutRepoRequest) *NullableSourceSvcCheckoutRepoRequest {
	return &NullableSourceSvcCheckoutRepoRequest{value: val, isSet: true}
}

func (v NullableSourceSvcCheckoutRepoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceSvcCheckoutRepoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



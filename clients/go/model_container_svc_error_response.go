/*
1Backend

AI-native microservices platform.

API version: 0.8.0-rc1
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ContainerSvcErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerSvcErrorResponse{}

// ContainerSvcErrorResponse struct for ContainerSvcErrorResponse
type ContainerSvcErrorResponse struct {
	Error *string `json:"error,omitempty"`
}

// NewContainerSvcErrorResponse instantiates a new ContainerSvcErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerSvcErrorResponse() *ContainerSvcErrorResponse {
	this := ContainerSvcErrorResponse{}
	return &this
}

// NewContainerSvcErrorResponseWithDefaults instantiates a new ContainerSvcErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerSvcErrorResponseWithDefaults() *ContainerSvcErrorResponse {
	this := ContainerSvcErrorResponse{}
	return &this
}



// HasError returns a boolean if a field has been set.
func (o *ContainerSvcErrorResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}


func (o ContainerSvcErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerSvcErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableContainerSvcErrorResponse struct {
	value *ContainerSvcErrorResponse
	isSet bool
}

func (v NullableContainerSvcErrorResponse) Get() *ContainerSvcErrorResponse {
	return v.value
}

func (v *NullableContainerSvcErrorResponse) Set(val *ContainerSvcErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerSvcErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerSvcErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerSvcErrorResponse(val *ContainerSvcErrorResponse) *NullableContainerSvcErrorResponse {
	return &NullableContainerSvcErrorResponse{value: val, isSet: true}
}

func (v NullableContainerSvcErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerSvcErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



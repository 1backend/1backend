/*
1Backend

AI-native microservices platform.

API version: 0.8.0-rc1
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PromptSvcTextToImageParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromptSvcTextToImageParameters{}

// PromptSvcTextToImageParameters struct for PromptSvcTextToImageParameters
type PromptSvcTextToImageParameters struct {
	// Alternative way to specify dimensions (e.g., \"16:9\", \"1:1\").
	AspectRatio *string `json:"aspectRatio,omitempty"`
	// Number of images to generate per batch.
	BatchSize *int32 `json:"batchSize,omitempty"`
	// Controls how much variation is introduced in image modifications.
	DenoisingStrength *float32 `json:"denoisingStrength,omitempty"`
	// Whether to apply AI-based upscaling.
	EnableUpscaling *bool `json:"enableUpscaling,omitempty"`
	// Output format for the generated image (png, jpg, webp, etc.).
	Format *string `json:"format,omitempty"`
	// How closely the output should follow the prompt.
	GuidanceScale *float32 `json:"guidanceScale,omitempty"`
	Height *int32 `json:"height,omitempty"`
	// A negative prompt to specify what should be avoided in the image.
	NegativePrompt *string `json:"negativePrompt,omitempty"`
	// Number of batches to generate.
	NumIterations *int32 `json:"numIterations,omitempty"`
	// The primary prompt for generating the image. Defaults to the top-level prompt if not specified. If both are provided (which should be avoided), this field takes precedence.
	Prompt *string `json:"prompt,omitempty"`
	// Preset quality settings (e.g., Low, Medium, High, Ultra).
	QualityPreset *string `json:"qualityPreset,omitempty"`
	// Whether to enhance facial details for portraits.
	RestoreFaces *bool `json:"restoreFaces,omitempty"`
	// Specifies the sampling method used during generation.
	Scheduler *string `json:"scheduler,omitempty"`
	// Optional seed for reproducibility. If not set, a random seed is used.
	Seed *int32 `json:"seed,omitempty"`
	// Number of inference steps for image generation.
	Steps *int32 `json:"steps,omitempty"`
	// List of artistic styles or themes to apply.
	Styles []string `json:"styles,omitempty"`
	// Image dimensions (width and height in pixels).
	Width *int32 `json:"width,omitempty"`
}

// NewPromptSvcTextToImageParameters instantiates a new PromptSvcTextToImageParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromptSvcTextToImageParameters() *PromptSvcTextToImageParameters {
	this := PromptSvcTextToImageParameters{}
	return &this
}

// NewPromptSvcTextToImageParametersWithDefaults instantiates a new PromptSvcTextToImageParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromptSvcTextToImageParametersWithDefaults() *PromptSvcTextToImageParameters {
	this := PromptSvcTextToImageParameters{}
	return &this
}



// HasAspectRatio returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasAspectRatio() bool {
	if o != nil && !IsNil(o.AspectRatio) {
		return true
	}

	return false
}




// HasBatchSize returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasBatchSize() bool {
	if o != nil && !IsNil(o.BatchSize) {
		return true
	}

	return false
}




// HasDenoisingStrength returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasDenoisingStrength() bool {
	if o != nil && !IsNil(o.DenoisingStrength) {
		return true
	}

	return false
}




// HasEnableUpscaling returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasEnableUpscaling() bool {
	if o != nil && !IsNil(o.EnableUpscaling) {
		return true
	}

	return false
}




// HasFormat returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}




// HasGuidanceScale returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasGuidanceScale() bool {
	if o != nil && !IsNil(o.GuidanceScale) {
		return true
	}

	return false
}




// HasHeight returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}




// HasNegativePrompt returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasNegativePrompt() bool {
	if o != nil && !IsNil(o.NegativePrompt) {
		return true
	}

	return false
}




// HasNumIterations returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasNumIterations() bool {
	if o != nil && !IsNil(o.NumIterations) {
		return true
	}

	return false
}




// HasPrompt returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasPrompt() bool {
	if o != nil && !IsNil(o.Prompt) {
		return true
	}

	return false
}




// HasQualityPreset returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasQualityPreset() bool {
	if o != nil && !IsNil(o.QualityPreset) {
		return true
	}

	return false
}




// HasRestoreFaces returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasRestoreFaces() bool {
	if o != nil && !IsNil(o.RestoreFaces) {
		return true
	}

	return false
}




// HasScheduler returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasScheduler() bool {
	if o != nil && !IsNil(o.Scheduler) {
		return true
	}

	return false
}




// HasSeed returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasSeed() bool {
	if o != nil && !IsNil(o.Seed) {
		return true
	}

	return false
}




// HasSteps returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}




// HasStyles returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasStyles() bool {
	if o != nil && !IsNil(o.Styles) {
		return true
	}

	return false
}




// HasWidth returns a boolean if a field has been set.
func (o *PromptSvcTextToImageParameters) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}


func (o PromptSvcTextToImageParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromptSvcTextToImageParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AspectRatio) {
		toSerialize["aspectRatio"] = o.AspectRatio
	}
	if !IsNil(o.BatchSize) {
		toSerialize["batchSize"] = o.BatchSize
	}
	if !IsNil(o.DenoisingStrength) {
		toSerialize["denoisingStrength"] = o.DenoisingStrength
	}
	if !IsNil(o.EnableUpscaling) {
		toSerialize["enableUpscaling"] = o.EnableUpscaling
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.GuidanceScale) {
		toSerialize["guidanceScale"] = o.GuidanceScale
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.NegativePrompt) {
		toSerialize["negativePrompt"] = o.NegativePrompt
	}
	if !IsNil(o.NumIterations) {
		toSerialize["numIterations"] = o.NumIterations
	}
	if !IsNil(o.Prompt) {
		toSerialize["prompt"] = o.Prompt
	}
	if !IsNil(o.QualityPreset) {
		toSerialize["qualityPreset"] = o.QualityPreset
	}
	if !IsNil(o.RestoreFaces) {
		toSerialize["restoreFaces"] = o.RestoreFaces
	}
	if !IsNil(o.Scheduler) {
		toSerialize["scheduler"] = o.Scheduler
	}
	if !IsNil(o.Seed) {
		toSerialize["seed"] = o.Seed
	}
	if !IsNil(o.Steps) {
		toSerialize["steps"] = o.Steps
	}
	if !IsNil(o.Styles) {
		toSerialize["styles"] = o.Styles
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	return toSerialize, nil
}

type NullablePromptSvcTextToImageParameters struct {
	value *PromptSvcTextToImageParameters
	isSet bool
}

func (v NullablePromptSvcTextToImageParameters) Get() *PromptSvcTextToImageParameters {
	return v.value
}

func (v *NullablePromptSvcTextToImageParameters) Set(val *PromptSvcTextToImageParameters) {
	v.value = val
	v.isSet = true
}

func (v NullablePromptSvcTextToImageParameters) IsSet() bool {
	return v.isSet
}

func (v *NullablePromptSvcTextToImageParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromptSvcTextToImageParameters(val *PromptSvcTextToImageParameters) *NullablePromptSvcTextToImageParameters {
	return &NullablePromptSvcTextToImageParameters{value: val, isSet: true}
}

func (v NullablePromptSvcTextToImageParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromptSvcTextToImageParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



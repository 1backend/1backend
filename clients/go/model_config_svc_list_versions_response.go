/*
1Backend

AI-native microservices platform.

API version: 0.9.3
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigSvcListVersionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigSvcListVersionsResponse{}

// ConfigSvcListVersionsResponse struct for ConfigSvcListVersionsResponse
type ConfigSvcListVersionsResponse struct {
	// AfterJson is the cursor to fetch the next page, encoded as a JSON array string. e.g. '[\"2023-08-01T12:00:00Z\",\"versid-123\"]'
	AfterJson *string `json:"afterJson,omitempty"`
	// Versions across all IDs, sorted by CreatedAt descending.
	Versions []ConfigSvcVersion `json:"versions,omitempty"`
}

// NewConfigSvcListVersionsResponse instantiates a new ConfigSvcListVersionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigSvcListVersionsResponse() *ConfigSvcListVersionsResponse {
	this := ConfigSvcListVersionsResponse{}
	return &this
}

// NewConfigSvcListVersionsResponseWithDefaults instantiates a new ConfigSvcListVersionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigSvcListVersionsResponseWithDefaults() *ConfigSvcListVersionsResponse {
	this := ConfigSvcListVersionsResponse{}
	return &this
}

// GetAfterJson returns the AfterJson field value if set, zero value otherwise.
func (o *ConfigSvcListVersionsResponse) GetAfterJson() string {
	if o == nil || IsNil(o.AfterJson) {
		var ret string
		return ret
	}
	return *o.AfterJson
}

// GetAfterJsonOk returns a tuple with the AfterJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcListVersionsResponse) GetAfterJsonOk() (*string, bool) {
	if o == nil || IsNil(o.AfterJson) {
		return nil, false
	}
	return o.AfterJson, true
}

// HasAfterJson returns a boolean if a field has been set.
func (o *ConfigSvcListVersionsResponse) HasAfterJson() bool {
	if o != nil && !IsNil(o.AfterJson) {
		return true
	}

	return false
}

// SetAfterJson gets a reference to the given string and assigns it to the AfterJson field.
func (o *ConfigSvcListVersionsResponse) SetAfterJson(v string) {
	o.AfterJson = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *ConfigSvcListVersionsResponse) GetVersions() []ConfigSvcVersion {
	if o == nil || IsNil(o.Versions) {
		var ret []ConfigSvcVersion
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcListVersionsResponse) GetVersionsOk() ([]ConfigSvcVersion, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *ConfigSvcListVersionsResponse) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []ConfigSvcVersion and assigns it to the Versions field.
func (o *ConfigSvcListVersionsResponse) SetVersions(v []ConfigSvcVersion) {
	o.Versions = v
}

func (o ConfigSvcListVersionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigSvcListVersionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AfterJson) {
		toSerialize["afterJson"] = o.AfterJson
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableConfigSvcListVersionsResponse struct {
	value *ConfigSvcListVersionsResponse
	isSet bool
}

func (v NullableConfigSvcListVersionsResponse) Get() *ConfigSvcListVersionsResponse {
	return v.value
}

func (v *NullableConfigSvcListVersionsResponse) Set(val *ConfigSvcListVersionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigSvcListVersionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigSvcListVersionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigSvcListVersionsResponse(val *ConfigSvcListVersionsResponse) *NullableConfigSvcListVersionsResponse {
	return &NullableConfigSvcListVersionsResponse{value: val, isSet: true}
}

func (v NullableConfigSvcListVersionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigSvcListVersionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



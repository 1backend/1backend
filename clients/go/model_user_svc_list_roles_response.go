/*
1Backend

AI-native microservices platform.

API version: 0.3.0-rc.32
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSvcListRolesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcListRolesResponse{}

// UserSvcListRolesResponse struct for UserSvcListRolesResponse
type UserSvcListRolesResponse struct {
	Roles []string `json:"roles,omitempty"`
}

// NewUserSvcListRolesResponse instantiates a new UserSvcListRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcListRolesResponse() *UserSvcListRolesResponse {
	this := UserSvcListRolesResponse{}
	return &this
}

// NewUserSvcListRolesResponseWithDefaults instantiates a new UserSvcListRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcListRolesResponseWithDefaults() *UserSvcListRolesResponse {
	this := UserSvcListRolesResponse{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *UserSvcListRolesResponse) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcListRolesResponse) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *UserSvcListRolesResponse) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *UserSvcListRolesResponse) SetRoles(v []string) {
	o.Roles = v
}

func (o UserSvcListRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcListRolesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableUserSvcListRolesResponse struct {
	value *UserSvcListRolesResponse
	isSet bool
}

func (v NullableUserSvcListRolesResponse) Get() *UserSvcListRolesResponse {
	return v.value
}

func (v *NullableUserSvcListRolesResponse) Set(val *UserSvcListRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcListRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcListRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcListRolesResponse(val *UserSvcListRolesResponse) *NullableUserSvcListRolesResponse {
	return &NullableUserSvcListRolesResponse{value: val, isSet: true}
}

func (v NullableUserSvcListRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcListRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



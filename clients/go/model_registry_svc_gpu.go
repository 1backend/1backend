/*
1Backend

AI-native microservices platform.

API version: 0.7.6
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RegistrySvcGPU type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistrySvcGPU{}

// RegistrySvcGPU struct for RegistrySvcGPU
type RegistrySvcGPU struct {
	BusId *string `json:"busId,omitempty"`
	ComputeMode *string `json:"computeMode,omitempty"`
	CudaVersion *string `json:"cudaVersion,omitempty"`
	GpuUtilization *float32 `json:"gpuUtilization,omitempty"`
	// Id Node.URL + IntraNodeId
	Id *string `json:"id,omitempty"`
	IntraNodeId *int32 `json:"intraNodeId,omitempty"`
	MemoryTotal *int32 `json:"memoryTotal,omitempty"`
	MemoryUsage *int32 `json:"memoryUsage,omitempty"`
	Name *string `json:"name,omitempty"`
	PerformanceState *string `json:"performanceState,omitempty"`
	PowerCap *float32 `json:"powerCap,omitempty"`
	PowerUsage *float32 `json:"powerUsage,omitempty"`
	ProcessDetails []RegistrySvcProcess `json:"processDetails,omitempty"`
	Temperature *float32 `json:"temperature,omitempty"`
}

// NewRegistrySvcGPU instantiates a new RegistrySvcGPU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrySvcGPU() *RegistrySvcGPU {
	this := RegistrySvcGPU{}
	return &this
}

// NewRegistrySvcGPUWithDefaults instantiates a new RegistrySvcGPU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrySvcGPUWithDefaults() *RegistrySvcGPU {
	this := RegistrySvcGPU{}
	return &this
}



// HasBusId returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasBusId() bool {
	if o != nil && !IsNil(o.BusId) {
		return true
	}

	return false
}




// HasComputeMode returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasComputeMode() bool {
	if o != nil && !IsNil(o.ComputeMode) {
		return true
	}

	return false
}




// HasCudaVersion returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasCudaVersion() bool {
	if o != nil && !IsNil(o.CudaVersion) {
		return true
	}

	return false
}




// HasGpuUtilization returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasGpuUtilization() bool {
	if o != nil && !IsNil(o.GpuUtilization) {
		return true
	}

	return false
}




// HasId returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}




// HasIntraNodeId returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasIntraNodeId() bool {
	if o != nil && !IsNil(o.IntraNodeId) {
		return true
	}

	return false
}




// HasMemoryTotal returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasMemoryTotal() bool {
	if o != nil && !IsNil(o.MemoryTotal) {
		return true
	}

	return false
}




// HasMemoryUsage returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasMemoryUsage() bool {
	if o != nil && !IsNil(o.MemoryUsage) {
		return true
	}

	return false
}




// HasName returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}




// HasPerformanceState returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasPerformanceState() bool {
	if o != nil && !IsNil(o.PerformanceState) {
		return true
	}

	return false
}




// HasPowerCap returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasPowerCap() bool {
	if o != nil && !IsNil(o.PowerCap) {
		return true
	}

	return false
}




// HasPowerUsage returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasPowerUsage() bool {
	if o != nil && !IsNil(o.PowerUsage) {
		return true
	}

	return false
}




// HasProcessDetails returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasProcessDetails() bool {
	if o != nil && !IsNil(o.ProcessDetails) {
		return true
	}

	return false
}




// HasTemperature returns a boolean if a field has been set.
func (o *RegistrySvcGPU) HasTemperature() bool {
	if o != nil && !IsNil(o.Temperature) {
		return true
	}

	return false
}


func (o RegistrySvcGPU) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistrySvcGPU) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusId) {
		toSerialize["busId"] = o.BusId
	}
	if !IsNil(o.ComputeMode) {
		toSerialize["computeMode"] = o.ComputeMode
	}
	if !IsNil(o.CudaVersion) {
		toSerialize["cudaVersion"] = o.CudaVersion
	}
	if !IsNil(o.GpuUtilization) {
		toSerialize["gpuUtilization"] = o.GpuUtilization
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IntraNodeId) {
		toSerialize["intraNodeId"] = o.IntraNodeId
	}
	if !IsNil(o.MemoryTotal) {
		toSerialize["memoryTotal"] = o.MemoryTotal
	}
	if !IsNil(o.MemoryUsage) {
		toSerialize["memoryUsage"] = o.MemoryUsage
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PerformanceState) {
		toSerialize["performanceState"] = o.PerformanceState
	}
	if !IsNil(o.PowerCap) {
		toSerialize["powerCap"] = o.PowerCap
	}
	if !IsNil(o.PowerUsage) {
		toSerialize["powerUsage"] = o.PowerUsage
	}
	if !IsNil(o.ProcessDetails) {
		toSerialize["processDetails"] = o.ProcessDetails
	}
	if !IsNil(o.Temperature) {
		toSerialize["temperature"] = o.Temperature
	}
	return toSerialize, nil
}

type NullableRegistrySvcGPU struct {
	value *RegistrySvcGPU
	isSet bool
}

func (v NullableRegistrySvcGPU) Get() *RegistrySvcGPU {
	return v.value
}

func (v *NullableRegistrySvcGPU) Set(val *RegistrySvcGPU) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrySvcGPU) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrySvcGPU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrySvcGPU(val *RegistrySvcGPU) *NullableRegistrySvcGPU {
	return &NullableRegistrySvcGPU{value: val, isSet: true}
}

func (v NullableRegistrySvcGPU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrySvcGPU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



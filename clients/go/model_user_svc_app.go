/*
1Backend

AI-native microservices platform.

API version: 0.9.1
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserSvcApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcApp{}

// UserSvcApp struct for UserSvcApp
type UserSvcApp struct {
	Host string `json:"host"`
	Id string `json:"id"`
}

type _UserSvcApp UserSvcApp

// NewUserSvcApp instantiates a new UserSvcApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcApp(host string, id string) *UserSvcApp {
	this := UserSvcApp{}
	this.Host = host
	this.Id = id
	return &this
}

// NewUserSvcAppWithDefaults instantiates a new UserSvcApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcAppWithDefaults() *UserSvcApp {
	this := UserSvcApp{}
	return &this
}

// GetHost returns the Host field value
func (o *UserSvcApp) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *UserSvcApp) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *UserSvcApp) SetHost(v string) {
	o.Host = v
}

// GetId returns the Id field value
func (o *UserSvcApp) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserSvcApp) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserSvcApp) SetId(v string) {
	o.Id = v
}

func (o UserSvcApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host"] = o.Host
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *UserSvcApp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserSvcApp := _UserSvcApp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserSvcApp)

	if err != nil {
		return err
	}

	*o = UserSvcApp(varUserSvcApp)

	return err
}

type NullableUserSvcApp struct {
	value *UserSvcApp
	isSet bool
}

func (v NullableUserSvcApp) Get() *UserSvcApp {
	return v.value
}

func (v *NullableUserSvcApp) Set(val *UserSvcApp) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcApp) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcApp(val *UserSvcApp) *NullableUserSvcApp {
	return &NullableUserSvcApp{value: val, isSet: true}
}

func (v NullableUserSvcApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



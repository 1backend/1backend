/*
OpenOrch

A language-agnostic microservices framework for building AI applications.

API version: 0.3.0-rc.29
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelSvcDefaultParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSvcDefaultParameters{}

// ModelSvcDefaultParameters struct for ModelSvcDefaultParameters
type ModelSvcDefaultParameters struct {
	Container *ModelSvcContainer `json:"container,omitempty"`
}

// NewModelSvcDefaultParameters instantiates a new ModelSvcDefaultParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSvcDefaultParameters() *ModelSvcDefaultParameters {
	this := ModelSvcDefaultParameters{}
	return &this
}

// NewModelSvcDefaultParametersWithDefaults instantiates a new ModelSvcDefaultParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSvcDefaultParametersWithDefaults() *ModelSvcDefaultParameters {
	this := ModelSvcDefaultParameters{}
	return &this
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *ModelSvcDefaultParameters) GetContainer() ModelSvcContainer {
	if o == nil || IsNil(o.Container) {
		var ret ModelSvcContainer
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcDefaultParameters) GetContainerOk() (*ModelSvcContainer, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *ModelSvcDefaultParameters) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given ModelSvcContainer and assigns it to the Container field.
func (o *ModelSvcDefaultParameters) SetContainer(v ModelSvcContainer) {
	o.Container = &v
}

func (o ModelSvcDefaultParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSvcDefaultParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	return toSerialize, nil
}

type NullableModelSvcDefaultParameters struct {
	value *ModelSvcDefaultParameters
	isSet bool
}

func (v NullableModelSvcDefaultParameters) Get() *ModelSvcDefaultParameters {
	return v.value
}

func (v *NullableModelSvcDefaultParameters) Set(val *ModelSvcDefaultParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSvcDefaultParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSvcDefaultParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSvcDefaultParameters(val *ModelSvcDefaultParameters) *NullableModelSvcDefaultParameters {
	return &NullableModelSvcDefaultParameters{value: val, isSet: true}
}

func (v NullableModelSvcDefaultParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSvcDefaultParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



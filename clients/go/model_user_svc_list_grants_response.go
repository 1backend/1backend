/*
OpenOrch

A language-agnostic microservices framework for building AI applications.

API version: 0.3.0-rc.29
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSvcListGrantsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcListGrantsResponse{}

// UserSvcListGrantsResponse struct for UserSvcListGrantsResponse
type UserSvcListGrantsResponse struct {
	Grants []UserSvcGrant `json:"grants,omitempty"`
}

// NewUserSvcListGrantsResponse instantiates a new UserSvcListGrantsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcListGrantsResponse() *UserSvcListGrantsResponse {
	this := UserSvcListGrantsResponse{}
	return &this
}

// NewUserSvcListGrantsResponseWithDefaults instantiates a new UserSvcListGrantsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcListGrantsResponseWithDefaults() *UserSvcListGrantsResponse {
	this := UserSvcListGrantsResponse{}
	return &this
}

// GetGrants returns the Grants field value if set, zero value otherwise.
func (o *UserSvcListGrantsResponse) GetGrants() []UserSvcGrant {
	if o == nil || IsNil(o.Grants) {
		var ret []UserSvcGrant
		return ret
	}
	return o.Grants
}

// GetGrantsOk returns a tuple with the Grants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcListGrantsResponse) GetGrantsOk() ([]UserSvcGrant, bool) {
	if o == nil || IsNil(o.Grants) {
		return nil, false
	}
	return o.Grants, true
}

// HasGrants returns a boolean if a field has been set.
func (o *UserSvcListGrantsResponse) HasGrants() bool {
	if o != nil && !IsNil(o.Grants) {
		return true
	}

	return false
}

// SetGrants gets a reference to the given []UserSvcGrant and assigns it to the Grants field.
func (o *UserSvcListGrantsResponse) SetGrants(v []UserSvcGrant) {
	o.Grants = v
}

func (o UserSvcListGrantsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcListGrantsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Grants) {
		toSerialize["grants"] = o.Grants
	}
	return toSerialize, nil
}

type NullableUserSvcListGrantsResponse struct {
	value *UserSvcListGrantsResponse
	isSet bool
}

func (v NullableUserSvcListGrantsResponse) Get() *UserSvcListGrantsResponse {
	return v.value
}

func (v *NullableUserSvcListGrantsResponse) Set(val *UserSvcListGrantsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcListGrantsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcListGrantsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcListGrantsResponse(val *UserSvcListGrantsResponse) *NullableUserSvcListGrantsResponse {
	return &NullableUserSvcListGrantsResponse{value: val, isSet: true}
}

func (v NullableUserSvcListGrantsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcListGrantsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



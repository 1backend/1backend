/*
1Backend

AI-native microservices platform.

API version: 0.3.0-rc.31
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSvcListUsersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcListUsersRequest{}

// UserSvcListUsersRequest struct for UserSvcListUsersRequest
type UserSvcListUsersRequest struct {
	ContactId *string `json:"contactId,omitempty"`
	// This should be used sparingly or not at all. Might deprecate.
	Query *DatastoreQuery `json:"query,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewUserSvcListUsersRequest instantiates a new UserSvcListUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcListUsersRequest() *UserSvcListUsersRequest {
	this := UserSvcListUsersRequest{}
	return &this
}

// NewUserSvcListUsersRequestWithDefaults instantiates a new UserSvcListUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcListUsersRequestWithDefaults() *UserSvcListUsersRequest {
	this := UserSvcListUsersRequest{}
	return &this
}

// GetContactId returns the ContactId field value if set, zero value otherwise.
func (o *UserSvcListUsersRequest) GetContactId() string {
	if o == nil || IsNil(o.ContactId) {
		var ret string
		return ret
	}
	return *o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcListUsersRequest) GetContactIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContactId) {
		return nil, false
	}
	return o.ContactId, true
}

// HasContactId returns a boolean if a field has been set.
func (o *UserSvcListUsersRequest) HasContactId() bool {
	if o != nil && !IsNil(o.ContactId) {
		return true
	}

	return false
}

// SetContactId gets a reference to the given string and assigns it to the ContactId field.
func (o *UserSvcListUsersRequest) SetContactId(v string) {
	o.ContactId = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *UserSvcListUsersRequest) GetQuery() DatastoreQuery {
	if o == nil || IsNil(o.Query) {
		var ret DatastoreQuery
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcListUsersRequest) GetQueryOk() (*DatastoreQuery, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *UserSvcListUsersRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given DatastoreQuery and assigns it to the Query field.
func (o *UserSvcListUsersRequest) SetQuery(v DatastoreQuery) {
	o.Query = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserSvcListUsersRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcListUsersRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserSvcListUsersRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *UserSvcListUsersRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o UserSvcListUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcListUsersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContactId) {
		toSerialize["contactId"] = o.ContactId
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableUserSvcListUsersRequest struct {
	value *UserSvcListUsersRequest
	isSet bool
}

func (v NullableUserSvcListUsersRequest) Get() *UserSvcListUsersRequest {
	return v.value
}

func (v *NullableUserSvcListUsersRequest) Set(val *UserSvcListUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcListUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcListUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcListUsersRequest(val *UserSvcListUsersRequest) *NullableUserSvcListUsersRequest {
	return &NullableUserSvcListUsersRequest{value: val, isSet: true}
}

func (v NullableUserSvcListUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcListUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



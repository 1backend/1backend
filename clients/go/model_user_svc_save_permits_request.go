/*
1Backend

AI-native microservices platform.

API version: 0.8.0-rc2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSvcSavePermitsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcSavePermitsRequest{}

// UserSvcSavePermitsRequest struct for UserSvcSavePermitsRequest
type UserSvcSavePermitsRequest struct {
	Permits []UserSvcPermitInput `json:"permits,omitempty"`
}

// NewUserSvcSavePermitsRequest instantiates a new UserSvcSavePermitsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcSavePermitsRequest() *UserSvcSavePermitsRequest {
	this := UserSvcSavePermitsRequest{}
	return &this
}

// NewUserSvcSavePermitsRequestWithDefaults instantiates a new UserSvcSavePermitsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcSavePermitsRequestWithDefaults() *UserSvcSavePermitsRequest {
	this := UserSvcSavePermitsRequest{}
	return &this
}

// GetPermits returns the Permits field value if set, zero value otherwise.
func (o *UserSvcSavePermitsRequest) GetPermits() []UserSvcPermitInput {
	if o == nil || IsNil(o.Permits) {
		var ret []UserSvcPermitInput
		return ret
	}
	return o.Permits
}

// GetPermitsOk returns a tuple with the Permits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcSavePermitsRequest) GetPermitsOk() ([]UserSvcPermitInput, bool) {
	if o == nil || IsNil(o.Permits) {
		return nil, false
	}
	return o.Permits, true
}

// HasPermits returns a boolean if a field has been set.
func (o *UserSvcSavePermitsRequest) HasPermits() bool {
	if o != nil && !IsNil(o.Permits) {
		return true
	}

	return false
}

// SetPermits gets a reference to the given []UserSvcPermitInput and assigns it to the Permits field.
func (o *UserSvcSavePermitsRequest) SetPermits(v []UserSvcPermitInput) {
	o.Permits = v
}

func (o UserSvcSavePermitsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcSavePermitsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permits) {
		toSerialize["permits"] = o.Permits
	}
	return toSerialize, nil
}

type NullableUserSvcSavePermitsRequest struct {
	value *UserSvcSavePermitsRequest
	isSet bool
}

func (v NullableUserSvcSavePermitsRequest) Get() *UserSvcSavePermitsRequest {
	return v.value
}

func (v *NullableUserSvcSavePermitsRequest) Set(val *UserSvcSavePermitsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcSavePermitsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcSavePermitsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcSavePermitsRequest(val *UserSvcSavePermitsRequest) *NullableUserSvcSavePermitsRequest {
	return &NullableUserSvcSavePermitsRequest{value: val, isSet: true}
}

func (v NullableUserSvcSavePermitsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcSavePermitsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



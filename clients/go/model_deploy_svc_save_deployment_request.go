/*
OpenOrch

A language-agnostic microservices framework for building AI applications.

API version: 0.3.0-rc.29
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeploySvcSaveDeploymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploySvcSaveDeploymentRequest{}

// DeploySvcSaveDeploymentRequest struct for DeploySvcSaveDeploymentRequest
type DeploySvcSaveDeploymentRequest struct {
	Deployment *DeploySvcDeployment `json:"deployment,omitempty"`
}

// NewDeploySvcSaveDeploymentRequest instantiates a new DeploySvcSaveDeploymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploySvcSaveDeploymentRequest() *DeploySvcSaveDeploymentRequest {
	this := DeploySvcSaveDeploymentRequest{}
	return &this
}

// NewDeploySvcSaveDeploymentRequestWithDefaults instantiates a new DeploySvcSaveDeploymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploySvcSaveDeploymentRequestWithDefaults() *DeploySvcSaveDeploymentRequest {
	this := DeploySvcSaveDeploymentRequest{}
	return &this
}

// GetDeployment returns the Deployment field value if set, zero value otherwise.
func (o *DeploySvcSaveDeploymentRequest) GetDeployment() DeploySvcDeployment {
	if o == nil || IsNil(o.Deployment) {
		var ret DeploySvcDeployment
		return ret
	}
	return *o.Deployment
}

// GetDeploymentOk returns a tuple with the Deployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploySvcSaveDeploymentRequest) GetDeploymentOk() (*DeploySvcDeployment, bool) {
	if o == nil || IsNil(o.Deployment) {
		return nil, false
	}
	return o.Deployment, true
}

// HasDeployment returns a boolean if a field has been set.
func (o *DeploySvcSaveDeploymentRequest) HasDeployment() bool {
	if o != nil && !IsNil(o.Deployment) {
		return true
	}

	return false
}

// SetDeployment gets a reference to the given DeploySvcDeployment and assigns it to the Deployment field.
func (o *DeploySvcSaveDeploymentRequest) SetDeployment(v DeploySvcDeployment) {
	o.Deployment = &v
}

func (o DeploySvcSaveDeploymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploySvcSaveDeploymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Deployment) {
		toSerialize["deployment"] = o.Deployment
	}
	return toSerialize, nil
}

type NullableDeploySvcSaveDeploymentRequest struct {
	value *DeploySvcSaveDeploymentRequest
	isSet bool
}

func (v NullableDeploySvcSaveDeploymentRequest) Get() *DeploySvcSaveDeploymentRequest {
	return v.value
}

func (v *NullableDeploySvcSaveDeploymentRequest) Set(val *DeploySvcSaveDeploymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploySvcSaveDeploymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploySvcSaveDeploymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploySvcSaveDeploymentRequest(val *DeploySvcSaveDeploymentRequest) *NullableDeploySvcSaveDeploymentRequest {
	return &NullableDeploySvcSaveDeploymentRequest{value: val, isSet: true}
}

func (v NullableDeploySvcSaveDeploymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploySvcSaveDeploymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



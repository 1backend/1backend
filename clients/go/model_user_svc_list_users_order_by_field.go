/*
1Backend

AI-native microservices platform.

API version: 0.3.0-rc.38
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// UserSvcListUsersOrderByField the model 'UserSvcListUsersOrderByField'
type UserSvcListUsersOrderByField string

// List of user_svc.ListUsersOrderByField
const (
	ListUsersOrderByFieldCreatedAt UserSvcListUsersOrderByField = "createdAt"
	ListUsersOrderByFieldUpdatedAt UserSvcListUsersOrderByField = "updatedAt"
)

// All allowed values of UserSvcListUsersOrderByField enum
var AllowedUserSvcListUsersOrderByFieldEnumValues = []UserSvcListUsersOrderByField{
	"createdAt",
	"updatedAt",
}

func (v *UserSvcListUsersOrderByField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UserSvcListUsersOrderByField(value)
	for _, existing := range AllowedUserSvcListUsersOrderByFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid UserSvcListUsersOrderByField", value)
}

// NewUserSvcListUsersOrderByFieldFromValue returns a pointer to a valid UserSvcListUsersOrderByField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUserSvcListUsersOrderByFieldFromValue(v string) (*UserSvcListUsersOrderByField, error) {
	ev := UserSvcListUsersOrderByField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for UserSvcListUsersOrderByField: valid values are %v", v, AllowedUserSvcListUsersOrderByFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UserSvcListUsersOrderByField) IsValid() bool {
	for _, existing := range AllowedUserSvcListUsersOrderByFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to user_svc.ListUsersOrderByField value
func (v UserSvcListUsersOrderByField) Ptr() *UserSvcListUsersOrderByField {
	return &v
}

type NullableUserSvcListUsersOrderByField struct {
	value *UserSvcListUsersOrderByField
	isSet bool
}

func (v NullableUserSvcListUsersOrderByField) Get() *UserSvcListUsersOrderByField {
	return v.value
}

func (v *NullableUserSvcListUsersOrderByField) Set(val *UserSvcListUsersOrderByField) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcListUsersOrderByField) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcListUsersOrderByField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcListUsersOrderByField(val *UserSvcListUsersOrderByField) *NullableUserSvcListUsersOrderByField {
	return &NullableUserSvcListUsersOrderByField{value: val, isSet: true}
}

func (v NullableUserSvcListUsersOrderByField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcListUsersOrderByField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


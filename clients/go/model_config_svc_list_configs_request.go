/*
1Backend

AI-native microservices platform.

API version: 0.7.3
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigSvcListConfigsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigSvcListConfigsRequest{}

// ConfigSvcListConfigsRequest struct for ConfigSvcListConfigsRequest
type ConfigSvcListConfigsRequest struct {
	App *string `json:"app,omitempty"`
	// Slugs or camelCased slugs of the owners to list configs for.
	Slugs []string `json:"slugs,omitempty"`
}

// NewConfigSvcListConfigsRequest instantiates a new ConfigSvcListConfigsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigSvcListConfigsRequest() *ConfigSvcListConfigsRequest {
	this := ConfigSvcListConfigsRequest{}
	return &this
}

// NewConfigSvcListConfigsRequestWithDefaults instantiates a new ConfigSvcListConfigsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigSvcListConfigsRequestWithDefaults() *ConfigSvcListConfigsRequest {
	this := ConfigSvcListConfigsRequest{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *ConfigSvcListConfigsRequest) GetApp() string {
	if o == nil || IsNil(o.App) {
		var ret string
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcListConfigsRequest) GetAppOk() (*string, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *ConfigSvcListConfigsRequest) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given string and assigns it to the App field.
func (o *ConfigSvcListConfigsRequest) SetApp(v string) {
	o.App = &v
}

// GetSlugs returns the Slugs field value if set, zero value otherwise.
func (o *ConfigSvcListConfigsRequest) GetSlugs() []string {
	if o == nil || IsNil(o.Slugs) {
		var ret []string
		return ret
	}
	return o.Slugs
}

// GetSlugsOk returns a tuple with the Slugs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcListConfigsRequest) GetSlugsOk() ([]string, bool) {
	if o == nil || IsNil(o.Slugs) {
		return nil, false
	}
	return o.Slugs, true
}

// HasSlugs returns a boolean if a field has been set.
func (o *ConfigSvcListConfigsRequest) HasSlugs() bool {
	if o != nil && !IsNil(o.Slugs) {
		return true
	}

	return false
}

// SetSlugs gets a reference to the given []string and assigns it to the Slugs field.
func (o *ConfigSvcListConfigsRequest) SetSlugs(v []string) {
	o.Slugs = v
}

func (o ConfigSvcListConfigsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigSvcListConfigsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Slugs) {
		toSerialize["slugs"] = o.Slugs
	}
	return toSerialize, nil
}

type NullableConfigSvcListConfigsRequest struct {
	value *ConfigSvcListConfigsRequest
	isSet bool
}

func (v NullableConfigSvcListConfigsRequest) Get() *ConfigSvcListConfigsRequest {
	return v.value
}

func (v *NullableConfigSvcListConfigsRequest) Set(val *ConfigSvcListConfigsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigSvcListConfigsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigSvcListConfigsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigSvcListConfigsRequest(val *ConfigSvcListConfigsRequest) *NullableConfigSvcListConfigsRequest {
	return &NullableConfigSvcListConfigsRequest{value: val, isSet: true}
}

func (v NullableConfigSvcListConfigsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigSvcListConfigsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
OpenOrch

A language-agnostic microservices framework for building AI applications.

API version: 0.3.0-rc.29
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChatSvcGetMessagesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatSvcGetMessagesResponse{}

// ChatSvcGetMessagesResponse struct for ChatSvcGetMessagesResponse
type ChatSvcGetMessagesResponse struct {
	Messages []ChatSvcMessage `json:"messages,omitempty"`
}

// NewChatSvcGetMessagesResponse instantiates a new ChatSvcGetMessagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatSvcGetMessagesResponse() *ChatSvcGetMessagesResponse {
	this := ChatSvcGetMessagesResponse{}
	return &this
}

// NewChatSvcGetMessagesResponseWithDefaults instantiates a new ChatSvcGetMessagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatSvcGetMessagesResponseWithDefaults() *ChatSvcGetMessagesResponse {
	this := ChatSvcGetMessagesResponse{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *ChatSvcGetMessagesResponse) GetMessages() []ChatSvcMessage {
	if o == nil || IsNil(o.Messages) {
		var ret []ChatSvcMessage
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatSvcGetMessagesResponse) GetMessagesOk() ([]ChatSvcMessage, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *ChatSvcGetMessagesResponse) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []ChatSvcMessage and assigns it to the Messages field.
func (o *ChatSvcGetMessagesResponse) SetMessages(v []ChatSvcMessage) {
	o.Messages = v
}

func (o ChatSvcGetMessagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatSvcGetMessagesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	return toSerialize, nil
}

type NullableChatSvcGetMessagesResponse struct {
	value *ChatSvcGetMessagesResponse
	isSet bool
}

func (v NullableChatSvcGetMessagesResponse) Get() *ChatSvcGetMessagesResponse {
	return v.value
}

func (v *NullableChatSvcGetMessagesResponse) Set(val *ChatSvcGetMessagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChatSvcGetMessagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChatSvcGetMessagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatSvcGetMessagesResponse(val *ChatSvcGetMessagesResponse) *NullableChatSvcGetMessagesResponse {
	return &NullableChatSvcGetMessagesResponse{value: val, isSet: true}
}

func (v NullableChatSvcGetMessagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatSvcGetMessagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
1Backend

AI-native microservices platform.

API version: 0.3.0-rc.39
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSvcListPermissionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcListPermissionsResponse{}

// UserSvcListPermissionsResponse struct for UserSvcListPermissionsResponse
type UserSvcListPermissionsResponse struct {
	Permissions []string `json:"permissions,omitempty"`
}

// NewUserSvcListPermissionsResponse instantiates a new UserSvcListPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcListPermissionsResponse() *UserSvcListPermissionsResponse {
	this := UserSvcListPermissionsResponse{}
	return &this
}

// NewUserSvcListPermissionsResponseWithDefaults instantiates a new UserSvcListPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcListPermissionsResponseWithDefaults() *UserSvcListPermissionsResponse {
	this := UserSvcListPermissionsResponse{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UserSvcListPermissionsResponse) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcListPermissionsResponse) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UserSvcListPermissionsResponse) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *UserSvcListPermissionsResponse) SetPermissions(v []string) {
	o.Permissions = v
}

func (o UserSvcListPermissionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcListPermissionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableUserSvcListPermissionsResponse struct {
	value *UserSvcListPermissionsResponse
	isSet bool
}

func (v NullableUserSvcListPermissionsResponse) Get() *UserSvcListPermissionsResponse {
	return v.value
}

func (v *NullableUserSvcListPermissionsResponse) Set(val *UserSvcListPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcListPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcListPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcListPermissionsResponse(val *UserSvcListPermissionsResponse) *NullableUserSvcListPermissionsResponse {
	return &NullableUserSvcListPermissionsResponse{value: val, isSet: true}
}

func (v NullableUserSvcListPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcListPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



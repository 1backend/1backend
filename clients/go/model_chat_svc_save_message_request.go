/*
1Backend

AI-native microservices platform.

API version: 0.7.6
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChatSvcSaveMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatSvcSaveMessageRequest{}

// ChatSvcSaveMessageRequest struct for ChatSvcSaveMessageRequest
type ChatSvcSaveMessageRequest struct {
	// FileIds defines the file attachments the message has.
	FileIds []string `json:"fileIds,omitempty"`
	Id *string `json:"id,omitempty"`
	Meta map[string]interface{} `json:"meta,omitempty"`
	// Text content of the message eg. \"Hi, what's up?\"
	Text *string `json:"text,omitempty"`
	// ThreadId of the message.
	ThreadId *string `json:"threadId,omitempty"`
	// UserId is the id of the user who wrote the message. For AI messages this field is empty.
	UserId *string `json:"userId,omitempty"`
}

// NewChatSvcSaveMessageRequest instantiates a new ChatSvcSaveMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatSvcSaveMessageRequest() *ChatSvcSaveMessageRequest {
	this := ChatSvcSaveMessageRequest{}
	return &this
}

// NewChatSvcSaveMessageRequestWithDefaults instantiates a new ChatSvcSaveMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatSvcSaveMessageRequestWithDefaults() *ChatSvcSaveMessageRequest {
	this := ChatSvcSaveMessageRequest{}
	return &this
}



// HasFileIds returns a boolean if a field has been set.
func (o *ChatSvcSaveMessageRequest) HasFileIds() bool {
	if o != nil && !IsNil(o.FileIds) {
		return true
	}

	return false
}




// HasId returns a boolean if a field has been set.
func (o *ChatSvcSaveMessageRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}




// HasMeta returns a boolean if a field has been set.
func (o *ChatSvcSaveMessageRequest) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}




// HasText returns a boolean if a field has been set.
func (o *ChatSvcSaveMessageRequest) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}




// HasThreadId returns a boolean if a field has been set.
func (o *ChatSvcSaveMessageRequest) HasThreadId() bool {
	if o != nil && !IsNil(o.ThreadId) {
		return true
	}

	return false
}




// HasUserId returns a boolean if a field has been set.
func (o *ChatSvcSaveMessageRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}


func (o ChatSvcSaveMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatSvcSaveMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileIds) {
		toSerialize["fileIds"] = o.FileIds
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.ThreadId) {
		toSerialize["threadId"] = o.ThreadId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableChatSvcSaveMessageRequest struct {
	value *ChatSvcSaveMessageRequest
	isSet bool
}

func (v NullableChatSvcSaveMessageRequest) Get() *ChatSvcSaveMessageRequest {
	return v.value
}

func (v *NullableChatSvcSaveMessageRequest) Set(val *ChatSvcSaveMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChatSvcSaveMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChatSvcSaveMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatSvcSaveMessageRequest(val *ChatSvcSaveMessageRequest) *NullableChatSvcSaveMessageRequest {
	return &NullableChatSvcSaveMessageRequest{value: val, isSet: true}
}

func (v NullableChatSvcSaveMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatSvcSaveMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



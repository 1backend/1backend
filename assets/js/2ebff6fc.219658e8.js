"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3973],{10471:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>b,contentTitle:()=>m,default:()=>S,frontMatter:()=>h,metadata:()=>r,toc:()=>g});const r=JSON.parse('{"id":"1backend/list-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","source":"@site/docs/1backend/list-users.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-users","permalink":"/docs/1backend/list-users","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","sidebar_label":"List Users","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Read User by Token","permalink":"/docs/1backend/read-user-by-token"}}');var i=s(74848),n=s(28453),a=s(53746),o=s.n(a),p=s(56518),c=s.n(p),d=s(99972),l=s.n(d),u=s(25342),y=s.n(u),f=(s(44215),s(82223),s(24861));const h={id:"list-users",title:"List Users",description:"Fetches a list of users with optional query filters and pagination.",sidebar_label:"List Users",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},m=void 0,b={},g=[];function k(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"List Users"}),"\n",(0,i.jsx)(o(),{method:"post",path:"/user-svc/users",context:"endpoint"}),"\n",(0,i.jsx)(t.p,{children:"Fetches a list of users with optional query filters and pagination."}),"\n",(0,i.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(c(),{parameters:void 0}),"\n",(0,i.jsx)(l(),{title:"Body",body:{content:{"application/json":{schema:{properties:{contactId:{type:"string"},query:{allOf:[{properties:{count:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"},filters:{description:"Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.",items:{properties:{fields:{items:{type:"string"},type:"array"},jsonValues:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"},op:{enum:["or","equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpOr","OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]},subFilters:{description:"SubFilters is used for operations like OR where multiple filters are combined.",items:"circular()",type:"array"}},type:"object"},type:"array"},jsonAfter:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON-encoded string due to limitations in Swaggo (e.g., []interface{} gets converted to []map[string]interface{}).\nThere is no way to specify a type that results in an any/interface{} type in the `go -> openapi -> go` generation process.\nAs a result, JSONAfter is a JSON-marshalled string representing an array, e.g., `[42]`.",type:"string"},limit:{description:"Limit the number of records in the result set.",type:"integer"},orderBys:{description:"OrderBys order the result set.",items:{properties:{desc:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"},field:{description:"The field by which to order the results",type:"string"},randomize:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"},sortingType:{allOf:[{enum:["","numeric","text","date"],type:"string","x-enum-varnames":["SortingTypeDefault","SortingTypeNumeric","SortingTypeText","SortingTypeDate"]}],description:"Defines the type of sorting to apply (numeric, text, date, etc.)"}},type:"object"},type:"array"}},type:"object"}],description:"This should be used sparingly or not at all. Might deprecate."},userId:{type:"string"}},type:"object"}}},description:"List Users Request"}}),"\n",(0,i.jsx)(y(),{id:void 0,label:void 0,responses:{200:{description:"List of users retrieved successfully",content:{"application/json":{schema:{properties:{after:{type:"string"},count:{type:"integer"},users:{items:{properties:{contactIds:{items:{type:"string"},type:"array"},createdAt:{type:"string"},id:{type:"string"},name:{description:"Full name of the user.",example:"Jane Doe",type:"string"},roles:{items:{type:"string"},type:"array"},slug:{description:"URL-friendly unique (inside the 1Backend platform) identifier for the `user`.",example:"jane-doe",type:"string"},updatedAt:{type:"string"}},required:["id","slug"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function S(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(k,{...e})}):k(e)}}}]);
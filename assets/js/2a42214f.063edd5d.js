"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>f,contentTitle:()=>h,default:()=>D,frontMatter:()=>g,metadata:()=>i,toc:()=>T});const i=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var a=o(74848),n=o(28453),r=o(53746),s=o.n(r),p=o(56518),c=o.n(p),l=o(99972),m=o.n(l),d=o(25342),u=o.n(d),y=(o(44215),o(82223),o(24861));const g={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},h=void 0,f={},T=[];function b(e){const t={code:"code",p:"p",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,a.jsx)(s(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,a.jsxs)(t.p,{children:["Requires ",(0,a.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,a.jsx)(c(),{parameters:void 0}),"\n",(0,a.jsx)(m(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function D(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}}}]);
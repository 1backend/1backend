"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3142],{2439:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"running-the-server/docker-compose","title":"Running the 1Backend server with Docker Compose and prebuilt images","description":"This deployment method is one step above local development in terms of sophistication. It\u2019s suitable for a development server or simple production environments.","source":"@site/docs/running-the-server/docker-compose.md","sourceDirName":"running-the-server","slug":"/running-the-server/docker-compose","permalink":"/docs/running-the-server/docker-compose","draft":false,"unlisted":false,"editUrl":"https://github.com/1backend/1backend/tree/main/docs-source/docs/running-the-server/docker-compose.md","tags":[{"inline":true,"label":"run","permalink":"/docs/tags/run"},{"inline":true,"label":"deploy","permalink":"/docs/tags/deploy"}],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"tags":["run","deploy"]},"sidebar":"tutorialSidebar","previous":{"title":"Running the 1Backend server locally","permalink":"/docs/running-the-server/locally"},"next":{"title":"Frontend Environment Variables","permalink":"/docs/running-the-server/frontend-environment-variables"}}');var a=r(74848),s=r(28453);const o={sidebar_position:2,tags:["run","deploy"]},i="Running the 1Backend server with Docker Compose and prebuilt images",c={},d=[{value:"Once it&#39;s running",id:"once-its-running",level:2},{value:"Configuring",id:"configuring",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"running-the-1backend-server-with-docker-compose-and-prebuilt-images",children:"Running the 1Backend server with Docker Compose and prebuilt images"})}),"\n",(0,a.jsx)(n.p,{children:"This deployment method is one step above local development in terms of sophistication. It\u2019s suitable for a development server or simple production environments."}),"\n",(0,a.jsx)(n.p,{children:"This snippet will give you a quick idea about how to deploy the frontend and backend containers so they play nicely together:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'version: "3.8"\n\nvolumes:\n  1backend-data:\n    name: 1backend-data\n    driver: local\n\nservices:\n  1backend-frontend:\n    image: crufter/1backend-frontend:latest\n    ports:\n      - "3901:80"\n    environment:\n      # `BACKEND_ADDRESS` must be reachable from the browser.\n      # This is the API the browser will communicate with, not an internal address.\n      - BACKEND_ADDRESS=http://127.0.0.1:58231\n\n  1backend-backend:\n    image: crufter/1backend-backend:default-1-latest\n    # Use a version that matches your GPU architecture for GPU acceleration, e.g.:\n    # crufter/1backend-backend:cuda-12.2.0-latest\n    # For available versions, see:\n    # - https://hub.docker.com/r/crufter/1backend-backend/tags\n    # - The build file `1backend-docker-build.yaml`\n    ports:\n      - "58231:58231"\n    volumes:\n      # We mount the hostname to have a sensible fallback node URL\n      - /etc/hostname:/etc/host_hostname:ro\n      # We mount the docker socket so the backend can start   containers\n      - /var/run/docker.sock:/var/run/docker.sock\n      # We mount a volume so data will be persisted\n      - 1backend-data:/root/.1backend\n    # Grants 1Backend access to GPU metrics.\n    # Containers launched by 1Backend can still use GPU acceleration even if 1Backend lacks direct GPU access.\n    # deploy:\n    #   resources:\n    #     reservations:\n    #       devices:\n    #         - driver: nvidia\n    #           count: all\n    #           capabilities: [gpu]\n    environment:\n      # Volume mounted by AI containers launched by 1Backend to access models downloaded by the 1Backend File Svc.\n      - OB_VOLUME_NAME=1backend-data\n      #\n      # Enables GPU acceleration for NVIDIA GPUs.\n      # This flag controls GPU access for AI containers launched by 1Backend.\n      #\n      # - OB_GPU_PLATFORM=cuda\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Put the above into a file called ",(0,a.jsx)(n.code,{children:"docker-compose.yaml"})," in a folder on your computer and run it with the following command:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"docker compose up\n"})}),"\n",(0,a.jsx)(n.h2,{id:"once-its-running",children:"Once it's running"}),"\n",(0,a.jsxs)(n.p,{children:["After the containers successfully start, you can go to ",(0,a.jsx)(n.code,{children:"127.0.0.1:3901"})," and log in with the ",(0,a.jsx)(n.a,{href:"/docs/running-the-server/using#default-credentials",children:"Default Credentials"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"configuring",children:"Configuring"}),"\n",(0,a.jsxs)(n.p,{children:["See the ",(0,a.jsx)(n.a,{href:"./backend-environment-variables/",children:"Backend Environment Variables"})," and ",(0,a.jsx)(n.a,{href:"./backend-environment-variables/",children:"Frontend Environment Variables"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);
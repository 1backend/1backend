"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[998],{45448:e=>{e.exports=JSON.parse('{"tag":{"label":"services","permalink":"/docs/tags/services","allTagsPath":"/docs/tags","count":9,"items":[{"id":"built-in-services/chat-svc","title":"Chat Svc","description":"The chat service keeps a database of threads, messages and file assets associated with them. Chat messages are the primary user interface of LLMs and other AI architectures.","permalink":"/docs/built-in-services/chat-svc"},{"id":"built-in-services/config-svc","title":"Config Svc","description":"The Config Svc stores public, non-sensitive and end-user-facing data.","permalink":"/docs/built-in-services/config-svc"},{"id":"built-in-services/container-svc","title":"Container Svc","description":"The container service maintains containers on a node. It currently only supports Docker. It expects the Docker socket to be mounted.","permalink":"/docs/built-in-services/container-svc"},{"id":"built-in-services/data-svc","title":"Data Svc","description":"The Data Service (Data Svc) is designed to facilitate backendless applications, allowing data to be saved and queried directly from the frontend, similar to Firebase.","permalink":"/docs/built-in-services/data-svc"},{"id":"built-in-services/deploy-svc","title":"Deploy Svc","description":"The deploy service is responsible of launching containers on whatever infrastructure the 1Backend is running on (eg. Docker Svc) and registering them into the Registry Svc.","permalink":"/docs/built-in-services/deploy-svc"},{"id":"built-in-services/file-svc","title":"File Svc","description":"The File Service handles file-related operations, including downloading files from the internet (to cache them for faster access), accepting file uploads, and serving both downloaded and uploaded files.","permalink":"/docs/built-in-services/file-svc"},{"id":"built-in-services/model-svc","title":"Model Svc","description":"The model service can start, stop AI models across multiple runtimes (eg. Docker) and maintains a database of available models on the platform.","permalink":"/docs/built-in-services/model-svc"},{"id":"built-in-services/prompt-svc","title":"Prompt Svc","description":"The prompt service provides an easy to use interface to prompt LLMs and use AI models. Aims to serve humans and machines alike with its resilient queue based architecture.","permalink":"/docs/built-in-services/prompt-svc"},{"id":"built-in-services/secret-svc","title":"Secret Svc","description":"The Secret Svc stores sensitive or internal (non-end-user-facing) configuration. Aims to store all configuration not required at bootstrap, both for internal and external services.","permalink":"/docs/built-in-services/secret-svc"}],"unlisted":false}}')}}]);
"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[5745],{69903:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>g,default:()=>b,frontMatter:()=>f,metadata:()=>n,toc:()=>j});const n=JSON.parse('{"id":"1backend/list-deployments","title":"List Deployments","description":"Retrieve a list of deployments.","source":"@site/docs/1backend/list-deployments.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-deployments","permalink":"/docs/1backend/list-deployments","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-deployments","title":"List Deployments","description":"Retrieve a list of deployments.","sidebar_label":"List Deployments","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Save Deployment","permalink":"/docs/1backend/save-deployment"},"next":{"title":"Send an Email","permalink":"/docs/1backend/send-email"}}');var s=i(74848),r=i(28453),o=i(53746),a=i.n(o),p=i(56518),l=i.n(p),d=i(99972),c=i.n(d),u=i(25342),m=i.n(u),y=(i(44215),i(82223),i(24861));const f={id:"list-deployments",title:"List Deployments",description:"Retrieve a list of deployments.",sidebar_label:"List Deployments",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},g=void 0,h={},j=[];function v(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"List Deployments"}),"\n",(0,s.jsx)(a(),{method:"post",path:"/deploy-svc/deployments",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Retrieve a list of deployments."}),"\n",(0,s.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(l(),{parameters:void 0}),"\n",(0,s.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{type:"object"}}},description:"List Deploys Request"}}),"\n",(0,s.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{deployments:{items:{properties:{autoScaling:{allOf:[{properties:{cpuThreshold:{description:"CPU usage threshold for scaling (as a percentage)",type:"integer"},maxReplicas:{description:"Maximum number of replicas to run",type:"integer"},minReplicas:{description:"Minimum number of replicas to run",type:"integer"}},type:"object"}],description:"Optional: Auto-scaling rules"},definitionId:{description:"DefinitionId is the id of the definition",example:"def_deBXZMpxrQ",type:"string"},description:{description:"Description of what this deployment does",example:"Handles user service requests",type:"string"},details:{description:'Details provides additional information about the deployment\'s current state,\nincluding both success and failure conditions (e.g., "Deployment in progress", "Error pulling image").',example:"Deployment is in progress",type:"string"},envars:{additionalProperties:{type:"string"},description:"Envars is a map of environment variables that will be passed down to service instances (see Registry Svc Instance)\nAlso see the Registry Svc Definition for required envars.",type:"object"},id:{description:'ID of the deployment (e.g., "depl_dbOdi5eLQK")',example:"depl_dbOdi5eLQK",type:"string"},name:{description:'Short name for easy reference (e.g., "user-service-v2")',example:"user-service-v2",type:"string"},replicas:{description:"Number of container instances to run",type:"integer"},resources:{allOf:[{properties:{cpu:{description:'CPU limit, e.g., "500m" for 0.5 cores',type:"string"},memory:{description:'Memory limit, e.g., "128Mi"',type:"string"},vram:{description:'Optional: GPU VRAM requirement, e.g., "48GB"',type:"string"}},type:"object"}],description:"Resource requirements for each replica"},status:{allOf:[{enum:["OK","Error","Pending","Failed","Deploying"],type:"string","x-enum-varnames":["DeploymentStatusOK","DeploymentStatusError","DeploymentStatusPending","DeploymentStatusFailed","DeploymentStatusDeploying"]}],description:'Current status of the deployment (e.g., "OK", "Error", "Pending")',example:"OK"},strategy:{allOf:[{properties:{maxSurge:{description:"Max extra replicas during update",type:"integer"},maxUnavailable:{description:"Max unavailable replicas during update",type:"integer"},type:{allOf:[{enum:["RollingUpdate","Recreate"],type:"string","x-enum-varnames":["StrategyRollingUpdate","StrategyRecreate"]}],description:"Deployment strategy type (RollingUpdate, Recreate, etc.)"}},type:"object"}],description:"Deployment strategy (e.g., rolling update)"},targetRegions:{description:"Target deployment regions or clusters",items:{properties:{cluster:{description:'Cluster or node where service should be deployed (e.g., "us-west1", "local-docker")',type:"string"},zone:{description:"Optional: Specific zone for the deployment",type:"string"}},type:"object"},type:"array"}},required:["definitionId","id"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function b(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(v,{...e})}):v(e)}}}]);
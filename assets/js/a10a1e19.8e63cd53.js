"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[540],{90301:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>v,contentTitle:()=>k,default:()=>w,frontMatter:()=>g,metadata:()=>n,toc:()=>b});const n=JSON.parse('{"id":"1backend-api/register","title":"Register","description":"Register a new user with a name, email, and password.","source":"@site/docs/1backend-api/register.api.mdx","sourceDirName":"1backend-api","slug":"/1backend-api/register","permalink":"/docs/1backend-api/register","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"register","title":"Register","description":"Register a new user with a name, email, and password.","sidebar_label":"Register","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend-api/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Refresh Token","permalink":"/docs/1backend-api/refresh-token"},"next":{"title":"Read Self","permalink":"/docs/1backend-api/read-self"}}');var s=i(74848),a=i(28453),r=i(53746),o=i.n(r),d=i(56518),c=i.n(d),p=i(99972),u=i.n(p),l=i(25342),h=i.n(l),m=(i(44215),i(82223),i(24861));const g={id:"register",title:"Register",description:"Register a new user with a name, email, and password.",sidebar_label:"Register",hide_title:!0,hide_table_of_contents:!0,api:"eJztWN1u3LYSfpUBb44NaLVO0zbAXtVJndZNEAf+QVFEhpcrzUq0KVLhz250Fgv0IfqEfZKDIaVd2aukJ7k4V8c31pKc4cx888sNK9DmRjROaMVm7BJLYR0a4KBwDd6igbVwFf3mNSaANRcyAa4KaLi1a22KlCVMN2g48Tgv2IyZjgtLmMGPHq17qYuWzTYs18qhcvTJm0aKPBBN7y3dvmE2r7Dm9NUYYukE2u4s/cNPvG4kshnzisQpWMJc29CCdUaokm2TcAXP3SGTiquCiDdPdP41rIOw4CqERnK31KYGqXMuwSvx0SOIApUTS4EmzdQ5prCuhMRAMBfFHPQSOFyvhSPbdRIQx7mLa2mu66mr8F7jPAlkKy49wlpICQsErWQL8+5AmqnX2kRTR0tXWqHd30Zr4UdgMt9xoTXLa0wzdV0JC0uBsoBaWydbwE/COgtLbaAQtpG8hcabRlu0aaYydRaNGwWzM8jYvcZn32UMjp4teP6Aqgj+QIY/TiBjUVra75R8vH2v8ad7jbbQNReKDEBHg1LHLBlgGfmMQSmKQ7SuKzwEJSE88gpyrsgOHG4u336jUgd4PVLQyK/U7YDdmJ69zx1q+773Rr0M6PaudYRpmZIk4c6M0WfwkvjZXZuxUWkORdjGQBUGCzb7QHYfCHW7O64X95g7krjAlchDLB0oQ6Yc3ejzxYiW3U6vJSGSjhnKSl8ekl9JX1KwBdgnSyNQFbLtveRIKCuKGBzPXnaY98odD5wohEYIK7qfovCyswkUHsFpEM5CjsoZLsFoyhnqUc6g3LCEVnsDjdFkK6i4BaVJo8CeA6mQwL23Dgo0YoUgHCyNrgOnGPPagBW1kHzMCk+wCiY5hGgbQBpN7ZcxJbMhH2c8Bsa20crGfPndycmhrS/esORbs7jTD6hGknvuxGokL5+GdQhUNnp+Z2/KaOCbidOTgjuCgawfhEgz9XuFCnhwon/ZiFNecVWi/fvPvzokwyq3VpSqRuUS0KbkSvw78MhUbjCqNDyCLk///vMvLmXMpUKVvXDcINTcPGABQkV90kw9VoDOGPQ2uBNBCVKXQiVdKenpuuOZchUn91khLBAVGCTPky0YXBq0FRZwtEBiE1haJ6Q8Dpc8YOOCsy29cRWankKoMlNHXkm0FuYXL++uL96cvbs7vbm+uLs8e315dvXr3cXr13MKJYuOzERukYCWxQ6FmGD3MghV4FIo4VC26TGl3P/D9k+wWUSYS27dZb926uaxWB+H2k53BkApwVDqiEKQIbH4DLRppo5uvh5boXal0+JXIL3PSwutJXJF6flzbVqia+Gwblw72rARamSD0apRoMQv7fZ16LBLiHvB84JOoURYq3NB14W2tm+UhIJc1wuhgvvEjvftY4B6gwRPcDpTBTo0tVAIYvn4kiF0sVWW6Cx4C43xitqXjgkZerTO4adGGLSfUTq2RQfLTzxq3Ch0CJyoh3ZZc7vHeWcS26sK/52mo4rsUv4TSXZ4AAUqFvDb79e7+7h3FRXlnJJE3w8EULR38NGjaUMQVwg3tHO1ytNM/aF9wGiFRixbqqre9scav5AihwdsgTuYT4nhxK7yadyYPGA7D/3i9VC7UKQ5/HZ18Q5iXY2eESLVghQPOMvUBDKmvcjYbC/r+c/7Ds1bc1e8+v7Nix9eLZofM3bckUj/iITq+J7IoXWTKKX05eRkT2Y0kXGQwjrqlygl2gSszyvgdpYpgEm4NWo4o4+MHSxrU8422pRRtHfvfn71y7Y7O4ajb4ovxCjRnY855ZNeZR/pu8gd+noSG8/oM8M7dzeM9Dkjnc82Yd+P9S7nasWlKAKg397FoDHajOs6JskP45I4mjkkXKFZoYGzwPN/IxIt8tISHn30kF1rdJWm4b3RoTdsuKvYjO1DZTDU2yA1sdgwbyQdm4ZxudLWzZ49e/78Bdve0rncG+HaK5I7ivoSuUFz6on5QVZoG4SsO5IxWGop9RoLWLSUKBqeYxx9Q4DyvGvOd81zrw68pQoNqIpGC+UoMQniXyEvgvxxRGEkhTZd97D3et6IN9gG65HhL/cvGGd9YeteJAbPEINXh/6dYT/YUsIeHwX3k99uOBtUtR7IncS73/tZar8Wh6NhnVBL3T+6dLKF+YIOcYn2J8qPXnJndJhhB5Z5fw5Xvmm0CcEXIK6ca2bTaT82Bz3YwZRxej6hIrpCqEVuNHmKyNHuRySWMClyVDaYsb/vl/dvYfU8PXl0m51Np+v1Oi2VT7Uppx2dnfKykZPn6UlauVqGMoOmthfLq3jbXli75mWJJhV6Go5MCWXhAjr9LMgSRs4cxT9JX6Q/hmFVW1dzNZDxcu//j1QePGp98/NZ53kOP7lpI7kI3VQwxKYLxA+71B3mtk6U24RRyNH2ZrPgFm+M3G5pOVRJNvtwm7AVN4IvSOcPt9ukjwKK3Qds2Yy9iuJPKPzIGPRUEsLgSQLaJj3FaZ5j4754dphR3l9cXbOELbo3wFoXRGP4mlThazZj4QWRqEOOCGsbJrkqPS/pbORJf/8Bo4Q+ZQ==",sidebar_class_name:"post api-method",info_path:"docs/1backend-api/1-backend",custom_edit_url:null},k=void 0,v={},b=[];function R(e){const t={p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Register"}),"\n",(0,s.jsx)(o(),{method:"post",path:"/user-svc/register",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Register a new user with a name, email, and password."}),"\n",(0,s.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(c(),{parameters:void 0}),"\n",(0,s.jsx)(u(),{title:"Body",body:{content:{"application/json":{schema:{properties:{app:{example:"unnamed",type:"string"},contact:{properties:{handle:{description:'Handle is the platform local unique identifier.\nIe. while the `id` of a Twitter contact is `twitter.com/thejoe`, the value will be only `thejoe`.\nFor email and phones the `id` and the `value` will be the same.\nThis field mostly exists for display purposes.\n\nExample values: "joe12" (1backend username), "thejoe" (twitter username), "joe@joesdomain.com" (email)',example:"thejoe",type:"string"},id:{description:'The unique identifier, which can be a URL.\n\nExample values: "joe12" (1backend username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)',example:"twitter.com/thejoe",type:"string"},platform:{description:'Platform of the contact (e.g., "email", "phone", "twitter")',example:"twitter",type:"string"}},required:["id","platform"],type:"object"},device:{type:"string"},name:{type:"string"},password:{description:"Password of the user.",type:"string"},slug:{description:"Slug is a URL-friendly unique (inside the 1Backend platform) identifier for the `user`.\nRequired due to its central role in the platform.\nIf your project has no use for a slug, just derive it from the email or similar.",type:"string"}},required:["slug"],type:"object"}}},description:"Register Request",required:!0}}),"\n",(0,s.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{token:{properties:{active:{description:"Active tokens contain the most up-to-date information.\nWhen a user's role changes\u2014due to role assignment, organization\ncreation/assignment, etc.\u2014all existing tokens are marked inactive.\nActive tokens are reused during login, while inactive tokens\nthat have been recently refreshed (being used still) are kept for further refreshing\n(unless `OB_TOKEN_AUTO_REFRESH_OFF` is set to true, old tokens can be refreshed indefinitely.)\n\nActive tokens contain the most up-to-date information.\nWhen a user's role changes\u2014due to role assignment, organization\ncreation/assignment, etc.\u2014all existing tokens are marked inactive.\nActive tokens are reused during login, while inactive tokens\nthat have been recently refreshed (see `lastRefreshedAt` field) and are still in use are retained for further refreshing.\n(Unless `OB_TOKEN_AUTO_REFRESH_OFF` is set to true, in which case old tokens can be refreshed indefinitely.)",type:"boolean"},app:{example:"unnamed,omitempty",type:"string"},createdAt:{type:"string"},deletedAt:{type:"string"},device:{description:"The device the token is associated with.\nThis in combination with LastRefreshedAt can be used to\ndetermine if the token is still in use, and lets us prune unused tokens.",type:"string"},expiresAt:{type:"string"},id:{type:"string"},lastRefreshedAt:{description:"The last time the token was refreshed.\nThis is used to determine if the token is still in use.",type:"string"},token:{description:'Token is a signed JWT used to authenticate the user without querying the User Svc.\nYou can verify it using the public key at `/user-svc/public-key`.\n\nThe token is just a JSON object with fields like:\n- "oui": the user ID (e.g., "usr_dC4K75Cbp6")\n- "olu": the user slug (e.g., "test-user-slug-0")\n- "oro": a list of roles, such as:\n  - "user-svc:user"\n  - "user-svc:org:{org_dC4K7NNDCG}:user"',type:"string"},updatedAt:{type:"string"},userId:{type:"string"}},required:["createdAt","device","expiresAt","id","token","updatedAt","userId"],type:"object"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function w(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(R,{...e})}):R(e)}}}]);
"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>h,contentTitle:()=>b,default:()=>T,frontMatter:()=>u,metadata:()=>i,toc:()=>f});const i=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var r=o(74848),n=o(28453),s=o(53746),a=o.n(s),p=o(56518),c=o.n(p),l=o(99972),d=o.n(l),m=o(25342),g=o.n(m),y=(o(44215),o(82223),o(24861));const u={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},b=void 0,h={},f=[];function D(e){const t={code:"code",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,r.jsx)(a(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,r.jsxs)(t.p,{children:["Requires ",(0,r.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,r.jsx)(c(),{parameters:void 0}),"\n",(0,r.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,r.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function T(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(D,{...e})}):D(e)}}}]);
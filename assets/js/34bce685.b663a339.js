"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[39],{77863:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>b,contentTitle:()=>u,default:()=>x,frontMatter:()=>h,metadata:()=>r,toc:()=>f});const r=JSON.parse('{"id":"1backend/prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","source":"@site/docs/1backend/prompt.api.mdx","sourceDirName":"1backend","slug":"/1backend/prompt","permalink":"/docs/1backend/prompt","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","sidebar_label":"Prompt an AI","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Upsert an Instance","permalink":"/docs/1backend/upsert-instance"},"next":{"title":"List Prompts","permalink":"/docs/1backend/list-prompts"}}');var s=i(74848),n=i(28453),o=i(53746),p=i.n(o),a=i(56518),d=i.n(a),c=i(99972),m=i.n(c),l=i(25342),g=i.n(l),y=(i(44215),i(82223),i(24861));const h={id:"prompt",title:"Prompt an AI",description:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.",sidebar_label:"Prompt an AI",hide_title:!0,hide_table_of_contents:!0,api:"eJztPGtz2ziSfwXFL5O4KFlJdu52XXW157xmdJNMvJazU3VRSobIFokxCTAAKFnj8n+/6gb4kiDH2dnbR5W+JDLRaDQa3Y1+kXdRCibRorJCyegsmoFMDeOs0qqsLOMyZRsurGErpRlnGkylpAEmVsxsZcKEYVbXMGbT7sGKFwZixtPUMJtDg8sq+utLDTUQYg221tIwUZaQCm6h2I7nci4vCN6whEu2BFYbSGn5awu3dmTVCP+/jru/RckzwAf0o/8El1E2B83stgLD1IplIEFz3O54LqcrJhUrVQoFm75G4k0FiVgJSGOiNoUVrwvrQTaiKFqSnhgAdv2eBmbr5JpoTMFyUZinY3a1N7vkW6Y0/SeVZaauKqUtLaPhSw3GQtojj0gmhpycOJYImTFcz5yczOWInZz8KLJ89A7WULALrnkJFrQ5OTljHw0YVmlIYSUkpKxqR5mGAtZc0nk8goNgE9yLMLQJxpfGap5Yw/iGb4n2Wqagiy0SBzITEtgTGGfjmL17x9+fx2xm+bIA9lqsVrURSj6lU1mppEYilWSrWia4YV4IixKAO3tDmEYzdxpJaHvXbrVu5Bq3lAoNiS22/iC3jEt2PvWUxQxuK2WQVF4UjK+5KIi4Hn/wFJFpI1sj5xIlrVZFcw6gS2FwF4ZdwpdaaEjPTk7YtZPxkVknZ+7nWaKBW7iO4khV/kSnaXQWueEojvyZv1TpNjq7i3AhkBZ/8qoqREJTTn81qJd3kUlyKDn+qjQitAIM/rXLBJpfFB9W0dmnXdii4CV/VVVD6CGMhbIquAX8PTQNV34ElahT6zH7ULnDIxuAgl1pMCAtE/Y7w1LQYo0KrFVJwltM03EUR3DLy6qA6Cz6NP15dvX5zqG7/3RKf0ZxhOIfnUXGaiGz6P6+faKWv0Jio/s4MiRarWQFdnNrn0/L7CGm8GLDt0bJhdure5amwm3qYohuSFKAoiW3Sb4w4jfowQtpIQON48kqW5iEF/1hWZdLP6rKEuTvpSEFqQQK+cJYDTKzeXCxVBjk3gJureYLCXaj9E1/iaVSBXBJsGohlV0YvoZFpkX6dShDx3sAHUhaOdcHhi0PUrwS2tiKG7Mg6xTkhoPJuYFFDiLLbfgcemAbkQ441IdSOoGF5eZmMdhzt9xDa+R6keSQ3FRKSLuQvAxTnOuFhIxbsYaFNw4HwB4e1YBit7g9SIwH2B4EcGemHyT1sPDSYA5pXYA+OBsSJdMFnaGxUJmDtNQVrRTGJORK4dUVHJQLYQfzeogfw2i1Bq1FCgsDFq/c36mNe+jwHKzSsOArC3rDdXpASx6gUdO93pevB8HMRqBZ4jZ4cA09K54cUlizSPJay+B0syiFXNQST/YAANqjsNCYhS357cEhcWBJL6hCpnAb3PlXRZmMFJmRQ1t+UJbdZbHg2omHsFA+KA9ca77tTTxMF0Aall0caXQYb9PFAaO1B7c5BCfThzlwWEGN3Xrj/g07r5cPbM4NPnxjWVEg7iCxB634vk5+jvc8m1tyh4kZPV8wNPkR6Fp38xT9pZXSJXsC2Zi9Q/cr5A+bxsvtLx1H7soZ4p6mFHKR2y2+1IBRy9Af2/ec4qjkt5dgtbdZQ4zv27Eu9mG52rCSyy2zogS3ntkaCyUzuaoLit30tosTNzlIJiy7AagMA60VLj3w855N4sC5l84jDJDlBnC3v9bGRUnPXvLkBmTKEIGWvOjtnhANHcu8zjIhMzRrp1c5vCzUDZyWAgOYYvSfy5GQxuo6saP1ZPx8/JcXi58Ws3GW1asQC6tHedh4KV2paeOd7HiayF97iX79/n7PC9oSXk6MIivVRjCpKEG6mMNHVvPo2X+c/Wke0a+zZ/PoafDYyRmdeV90uNzPpFTIPGcBcD0fegKrQDOa28PaO7PWv5z1lHWI/pWLmowTpDrJ2Zpr4cJaYfD8tErrBPAovdqVKkUdIBjTW7hTf+c1fiTHwNuB4aq/5OBifcUwhNqy8+loyTFWr5tJPcQ944E66i7HIcIPta1qy9wwRYYoag2fUk/5k0pmMfu1ymK2gWXlYubwiWS1SLlMYNZ4UcP1flQblhTKQOFCa+XW9zq3UkWhNmFd77lhD3ikjftz0XoWO0LIGohe0qYRw03OW1KWwPhaidQdIFJErAjuWdbl1PoIOGB/OkkkkRuKYlgAqwPkXxFnRMn1tqEfz6xJqcisR+lcvnbJGdMkpqyqRgXlUvxc4cLZ1iq6fNFS2ZxxTRxaEweebHKR5PuseYopJMyHCShSZvmNy8kkkIJMwrz6UlMS5AIj6MAG3XPmoVjjUbYJF7WJ2XtIRV3GDHNDMftYWM3DsujdvreN13dQl0DmKLNsxRPBiybFRazFBJbG/GBYrwY+1E6i0XPVXy5os/GASrC5Sl2CLa2R1H7CLrSNxqfY0VyflGA4TKRqqMjmiKWgPFOTrTBgY8xscpmq0oELQwSEha/1ig4aVLkCjSfMCJQWd4YiuJOgVzXE/U4Yi5i5tsJYkTAHyJw9Kp3KkMVDvI/3yFqfacfHIGL7tw4BUtrOWRdU+krcAiY6AzsJhUHuZrzyQdu/bc7p/8P945lUdKydjzGey48GcMsGWC6ynHnL1OUpyeXaqpqlSn5nWYImiS9V7VwlntiaF23aU8liO5c4MEi2OsJs3/2Nvaw2fz9Ft86bOjN+yPpeeKvpNLoEYxCPsAaKFcN15tEvOcfz4WzJJZf8z4MzCQzuK/tWJgFbgoWHFM+c2EJ2qylgpGmTXG8MNNYznCxzmbFaWlE41lTtBlIlgcEtJDXa1zF7uW1T+T1A8kszsIbhJa0k4664MZeIHQGTQqBQUtmAoDHMSbRYEn85u8o18JShH8XL8Vy+VZp9qUVyQ/SlQqORdxuVGfpSsAbtZFytLEjvngM3wpnqFK8yuhKQU7lWUtWGyipTvKaVAZZwTJ7jNUJsw8sPCzhB+22JvpB7fuVHmuPuHHE3pwsNllAoJMiq8Vy+IoaYIR8GXCBbhpUVkmJpNt6f8+jiuVSaqPcp9zFu9LrZhi9TLQuV3FCWnxAE7o17l3/H/H109qmR6c/7+n6/p95pyryoXzrBivq4kAp3uVKhjOzb88kkcEP9FMV/a9K/U8FDgYirPqTnAT191Qw1Z4dCNDSwjKYfunGPJYdjyeFYcjiWHI4lh2PJ4VhyOJYcjiWHf+2Sw6uq+oaqAyXv912xN/iYWcwBco1xhM/OeIfRB0tKxpg243Ib9Bz/fhWNght7WctArsQNhHxbnNPQq+uwb3uslBwrJcdKybFScqyUHCslx0rJsVJyrJT8syolB7zWY7Hk0cUSX/d475BPw9mkJlH9FahavlK1DGzk0o80W5GtdncOceP6ckPesCCLRVwj/9ccUHFu6x0XEmRdYrq+sZZpRKRJpJJSmVUBlp4SYvrFl2ivJP1O0DrjtM+77Iqj2xFiH625xkDZ4DLukGZEyKy3ZP/5Zbt8/+mrHin9529asvpPz3skDrC05O7rjoPYjZSOJbJvLJEdK2SHKmTNg5D+0b03uvIvD9FVFUd/FQat6F9QkDB6OSfMTjdeq6TGMkN4tEHkosHYow89+KtIQUVx9JFSfz49ytw1/EPrM/RQNhP+F7QazXJlPfCrghvTRlEDgA90XbHXYCHZwfbidZ+Y7i/2FritNbA3t/R2lJv1E2wpTxpE5ZkW5ofm0hQNZbO6LLkWv/W3NtzsW1EUo/fc3PTwzyqAJO89OK9TgZw4r60qOd6gDoRdQqIyKTwuAhvCp0Lt8+sSMCOuE6BjfQdcezN4qZbKigSN+g+aVzl7z5Mc3wprYb7F+F5tKyAWX3VeUdwbc0LXcLHPxA6mEb6Hoa56CYl4b/XDA42EdQMD4SSowWntLrmPAGURRZHm7nF+H85JbF/KdtcgUd0jPfTUS/JAkDuQRqQfWmvvjL7C94Gwd893xX64zAGOoiZ4Rdglq1WI3YFG0LvnrYq4OUMF6YOlQoXnp0I9cG4D3empTg+iU6LuIamT16ZOmQK55W0FLne0Aq0b7x5vi+v+y5L4Ru2bvVcoKQQfz+WbbMzO8RVO8sRbF86/ADsf2LF5FM8lJ2cdis5ZZ+gi7M8gMZtHlPvBa6au0kOtCh+boeYSpRQu5XR3/EqPJHiP1QZ06Ib+SM/pDU8u5O4tjbPYJld4E5fCYhLrwZz0YztK9o7LhwIDMprMwbArg7LvuFtylHyLB1tuXfLE+3DjuaTXdYVMijqFZltxiwRubcycd91/QZoboxJBGEuwPOWWjwMBwqObTgJl8gKmaSBof+sGmHtZ2RGMwIxby5Oc2hMGYVLOzbeF767u0EVPpckWUM4+XBS/fP9HFawD+IaAcBEWHakDkXsoMr91p4sXZZOD9ztxkd6PIqac4Xcox3+eR0Fn7OuO5hD3MIy3uaYdw5uPv5xnQS3pq+G36pBXT5Huac9GKwsDupwPfz5tHph+7k8YBmVlQ+WjHQUTGC21XHmEnl023y5omD/QuPbLBhTg0xvqogDTaFNLXaWquiAtwTQBedO9VjuvZIY9uaavIfwX+dzXT/2meQA0Hi5P9rJNmPqUcaebc9nmClKQ1tWgli4Hfr0Xy183x+FDgdk6Gbtf18zxiSlMv/U7v3zkiumLQFIHn/0h1M42lWteiJT9z+zDz397Y1tbfPx6eslR8iwgkpLXNlda/OZi/n8IJd+HeeKLbzPQGJVS9P8PIonyvUmthd2SpX4JXIM+rzGN+YmcBsuznqONn7BALXJpZfxOgaLOxorjjOi0+8DBafsFA0PbMoS/1gWCnRYq4UWujD37/o/PXzwjPWwIwRxK6fbSJ2fPoKH/Mvcg88hXc5ycc2Yqnrjvh1h1A5LxxNmEzstBm4TbYe9UJiQDmZLPSlcG4s+Bp4Dn4DoiMCIicWkcteb2qMRPsCX24slcdp9reNOY1fDnF8I9j13q9kBONdxcOGgn3Gsb3Gn/mwy6/SaD7r4DXXqTw1157pbb78Pbf9523rmhXq+df4CX6STQTddFgIEmukmoZ26y1yLX4ehNDDXC9QAD/W+D0eDDrtttstPcNgn0sg2mdicybFkbAu13qk12GtM6+K4frXvWtKFNAl1nHVSo2ezRTWPuPPeRhrrD9kd7TWGTvSYwh7pt+5rstnlNem1dk66Na9K1bU322rQ6Eg4dzqApy5MQOp9B99Wn5vnnne6qHjwV2ybhHqrQ441/3OuQ8uS0otBUvQbLNy1Ok1BH06TrYHLIGi2iC2KoPf3WF2xBaRtOfld7SLVjBAddH4M+j46SXjfGJNhEMQm0OLj9Nf0JHbKdRoLJwEzslvl7ujSsxU9CQr9Tg+7Le79g/JBUtUf34CG3p7ZbHfz6pdKrQYWKRq5a4OOZNsTY6XuN/OeJeEKLQskFXvaGF2D+G08GPWKt5DhRZe9avZiymfvGVRR7/yC3tjo7PX22dO1JOOE02n/FAlvBnGfr25hSLOipinKNba0Qfe9SJNiNptciAeNbWM6nrOdWUahYiASk6wdtqPvh4h1bvxhPBrSZs9PTzWYzzmQ9Vjo79fPMKc+qYvRiPBnntixcrKdL82E1c0t3WzMbnmWgx0KdEsgpOhTCUhDWdGVFcYR+k9vsZPxiPBnpZPz8T1QwVMaWXPYovWg+xcbOp9EOq3qfjTp+uu346bbjp9v+zp9u86EA8hp7FATV/Mhc3PnIqMn04fwo7qX9MAbC4bs7tEofdXF/j4+/1KAxIvscR9Tot0TL8OkztaNRWILB1A1sfWsgSDvCeAhNBi9qF5fshIz3cTPjPEmAIrPDsP0Q7+LD7AqvW/8FOpSS6CzSfINXGN9EZxF9va5tR6Nnd1HBZVY7993hxEuG14NeaF4JJClufuCumiG57VG4G3y5jeC/uK3glLs7F5rd37fwbujgjDbic9B4jJ/v7+//Dx6LYvs=",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},u=void 0,b={},f=[];function P(e){const t={code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"Prompt an AI"}),"\n",(0,s.jsx)(p(),{method:"post",path:"/prompt-svc/prompt",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately."}),"\n",(0,s.jsxs)(t.p,{children:["Prompts can be used for ",(0,s.jsx)(t.code,{children:"text-to-text"}),", ",(0,s.jsx)(t.code,{children:"text-to-image"}),", ",(0,s.jsx)(t.code,{children:"image-to-image"}),", and other types of generation.\nIf no model ID is specified, the default model will be used (see ",(0,s.jsx)(t.code,{children:"Model Svc"})," for details). The default model may or may not support the requested generation type."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prompting Modes"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"High-Level Parameters"}),": Uses predefined parameters relevant to ",(0,s.jsx)(t.code,{children:"text-to-image"}),", ",(0,s.jsx)(t.code,{children:"image-to-image"}),", etc. This mode abstracts away the underlying engine (e.g., LLaMA, Stable Diffusion) and focuses on functionality."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Engine-Specific Parameters"}),": Uses ",(0,s.jsx)(t.code,{children:"engineParameters"})," to directly specify an AI engine, exposing all available parameters for fine-tuned control."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Permissions Required:"})," ",(0,s.jsx)(t.code,{children:"prompt-svc:prompt:create"})]}),"\n",(0,s.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(d(),{parameters:void 0}),"\n",(0,s.jsx)(m(),{title:"Body",body:{content:{"application/json":{schema:{properties:{engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) specific parameters"},id:{description:"Id is the unique ID of the prompt.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things synchronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}},required:["prompt"],type:"object"}}},description:"Add Prompt Request",required:!0}}),"\n",(0,s.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{prompt:{allOf:[{properties:{createdAt:{description:"CreatedAt is the time of the prompt creation.",type:"string"},engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) specific parameters"},error:{description:"Error that arose during prompt execution, if any.",type:"string"},id:{description:"Id is the unique ID of the prompt.",type:"string"},lastRun:{description:"LastRun is the time of the last prompt run.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},requestMessageId:{type:"string"},responseMessageId:{type:"string"},runCount:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"},status:{allOf:[{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}],description:"Status of the prompt."},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"},type:{allOf:[{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]}],description:'Type is inferred from the `Parameters` or `EngineParameters` field.\nEg. A LLamaCpp prompt will be "Text-to-Text",\na Stabel Diffusion one will be "Text-to-Image" etc.'},updatedAt:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"},userId:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}},required:["prompt"],type:"object"}],description:"Prompt contains the details of the prompt that was just created by this request.\nThis includes the ID, prompt text, status, and other associated metadata."},responseMessage:{allOf:[{properties:{createdAt:{type:"string"},fileIds:{description:"FileIds defines the file attachments the message has.",items:{type:"string"},type:"array"},id:{example:"msg_emSOPlW58o",type:"string"},meta:{additionalProperties:!0,type:"object"},text:{description:'Text content of the message eg. "Hi, what\'s up?"',type:"string"},threadId:{description:"ThreadId of the message.",example:"thr_emSOeEUWAg",type:"string"},updatedAt:{type:"string"},userId:{description:"UserId is the id of the user who wrote the message.\nFor AI messages this field is empty.",type:"string"}},required:["id","threadId"],type:"object"}],description:"Response message contains the response text and files.\nThis field is populated only for synchronous prompts (`sync = true`).\nFor asynchronous prompts, the response will provided in the associated\nmessage identified by the `responseMessageId` of the `promptSvc.prompt` object once the prompt completes."}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function x(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(P,{...e})}):P(e)}}}]);
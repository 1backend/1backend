"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[540],{99344:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>f,default:()=>R,frontMatter:()=>m,metadata:()=>i,toc:()=>C});const i=JSON.parse('{"id":"1backend-api/register","title":"Register","description":"Register a new user with a name, email, and password.","source":"@site/docs/1backend-api/register.api.mdx","sourceDirName":"1backend-api","slug":"/1backend-api/register","permalink":"/docs/1backend-api/register","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"register","title":"Register","description":"Register a new user with a name, email, and password.","sidebar_label":"Register","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend-api/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Refresh Token","permalink":"/docs/1backend-api/refresh-token"},"next":{"title":"Read Self","permalink":"/docs/1backend-api/read-self"}}');var s=n(74848),r=n(28453),a=n(57742),o=n.n(a),d=n(78178),c=n.n(d),p=n(19624),l=n.n(p),h=n(96226),u=n.n(h),g=(n(77675),n(19365),n(51107));const m={id:"register",title:"Register",description:"Register a new user with a name, email, and password.",sidebar_label:"Register",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend-api/1-backend",custom_edit_url:null},f=void 0,k={},C=[];function b(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"Register"}),"\n",(0,s.jsx)(o(),{method:"post",path:"/user-svc/register",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Register a new user with a name, email, and password."}),"\n",(0,s.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(c(),{parameters:void 0}),"\n",(0,s.jsx)(l(),{title:"Body",body:{content:{"application/json":{schema:{properties:{app:{example:"unnamed",type:"string"},contact:{properties:{handle:{description:'Handle is the platform local unique identifier.\nIe. while the `id` of a Twitter contact is `twitter.com/thejoe`, the value will be only `thejoe`.\nFor email and phones the `id` and the `value` will be the same.\nThis field mostly exists for display purposes.\n\nExample values: "joe12" (1backend username), "thejoe" (twitter username), "joe@joesdomain.com" (email)',example:"thejoe",type:"string"},id:{description:'The unique identifier, which can be a URL.\n\nExample values: "joe12" (1backend username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)',example:"twitter.com/thejoe",type:"string"},platform:{description:'Platform of the contact (e.g., "email", "phone", "twitter")',example:"twitter",type:"string"}},required:["id","platform"],type:"object"},device:{type:"string"},name:{type:"string"},password:{description:"Password of the user.",type:"string"},slug:{description:"Slug is a URL-friendly unique (inside the 1Backend platform) identifier for the `user`.\nRequired due to its central role in the platform.\nIf your project has no use for a slug, just derive it from the email or similar.",type:"string"}},required:["slug"],type:"object"}}},description:"Register Request",required:!0}}),"\n",(0,s.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{token:{properties:{active:{description:"Active tokens contain the most up-to-date information.\nWhen a user's role changes\u2014due to role assignment, organization\ncreation/assignment, etc.\u2014all existing tokens are marked inactive.\nActive tokens are reused during login, while inactive tokens\nthat have been recently refreshed (being used still) are kept for further refreshing\n(unless `OB_TOKEN_AUTO_REFRESH_OFF` is set to true, old tokens can be refreshed indefinitely.)\n\nActive tokens contain the most up-to-date information.\nWhen a user's role changes\u2014due to role assignment, organization\ncreation/assignment, etc.\u2014all existing tokens are marked inactive.\nActive tokens are reused during login, while inactive tokens\nthat have been recently refreshed (see `lastRefreshedAt` field) and are still in use are retained for further refreshing.\n(Unless `OB_TOKEN_AUTO_REFRESH_OFF` is set to true, in which case old tokens can be refreshed indefinitely.)",type:"boolean"},app:{example:"unnamed,omitempty",type:"string"},createdAt:{type:"string"},deletedAt:{type:"string"},device:{description:"The device the token is associated with.\nThis in combination with LastRefreshedAt can be used to\ndetermine if the token is still in use, and lets us prune unused tokens.",type:"string"},expiresAt:{type:"string"},id:{type:"string"},lastRefreshedAt:{description:"The last time the token was refreshed.\nThis is used to determine if the token is still in use.",type:"string"},token:{description:'Token is a signed JWT used to authenticate the user without querying the User Svc.\nYou can verify it using the public key at `/user-svc/public-key`.\n\nThe token is just a JSON object with fields like:\n- "oui": the user ID (e.g., "usr_dC4K75Cbp6")\n- "olu": the user slug (e.g., "test-user-slug-0")\n- "oro": a list of roles, such as:\n  - "user-svc:user"\n  - "user-svc:org:{org_dC4K7NNDCG}:user"',type:"string"},updatedAt:{type:"string"},userId:{type:"string"}},required:["createdAt","device","expiresAt","id","token","updatedAt","userId"],type:"object"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function R(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}}}]);
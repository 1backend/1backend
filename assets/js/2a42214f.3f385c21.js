"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>b,contentTitle:()=>h,default:()=>v,frontMatter:()=>g,metadata:()=>i,toc:()=>f});const i=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"eJztWN9v4zYS/lcIPt0CsuwkLXAw0MO5cbowNtukcZKHWwcoTY0lbiiSJSknbuD/vRhKsiRLyQb3cNeHfUkscji/+H2cIV9oAo5bYbzQik7pDXgrYAuOMCKF80RvyGxBjGR+o23uYnKRxuRSspydGxORpWdrCXOx2RROaEXA83ilVuoG/iiEBUd+z3UCcuS2fFormW4FPP1ODNhcOFwV04hqA5ahE4uETimavq5t0ohacEYrB45OX+jpZIL/uo5ffaIR5Vp5UB5nmTFS8KBx/NWhyAt1PIOc4S9j0Z4XpcJDdPghPJQ/ujLM8kx44L6wMDDNiyQoZlJebej0S29eK8+EAvuWEKgts64f24XaCqtVDsqTLbMCU+6I12QNxDDnIMEPnwE5mCH/gDiNI7Ki84v7xfnF8icm5Yp+wFS/EuEj7PqmP8GOCBd0w4AXRLEcUKffGaBT6rwVKqX7iG6ZLKCv7x6H39QYFg6o3B9G9PorcE+bAWYt2+G3yFkKt5Djhg4Yr2fIRltMlfO24F6o9Ch3Qc3roT0CmIFduqzo0ugxzGcYKfPEZbqQCWLeoRjjVjtHLDjPrHdv7Arq6Nu6Zj6rs8jWTsvCQzBHhHIigaOAMF4c2WiZgH2vR73ALbDkSskBmNxUM0SoBFkHjjxl4DMo7WLG0F1UMNJK7lrq11pLYOp9G2y09X3rC+XBKiYJThN4Nhopsd51s9CyKZSHFOyQzYfoSPn5IYtcq41Ii/KYIhYQSoF553fzGSkcSyFGJ/EsuMe0anVtgQsnyuPnCC6wBYl4MbVM2CYHEhpMBs3bUhdmFM06LbevYDZeqRE5JaN/kTsHZEVz9lXbOBdK2xVtjoST0/h0RT+g8NmgcGyY59nxkniyoh8GkogZ27BC+vMm8H6881KmG5LXpHBw7BnRtm1yEIuNSaW+aZMX819/PTbKpFZpIAu69K4Tpw+Ou/ls5AxwsRG8w3zLcvBgXUTEhlTFaC1LgFS+v7tefK8S36vE9yrxd6oS7zgaDmfPK/UDs620Gn28vmtD3MXDMYoEI+olG+E3OIEDb8DPWJ0bT4JUudOYhdmCgEqFAuIKg2nqYg5UkdPpF7pA5I9u4dmPvA7/aUTvhSuYJL8V4EJ8M+WeIHgT0bnmReDv4GytKKilUaV+aOBeJKBpRO8U1yoRqIlJEqbJR1DVDaKlsl7wH7B6tMy0r4TPJXMOz+x6QSNwFVJO5oDNflfb2bztTPNFfgGG9wJy8ewtq1d9gp3RQg2rqpI2nA/LlJO1Z8siz5kVf7ZD6wb7i5By9Jm5x5b+pQHgWWtgViQCMzErvM6ZF5yUIuQGuE6VqHQFsa58InQ/Xzcg1EZbDmFbL4FZVTp/o9faC46Xto+WmYx8ZjxDRB1kHo7PjIg+jxBaoy2ziGeHGLsOAL3dGViUx/Wzv9VV1pq5EnR1FttJbGRq8L0tVRqoEXds/fWJGmHNRAecQaqzW8cm+woQiwjFsLaX+b5cidg2yo5tBKj2XB8arZDcAXIjUkP6LVu9PfpG3jtgb8aPYd8180pGkQkVEY7dOhDieKIGejN+oEi5pkuQtlgi9PD6ROg39q3DnRZ1WhINiZrBQKeKTQ2ZBsrftmmHv13JjpeHAh7ebhKkYfM08tAvgij8w+SkX2XuFCt8pq34E5L//lkGrNV2oLgNlGMc+3HoWehQ9Jdgt2DJRdD5v3FpH1EHvLDC70KH/zMwC3ZWYKv25QE7Bs/ScNh9xjcystxyzHIOPtP4CGa0QyaVvR0dHx7Sxqb1MuZCXC4YKKxEwbHUnMlMOz/98Z+nZyehOak9WWJkZTBtf3pN8M7gnbAUWVHsCaV+KvslRpxhHAhTeKN4BEUYLxFDNlbnoZO4c2AxIHKpU6EIqCQcHKGdQP0ZsARwI8oGBstSwEvNlhqURnyCEpXImcPNiIedg5wJjNgxCe7fTqi0kMxbrWKu85bu6wVZlv0MjaokZd6b6Xh8smb8EVSCC8bl1aydhdlipJgXWyC5wM4X7FZwcIfnUAxHCg7KhSastvfx+pJsz+JJx5qbjsdPT09xqopY23RcrXNjlho5OosnceZzGQgJNndXm2VprXHWPbE0BRsLPQ4iY8yT8BJFTn4uA6Et+tNJfBZPRpbHZ5OyLXY+Z6rlaegG2++snfBfGpb8/96FKyB4ePaIe6EwkpDV+tbzhR5UIVvaBxZyAAVeXtbMwZ2V+z0O/1GARUo+4AW0vFAGRkY1LJFM4aJLZ5yDQdhUN9X+abFvU/b6anlLI8oqTjUoRm1R/QPV11Nq11J+zILSB/y7j15Z8vJScmS/P8iXU6+uOFCvlMaMPuz3+78Ah1V02g==","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var n=o(74848),s=o(28453),a=o(53746),r=o.n(a),p=o(56518),c=o.n(p),l=o(99972),d=o.n(l),m=o(25342),u=o.n(m),y=(o(44215),o(82223),o(24861));const g={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},h=void 0,b={},f=[];function T(e){const t={code:"code",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,n.jsx)(r(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,n.jsxs)(t.p,{children:["Requires ",(0,n.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,n.jsx)(c(),{parameters:void 0}),"\n",(0,n.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function v(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(T,{...e})}):T(e)}}}]);
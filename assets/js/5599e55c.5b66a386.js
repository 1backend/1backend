"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[5745],{69903:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>f,default:()=>b,frontMatter:()=>u,metadata:()=>i,toc:()=>R});const i=JSON.parse('{"id":"1backend/list-deployments","title":"List Deployments","description":"Retrieve a list of deployments.","source":"@site/docs/1backend/list-deployments.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-deployments","permalink":"/docs/1backend/list-deployments","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-deployments","title":"List Deployments","description":"Retrieve a list of deployments.","sidebar_label":"List Deployments","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Save Deployment","permalink":"/docs/1backend/save-deployment"},"next":{"title":"Send an Email","permalink":"/docs/1backend/send-email"}}');var n=s(74848),o=s(28453),r=s(53746),p=s.n(r),a=s(56518),d=s.n(a),l=s(99972),c=s.n(l),y=s(25342),m=s.n(y),g=(s(44215),s(82223),s(24861));const u={id:"list-deployments",title:"List Deployments",description:"Retrieve a list of deployments.",sidebar_label:"List Deployments",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},f=void 0,h={},R=[];function k(e){const t={p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"List Deployments"}),"\n",(0,n.jsx)(p(),{method:"post",path:"/deploy-svc/deployments",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieve a list of deployments."}),"\n",(0,n.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(d(),{parameters:void 0}),"\n",(0,n.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{type:"object"}}},description:"List Deploys Request"}}),"\n",(0,n.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{deployments:{items:{properties:{autoScaling:{allOf:[{properties:{cpuThreshold:{description:"CPU usage threshold for scaling (as a percentage)",type:"integer"},maxReplicas:{description:"Maximum number of replicas to run",type:"integer"},minReplicas:{description:"Minimum number of replicas to run",type:"integer"}},type:"object"}],description:"Optional: Auto-scaling rules"},definitionId:{description:"DefinitionId is the id of the definition",example:"def_deBXZMpxrQ",type:"string"},description:{description:"Description of what this deployment does",example:"Handles user service requests",type:"string"},details:{description:'Details provides additional information about the deployment\'s current state,\nincluding both success and failure conditions (e.g., "Deployment in progress", "Error pulling image").',example:"Deployment is in progress",type:"string"},envars:{additionalProperties:{type:"string"},description:"Envars is a map of environment variables that will be passed down to service instances (see Registry Svc Instance)\nAlso see the Registry Svc Definition for required envars.",type:"object"},id:{description:'ID of the deployment (e.g., "depl_dbOdi5eLQK")',example:"depl_dbOdi5eLQK",type:"string"},name:{description:'Short name for easy reference (e.g., "user-service-v2")',example:"user-service-v2",type:"string"},replicas:{description:"Number of container instances to run",type:"integer"},resources:{allOf:[{properties:{cpu:{description:'CPU limit, e.g., "500m" for 0.5 cores',type:"string"},memory:{description:'Memory limit, e.g., "128Mi"',type:"string"},vram:{description:'Optional: GPU VRAM requirement, e.g., "48GB"',type:"string"}},type:"object"}],description:"Resource requirements for each replica"},status:{allOf:[{enum:["OK","Error","Pending","Failed","Deploying"],type:"string","x-enum-varnames":["DeploymentStatusOK","DeploymentStatusError","DeploymentStatusPending","DeploymentStatusFailed","DeploymentStatusDeploying"]}],description:'Current status of the deployment (e.g., "OK", "Error", "Pending")',example:"OK"},strategy:{allOf:[{properties:{maxSurge:{description:"Max extra replicas during update",type:"integer"},maxUnavailable:{description:"Max unavailable replicas during update",type:"integer"},type:{allOf:[{enum:["RollingUpdate","Recreate"],type:"string","x-enum-varnames":["StrategyRollingUpdate","StrategyRecreate"]}],description:"Deployment strategy type (RollingUpdate, Recreate, etc.)"}},type:"object"}],description:"Deployment strategy (e.g., rolling update)"},targetRegions:{description:"Target deployment regions or clusters",items:{properties:{cluster:{description:'Cluster or node where service should be deployed (e.g., "us-west1", "local-docker")',type:"string"},zone:{description:"Optional: Specific zone for the deployment",type:"string"}},type:"object"},type:"array"}},required:["definitionId","id"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function b(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(k,{...e})}):k(e)}}}]);
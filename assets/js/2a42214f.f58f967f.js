"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>I,frontMatter:()=>y,metadata:()=>o,toc:()=>j});const o=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var n=i(74848),r=i(28453),s=i(53746),a=i.n(s),p=i(56518),c=i.n(p),l=i(99972),m=i.n(l),d=i(25342),u=i.n(d),h=(i(44215),i(82223),i(24861));const y={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},g=void 0,f={},j=[];function b(e){const t={code:"code",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,n.jsx)(a(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,n.jsxs)(t.p,{children:["Requires ",(0,n.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,n.jsx)(c(),{parameters:void 0}),"\n",(0,n.jsx)(m(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function I(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(b,{...e})}):b(e)}}}]);
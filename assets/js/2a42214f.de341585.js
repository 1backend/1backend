"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>y,contentTitle:()=>u,default:()=>b,frontMatter:()=>f,metadata:()=>i,toc:()=>T});const i=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var n=o(74848),s=o(28453),r=o(53746),a=o.n(r),p=o(56518),c=o.n(p),l=o(99972),m=o.n(l),d=o(25342),g=o.n(d),h=(o(44215),o(82223),o(24861));const f={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},u=void 0,y={},T=[];function v(e){const t={code:"code",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,n.jsx)(a(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,n.jsxs)(t.p,{children:["Requires ",(0,n.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,n.jsx)(c(),{parameters:void 0}),"\n",(0,n.jsx)(m(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function b(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(v,{...e})}):v(e)}}}]);
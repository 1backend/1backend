"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>T,frontMatter:()=>b,metadata:()=>o,toc:()=>f});const o=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var r=i(74848),s=i(28453),n=i(53746),a=i.n(n),p=i(56518),c=i.n(p),l=i(99972),m=i.n(l),d=i(25342),h=i.n(d),y=(i(44215),i(82223),i(24861));const b={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},u=void 0,g={},f=[];function x(e){const t={code:"code",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,r.jsx)(a(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,r.jsxs)(t.p,{children:["Requires ",(0,r.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,r.jsx)(c(),{parameters:void 0}),"\n",(0,r.jsx)(m(),{title:"Body",body:void 0}),"\n",(0,r.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function T(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}}}]);
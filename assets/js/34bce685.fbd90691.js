"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[39],{77863:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>P,frontMatter:()=>h,metadata:()=>i,toc:()=>b});const i=JSON.parse('{"id":"1backend/prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","source":"@site/docs/1backend/prompt.api.mdx","sourceDirName":"1backend","slug":"/1backend/prompt","permalink":"/docs/1backend/prompt","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","sidebar_label":"Prompt an AI","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Upsert an Instance","permalink":"/docs/1backend/upsert-instance"},"next":{"title":"List Prompts","permalink":"/docs/1backend/list-prompts"}}');var s=r(74848),n=r(28453),o=r(53746),p=r.n(o),a=r(56518),d=r.n(a),m=r(99972),c=r.n(m),l=r(25342),y=r.n(l),g=(r(44215),r(82223),r(24861));const h={id:"prompt",title:"Prompt an AI",description:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.",sidebar_label:"Prompt an AI",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},u=void 0,f={},b=[];function x(e){const t={code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"Prompt an AI"}),"\n",(0,s.jsx)(p(),{method:"post",path:"/prompt-svc/prompt",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately."}),"\n",(0,s.jsxs)(t.p,{children:["Prompts can be used for ",(0,s.jsx)(t.code,{children:"text-to-text"}),", ",(0,s.jsx)(t.code,{children:"text-to-image"}),", ",(0,s.jsx)(t.code,{children:"image-to-image"}),", and other types of generation.\nIf no model ID is specified, the default model will be used (see ",(0,s.jsx)(t.code,{children:"Model Svc"})," for details). The default model may or may not support the requested generation type."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prompting Modes"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"High-Level Parameters"}),": Uses predefined parameters relevant to ",(0,s.jsx)(t.code,{children:"text-to-image"}),", ",(0,s.jsx)(t.code,{children:"image-to-image"}),", etc. This mode abstracts away the underlying engine (e.g., LLaMA, Stable Diffusion) and focuses on functionality."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Engine-Specific Parameters"}),": Uses ",(0,s.jsx)(t.code,{children:"engineParameters"})," to directly specify an AI engine, exposing all available parameters for fine-tuned control."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Permissions Required:"})," ",(0,s.jsx)(t.code,{children:"prompt-svc:prompt:create"})]}),"\n",(0,s.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(d(),{parameters:void 0}),"\n",(0,s.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) specific parameters"},id:{description:"Id is the unique ID of the prompt.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things synchronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}},required:["prompt"],type:"object"}}},description:"Add Prompt Request",required:!0}}),"\n",(0,s.jsx)(y(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{prompt:{allOf:[{properties:{createdAt:{description:"CreatedAt is the time of the prompt creation.",type:"string"},engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) specific parameters"},error:{description:"Error that arose during prompt execution, if any.",type:"string"},id:{description:"Id is the unique ID of the prompt.",type:"string"},lastRun:{description:"LastRun is the time of the last prompt run.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},requestMessageId:{type:"string"},responseMessageId:{type:"string"},runCount:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"},status:{allOf:[{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}],description:"Status of the prompt."},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"},type:{allOf:[{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]}],description:'Type is inferred from the `Parameters` or `EngineParameters` field.\nEg. A LLamaCpp prompt will be "Text-to-Text",\na Stabel Diffusion one will be "Text-to-Image" etc.'},updatedAt:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"},userId:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}},required:["prompt"],type:"object"}],description:"Prompt contains the details of the prompt that was just created by this request.\nThis includes the ID, prompt text, status, and other associated metadata."},responseMessage:{allOf:[{properties:{createdAt:{type:"string"},fileIds:{description:"FileIds defines the file attachments the message has.",items:{type:"string"},type:"array"},id:{example:"msg_emSOPlW58o",type:"string"},meta:{additionalProperties:!0,type:"object"},text:{description:'Text content of the message eg. "Hi, what\'s up?"',type:"string"},threadId:{description:"ThreadId of the message.",example:"thr_emSOeEUWAg",type:"string"},updatedAt:{type:"string"},userId:{description:"UserId is the id of the user who wrote the message.\nFor AI messages this field is empty.",type:"string"}},required:["createdAt","id","threadId","updatedAt"],type:"object"}],description:"Response message contains the response text and files.\nThis field is populated only for synchronous prompts (`sync = true`).\nFor asynchronous prompts, the response will provided in the associated\nmessage identified by the `responseMessageId` of the `promptSvc.prompt` object once the prompt completes."}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function P(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}}}]);
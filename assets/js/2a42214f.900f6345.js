"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>P,frontMatter:()=>u,metadata:()=>o,toc:()=>f});const o=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var n=i(74848),a=i(28453),r=i(53746),s=i.n(r),p=i(56518),c=i.n(p),l=i(99972),m=i.n(l),d=i(25342),T=i.n(d),g=(i(44215),i(82223),i(24861));const u={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},y=void 0,h={},f=[];function b(e){const t={code:"code",p:"p",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,n.jsx)(s(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,n.jsxs)(t.p,{children:["Requires ",(0,n.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,n.jsx)(c(),{parameters:void 0}),"\n",(0,n.jsx)(m(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(T(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function P(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(b,{...e})}):b(e)}}}]);
"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[39],{77863:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>x,frontMatter:()=>h,metadata:()=>r,toc:()=>b});const r=JSON.parse('{"id":"1backend/prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","source":"@site/docs/1backend/prompt.api.mdx","sourceDirName":"1backend","slug":"/1backend/prompt","permalink":"/docs/1backend/prompt","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","sidebar_label":"Prompt an AI","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Upsert an Instance","permalink":"/docs/1backend/upsert-instance"},"next":{"title":"List Prompts","permalink":"/docs/1backend/list-prompts"}}');var s=i(74848),n=i(28453),o=i(53746),p=i.n(o),a=i(56518),d=i.n(a),m=i(99972),c=i.n(m),l=i(25342),y=i.n(l),g=(i(44215),i(82223),i(24861));const h={id:"prompt",title:"Prompt an AI",description:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.",sidebar_label:"Prompt an AI",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},u=void 0,f={},b=[];function T(e){const t={code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"Prompt an AI"}),"\n",(0,s.jsx)(p(),{method:"post",path:"/prompt-svc/prompt",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately."}),"\n",(0,s.jsxs)(t.p,{children:["Prompts can be used for ",(0,s.jsx)(t.code,{children:"text-to-text"}),", ",(0,s.jsx)(t.code,{children:"text-to-image"}),", ",(0,s.jsx)(t.code,{children:"image-to-image"}),", and other types of generation.\nIf no model ID is specified, the default model will be used (see ",(0,s.jsx)(t.code,{children:"Model Svc"})," for details). The default model may or may not support the requested generation type."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prompting Modes"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"High-Level Parameters"}),": Uses predefined parameters relevant to ",(0,s.jsx)(t.code,{children:"text-to-image"}),", ",(0,s.jsx)(t.code,{children:"image-to-image"}),", etc. This mode abstracts away the underlying engine (e.g., LLaMA, Stable Diffusion) and focuses on functionality."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Engine-Specific Parameters"}),": Uses ",(0,s.jsx)(t.code,{children:"engineParameters"})," to directly specify an AI engine, exposing all available parameters for fine-tuned control."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Permissions Required:"})," ",(0,s.jsx)(t.code,{children:"prompt-svc:prompt:create"})]}),"\n",(0,s.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(d(),{parameters:void 0}),"\n",(0,s.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) specific parameters"},id:{description:"Id is the unique ID of the prompt.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things synchronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}},required:["prompt"],type:"object"}}},description:"Add Prompt Request",required:!0}}),"\n",(0,s.jsx)(y(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{prompt:{allOf:[{properties:{createdAt:{description:"CreatedAt is the time of the prompt creation.",type:"string"},engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) specific parameters"},error:{description:"Error that arose during prompt execution, if any.",type:"string"},id:{description:"Id is the unique ID of the prompt.",type:"string"},lastRun:{description:"LastRun is the time of the last prompt run.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},requestMessageId:{type:"string"},responseMessageId:{type:"string"},runCount:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"},status:{allOf:[{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}],description:"Status of the prompt."},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"},type:{allOf:[{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]}],description:'Type is inferred from the `Parameters` or `EngineParameters` field.\nEg. A LLamaCpp prompt will be "Text-to-Text",\na Stabel Diffusion one will be "Text-to-Image" etc.'},updatedAt:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"},userId:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}},required:["prompt"],type:"object"}],description:"Prompt contains the details of the prompt that was just created by this request.\nThis includes the ID, prompt text, status, and other associated metadata."},responseMessage:{allOf:[{properties:{createdAt:{type:"string"},fileIds:{description:"FileIds defines the file attachments the message has.",items:{type:"string"},type:"array"},id:{example:"msg_emSOPlW58o",type:"string"},meta:{additionalProperties:!0,type:"object"},text:{description:'Text content of the message eg. "Hi, what\'s up?"',type:"string"},threadId:{description:"ThreadId of the message.",example:"thr_emSOeEUWAg",type:"string"},updatedAt:{type:"string"},userId:{description:"UserId is the id of the user who wrote the message.\nFor AI messages this field is empty.",type:"string"}},required:["id","threadId"],type:"object"}],description:"Response message contains the response text and files.\nThis field is populated only for synchronous prompts (`sync = true`).\nFor asynchronous prompts, the response will provided in the associated\nmessage identified by the `responseMessageId` of the `promptSvc.prompt` object once the prompt completes."}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function x(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}}}]);
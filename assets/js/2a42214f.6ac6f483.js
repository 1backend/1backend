"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>b,default:()=>v,frontMatter:()=>y,metadata:()=>o,toc:()=>g});const o=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var n=i(74848),r=i(28453),s=i(53746),a=i.n(s),p=i(56518),c=i.n(p),m=i(99972),l=i.n(m),d=i(25342),u=i.n(d),h=(i(44215),i(82223),i(24861));const y={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},b=void 0,f={},g=[];function j(e){const t={code:"code",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,n.jsx)(a(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,n.jsxs)(t.p,{children:["Requires ",(0,n.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,n.jsx)(c(),{parameters:void 0}),"\n",(0,n.jsx)(l(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function v(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(j,{...e})}):j(e)}}}]);
"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[540],{99344:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>b,default:()=>N,frontMatter:()=>g,metadata:()=>i,toc:()=>v});const i=JSON.parse('{"id":"1backend-api/register","title":"Register","description":"Register a new user with a name, email, and password.","source":"@site/docs/1backend-api/register.api.mdx","sourceDirName":"1backend-api","slug":"/1backend-api/register","permalink":"/docs/1backend-api/register","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"register","title":"Register","description":"Register a new user with a name, email, and password.","sidebar_label":"Register","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend-api/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Refresh Token","permalink":"/docs/1backend-api/refresh-token"},"next":{"title":"Read Self","permalink":"/docs/1backend-api/read-self"}}');var s=n(74848),r=n(28453),a=n(57742),o=n.n(a),d=n(78178),c=n.n(d),p=n(19624),l=n.n(p),h=n(96226),u=n.n(h),m=(n(77675),n(19365),n(51107));const g={id:"register",title:"Register",description:"Register a new user with a name, email, and password.",sidebar_label:"Register",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend-api/1-backend",custom_edit_url:null},b=void 0,y={},v=[];function x(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Register"}),"\n",(0,s.jsx)(o(),{method:"post",path:"/user-svc/register",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Register a new user with a name, email, and password."}),"\n",(0,s.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(c(),{parameters:void 0}),"\n",(0,s.jsx)(l(),{title:"Body",body:{content:{"application/json":{schema:{properties:{app:{example:"unnamed",type:"string"},contact:{properties:{handle:{description:'Handle is the platform local unique identifier.\nIe. while the `id` of a Twitter contact is `twitter.com/thejoe`, the value will be only `thejoe`.\nFor email and phones the `id` and the `value` will be the same.\nThis field mostly exists for display purposes.\n\nExample values: "joe12" (1backend username), "thejoe" (twitter username), "joe@joesdomain.com" (email)',example:"thejoe",type:"string"},id:{description:'The unique identifier, which can be a URL.\n\nExample values: "joe12" (1backend username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)',example:"twitter.com/thejoe",type:"string"},platform:{description:'Platform of the contact (e.g., "email", "phone", "twitter")',example:"twitter",type:"string"}},required:["id","platform"],type:"object"},device:{type:"string"},name:{type:"string"},password:{description:"Password of the user.",type:"string"},slug:{description:"Slug is a URL-friendly unique (inside the 1Backend platform) identifier for the `user`.\nRequired due to its central role in the platform.\nIf your project has no use for a slug, just derive it from the email or similar.",type:"string"}},required:["slug"],type:"object"}}},description:"Register Request",required:!0}}),"\n",(0,s.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{token:{properties:{active:{description:"Active tokens contain the most up-to-date information.\nWhen a user's role changes\u2014due to role assignment, organization\ncreation/assignment, etc.\u2014all existing tokens are marked inactive.\nActive tokens are reused during login, while inactive tokens\nthat have been recently refreshed (being used still) are kept for further refreshing\n(unless `OB_TOKEN_AUTO_REFRESH_OFF` is set to true, old tokens can be refreshed indefinitely.)\n\nActive tokens contain the most up-to-date information.\nWhen a user's role changes\u2014due to role assignment, organization\ncreation/assignment, etc.\u2014all existing tokens are marked inactive.\nActive tokens are reused during login, while inactive tokens\nthat have been recently refreshed (see `lastRefreshedAt` field) and are still in use are retained for further refreshing.\n(Unless `OB_TOKEN_AUTO_REFRESH_OFF` is set to true, in which case old tokens can be refreshed indefinitely.)",type:"boolean"},app:{example:"unnamed,omitempty",type:"string"},createdAt:{type:"string"},deletedAt:{type:"string"},device:{description:"The device the token is associated with.\nThis in combination with LastRefreshedAt can be used to\ndetermine if the token is still in use, and lets us prune unused tokens.",type:"string"},expiresAt:{type:"string"},id:{type:"string"},lastRefreshedAt:{description:"The last time the token was refreshed.\nThis is used to determine if the token is still in use.",type:"string"},token:{description:'Token is a signed JWT used to authenticate the user without querying the User Svc.\nYou can verify it using the public key at `/user-svc/public-key`.\n\nThe token is just a JSON object with fields like:\n- "oui": the user ID (e.g., "usr_dC4K75Cbp6")\n- "olu": the user slug (e.g., "test-user-slug-0")\n- "oro": a list of roles, such as:\n  - "user-svc:user"\n  - "user-svc:org:{org_dC4K7NNDCG}:user"',type:"string"},updatedAt:{type:"string"},userId:{type:"string"}},required:["createdAt","device","expiresAt","id","token","updatedAt","userId"],type:"object"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function N(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}}}]);
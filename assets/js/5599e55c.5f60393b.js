"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[5745],{69903:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>R,contentTitle:()=>h,default:()=>f,frontMatter:()=>g,metadata:()=>s,toc:()=>b});const s=JSON.parse('{"id":"1backend/list-deployments","title":"List Deployments","description":"Retrieve a list of deployments.","source":"@site/docs/1backend/list-deployments.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-deployments","permalink":"/docs/1backend/list-deployments","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-deployments","title":"List Deployments","description":"Retrieve a list of deployments.","sidebar_label":"List Deployments","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Save Deployment","permalink":"/docs/1backend/save-deployment"},"next":{"title":"Send an Email","permalink":"/docs/1backend/send-email"}}');var n=i(74848),r=i(28453),o=i(53746),p=i.n(o),a=i(56518),d=i.n(a),l=i(99972),c=i.n(l),y=i(25342),m=i.n(y),u=(i(44215),i(82223),i(24861));const g={id:"list-deployments",title:"List Deployments",description:"Retrieve a list of deployments.",sidebar_label:"List Deployments",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},h=void 0,R={},b=[];function x(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"List Deployments"}),"\n",(0,n.jsx)(p(),{method:"post",path:"/deploy-svc/deployments",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieve a list of deployments."}),"\n",(0,n.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(d(),{parameters:void 0}),"\n",(0,n.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{type:"object"}}},description:"List Deploys Request"}}),"\n",(0,n.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{deployments:{items:{properties:{autoScaling:{allOf:[{properties:{cpuThreshold:{description:"CPU usage threshold for scaling (as a percentage)",type:"integer"},maxReplicas:{description:"Maximum number of replicas to run",type:"integer"},minReplicas:{description:"Minimum number of replicas to run",type:"integer"}},type:"object"}],description:"Optional: Auto-scaling rules"},definitionId:{description:"DefinitionId is the id of the definition",example:"def_deBXZMpxrQ",type:"string"},description:{description:"Description of what this deployment does",example:"Handles user service requests",type:"string"},details:{description:'Details provides additional information about the deployment\'s current state,\nincluding both success and failure conditions (e.g., "Deployment in progress", "Error pulling image").',example:"Deployment is in progress",type:"string"},envars:{additionalProperties:{type:"string"},description:"Envars is a map of environment variables that will be passed down to service instances (see Registry Svc Instance)\nAlso see the Registry Svc Definition for required envars.",type:"object"},id:{description:'ID of the deployment (e.g., "depl_dbOdi5eLQK")',example:"depl_dbOdi5eLQK",type:"string"},name:{description:'Short name for easy reference (e.g., "user-service-v2")',example:"user-service-v2",type:"string"},replicas:{description:"Number of container instances to run",type:"integer"},resources:{allOf:[{properties:{cpu:{description:'CPU limit, e.g., "500m" for 0.5 cores',type:"string"},memory:{description:'Memory limit, e.g., "128Mi"',type:"string"},vram:{description:'Optional: GPU VRAM requirement, e.g., "48GB"',type:"string"}},type:"object"}],description:"Resource requirements for each replica"},status:{allOf:[{enum:["OK","Error","Pending","Failed","Deploying"],type:"string","x-enum-varnames":["DeploymentStatusOK","DeploymentStatusError","DeploymentStatusPending","DeploymentStatusFailed","DeploymentStatusDeploying"]}],description:'Current status of the deployment (e.g., "OK", "Error", "Pending")',example:"OK"},strategy:{allOf:[{properties:{maxSurge:{description:"Max extra replicas during update",type:"integer"},maxUnavailable:{description:"Max unavailable replicas during update",type:"integer"},type:{allOf:[{enum:["RollingUpdate","Recreate"],type:"string","x-enum-varnames":["StrategyRollingUpdate","StrategyRecreate"]}],description:"Deployment strategy type (RollingUpdate, Recreate, etc.)"}},type:"object"}],description:"Deployment strategy (e.g., rolling update)"},targetRegions:{description:"Target deployment regions or clusters",items:{properties:{cluster:{description:'Cluster or node where service should be deployed (e.g., "us-west1", "local-docker")',type:"string"},zone:{description:"Optional: Specific zone for the deployment",type:"string"}},type:"object"},type:"array"}},required:["definitionId","id"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function f(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}}}]);
"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[7373],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>t});var i=s(96540);const l={},o=i.createContext(l);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},54238:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"command-line/basics","title":"Command line basics","description":"CLI installation","source":"@site/docs/command-line/basics.md","sourceDirName":"command-line","slug":"/command-line/basics","permalink":"/docs/command-line/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/1backend/1backend/tree/main/docs-source/docs/command-line/basics.md","tags":[{"inline":true,"label":"cli","permalink":"/docs/tags/cli"}],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"tags":["cli"]},"sidebar":"tutorialSidebar","previous":{"title":"Command line","permalink":"/docs/category/command-line"},"next":{"title":"Contributing","permalink":"/docs/category/contributing"}}');var l=s(74848),o=s(28453);const a={sidebar_position:2,tags:["cli"]},t="Command line basics",c={},r=[{value:"CLI installation",id:"cli-installation",level:2},{value:"CLI usage",id:"cli-usage",level:2},{value:"Logging in",id:"logging-in",level:2},{value:"Environments",id:"environments",level:2},{value:"Local",id:"local",level:3},{value:"Custom environments",id:"custom-environments",level:3},{value:"Endpoint calls",id:"endpoint-calls",level:2},{value:"CLI flag to request body mapping",id:"cli-flag-to-request-body-mapping",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"command-line-basics",children:"Command line basics"})}),"\n",(0,l.jsx)(n.h2,{id:"cli-installation",children:"CLI installation"}),"\n",(0,l.jsx)(n.p,{children:"Currently you need Go to install the 1Backend CLI:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"go install github.com/1backend/1backend/cli/oo@latest\n"})}),"\n",(0,l.jsx)(n.h2,{id:"cli-usage",children:"CLI usage"}),"\n",(0,l.jsxs)(n.p,{children:["Assuming the daemon is running already (see ",(0,l.jsx)(n.a,{href:"/docs/running-the-server/using#default-credentials",children:"this section about that"}),"), you can interact with it through the CLI."]}),"\n",(0,l.jsx)(n.h2,{id:"logging-in",children:"Logging in"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ oo login 1backend\nEnter password:\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ oo whoami\nslug: 1backend\nid: usr_eH9mXKgmb0\nroles:\n- user-svc:admin\n"})}),"\n",(0,l.jsx)(n.h2,{id:"environments",children:"Environments"}),"\n",(0,l.jsx)(n.h3,{id:"local",children:"Local"}),"\n",(0,l.jsx)(n.p,{children:"The local environment is included by default in the env list:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ oo env ls\nENV NAME   SELECTED   URL                           DESCRIPTION   REACHABLE\nlocal      *          http://127.0.0.1:11337                      false\n"})}),"\n",(0,l.jsx)(n.h3,{id:"custom-environments",children:"Custom environments"}),"\n",(0,l.jsx)(n.p,{children:"Adding your non-local (prod etc.) environment is very easy:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ oo env add prod https://yourdomain.com\n$ oo env ls\nENV NAME   SELECTED   URL                           DESCRIPTION   REACHABLE\nlocal      *          http://127.0.0.1:11337                      false\nprod                  https://yourdomain.com                      true\n"})}),"\n",(0,l.jsx)(n.p,{children:"Then you can select your new environment:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ oo env select prod\n$ oo env ls\nENV NAME   SELECTED   URL                           DESCRIPTION   REACHABLE\nlocal                 http://127.0.0.1:11337                      false\nprod       *          https://yourdomain.com                      true\n"})}),"\n",(0,l.jsx)(n.h2,{id:"endpoint-calls",children:"Endpoint calls"}),"\n",(0,l.jsx)(n.p,{children:"Let's make a GET call:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ oo get /secret-svc/is-secure\n{\n  "isSecure":false\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"Or a POST call:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ oo post /user-svc/users\n{\n  "users": [\n   {\n      "id": "usr_g5WbJXmxuQ",\n      "createdAt": "2025-06-05T16:58:15.674576217+02:00",\n      "updatedAt": "2025-06-05T16:58:15.674576217+02:00",\n      "name": "Admin",\n      "slug": "1backend"\n    }\n  ],\n  # Some other fields might be included such as for\n  # pagination or count.\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"Or a POST call with some request body parameters:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ oo post /secret-svc/encrypt --value=hey\n{\n  "value": "UsoGq6VCa0+89pzIPhgU49kgoL0p/3jc90IsOR/8ldk="\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"Here we should talk a bit about how CLI flags get mapped to request bodies."}),"\n",(0,l.jsx)(n.h2,{id:"cli-flag-to-request-body-mapping",children:"CLI flag to request body mapping"}),"\n",(0,l.jsxs)(n.p,{children:["When doing ",(0,l.jsx)(n.code,{children:"POST"}),", ",(0,l.jsx)(n.code,{children:"PUT"})," and ",(0,l.jsx)(n.code,{children:"DELETE"})," queries, CLI flags can be turned into multilevel JSON request bodies, such as this:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ oo post /registry-svc/echo --value=hey\n"})}),"\n",(0,l.jsx)(n.p,{children:"Is roughly equivalent to the pseudocurl"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'curl -XPOST -H "Auth..." $ADDR/registry-svc/echo -d \'{"value": "hey"}\'\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Similarly, dot ",(0,l.jsx)(n.code,{children:"."})," and dash ",(0,l.jsx)(n.code,{children:"-"})," delimiters get turned into a multidimensional JSON:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ oo post /registry-svc/echo --value-text=hey\n# turns into\n{\n  "value": {\n    "text": "hey"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ oo post /registry-svc/echo --value.text=hey\n# turns into\n{\n  "value": {\n    "text": "hey"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ oo post /registry-svc/echo --valueText=hey\n# turns into\n{\n  "valueText": "hey"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[6870],{29746:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>f,contentTitle:()=>b,default:()=>x,frontMatter:()=>y,metadata:()=>n,toc:()=>g});const n=JSON.parse('{"id":"1backend/get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","source":"@site/docs/1backend/get-users.api.mdx","sourceDirName":"1backend","slug":"/1backend/get-users","permalink":"/docs/1backend/get-users","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","sidebar_label":"List Users","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Read User by Token","permalink":"/docs/1backend/read-user-by-token"}}');var i=s(74848),r=s(28453),o=s(53746),a=s.n(o),d=s(56518),p=s.n(d),l=s(99972),c=s.n(l),u=s(25342),h=s.n(u),m=(s(44215),s(82223),s(24861));const y={id:"get-users",title:"List Users",description:"Fetches a list of users with optional query filters and pagination.",sidebar_label:"List Users",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},b=void 0,f={},g=[];function O(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"List Users"}),"\n",(0,i.jsx)(a(),{method:"post",path:"/user-svc/users",context:"endpoint"}),"\n",(0,i.jsx)(t.p,{children:"Fetches a list of users with optional query filters and pagination."}),"\n",(0,i.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(p(),{parameters:void 0}),"\n",(0,i.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{query:{properties:{count:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"},filters:{description:"Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.",items:{properties:{fields:{items:{type:"string"},type:"array"},jsonValues:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"},op:{enum:["or","equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpOr","OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]},subFilters:{description:"SubFilters is used for operations like OR where multiple filters are combined.",items:"circular()",type:"array"}},type:"object"},type:"array"},jsonAfter:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON-encoded string due to limitations in Swaggo (e.g., []interface{} gets converted to []map[string]interface{}).\nThere is no way to specify a type that results in an any/interface{} type in the `go -> openapi -> go` generation process.\nAs a result, JSONAfter is a JSON-marshalled string representing an array, e.g., `[42]`.",type:"string"},limit:{description:"Limit the number of records in the result set.",type:"integer"},orderBys:{description:"OrderBys order the result set.",items:{properties:{desc:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"},field:{description:"The field by which to order the results",type:"string"},randomize:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"},sortingType:{allOf:[{enum:["","numeric","text","date"],type:"string","x-enum-varnames":["SortingTypeDefault","SortingTypeNumeric","SortingTypeText","SortingTypeDate"]}],description:"Defines the type of sorting to apply (numeric, text, date, etc.)"}},type:"object"},type:"array"}},type:"object"}},type:"object"}}},description:"Get Users Request"}}),"\n",(0,i.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"List of users retrieved successfully",content:{"application/json":{schema:{properties:{after:{type:"string"},count:{type:"integer"},users:{items:{properties:{contacts:{description:"Contacts are used for login and identification purposes.",items:{properties:{createdAt:{type:"string"},deletedAt:{type:"string"},id:{description:'The unique identifier, which can be a URL.\n\nExample values: "joe12" (1backend username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)',example:"twitter.com/thejoe",type:"string"},isPrimary:{description:"If this is the primary contact method",type:"boolean"},platform:{description:'Platform of the contact (e.g., "email", "phone", "twitter")',example:"twitter",type:"string"},updatedAt:{type:"string"},userId:{type:"string"},value:{description:'Value is the platform local unique identifier.\nIe. while the `id` of a Twitter contact is `twitter.com/thejoe`, the value will be only `thejoe`.\nFor email and phones the `id` and the `value` will be the same.\nThis field mostly exists for display purposes.\n\nExample values: "joe12" (1backend username), "thejoe" (twitter username), "joe@joesdomain.com" (email)',example:"thejoe",type:"string"},verified:{description:"Whether the contact is verified",type:"boolean"}},required:["id","userId"],type:"object"},type:"array"},createdAt:{type:"string"},deletedAt:{type:"string"},id:{type:"string"},name:{description:"Full name of the organization.",example:"Jane Doe",type:"string"},passwordHash:{type:"string"},slug:{description:"URL-friendly unique (inside the Singularon platform) identifier for the `user`.",example:"jane-doe",type:"string"},updatedAt:{type:"string"}},required:["id","slug"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function x(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(O,{...e})}):O(e)}}}]);
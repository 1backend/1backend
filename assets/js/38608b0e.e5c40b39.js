"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[5647],{35438:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>b,contentTitle:()=>m,default:()=>v,frontMatter:()=>y,metadata:()=>s,toc:()=>f});const s=JSON.parse('{"id":"1backend-api/save-enrolls","title":"Save Enrolls","description":"Enroll a list of users by contact or user Id to acquire a role.","source":"@site/docs/1backend-api/save-enrolls.api.mdx","sourceDirName":"1backend-api","slug":"/1backend-api/save-enrolls","permalink":"/docs/1backend-api/save-enrolls","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"save-enrolls","title":"Save Enrolls","description":"Enroll a list of users by contact or user Id to acquire a role.","sidebar_label":"Save Enrolls","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"put api-method","info_path":"docs/1backend-api/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Enrolls","permalink":"/docs/1backend-api/list-enrolls"},"next":{"title":"Login","permalink":"/docs/1backend-api/login"}}');var n=t(74848),i=t(28453),o=t(57742),a=t.n(o),l=t(78178),d=t.n(l),c=t(19624),p=t.n(c),u=t(96226),h=t.n(u),g=(t(77675),t(19365),t(51107));const y={id:"save-enrolls",title:"Save Enrolls",description:"Enroll a list of users by contact or user Id to acquire a role.",sidebar_label:"Save Enrolls",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"docs/1backend-api/1-backend",custom_edit_url:null},m=void 0,b={},f=[];function j(e){const r={code:"code",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"Save Enrolls"}),"\n",(0,n.jsx)(a(),{method:"put",path:"/user-svc/enrolls",context:"endpoint"}),"\n",(0,n.jsx)(r.p,{children:"Enroll a list of users by contact or user Id to acquire a role.\nWorks on future or current users."}),"\n",(0,n.jsx)(r.p,{children:'A user can only enroll an other user to a role if the user "owns" that role.\nA user who owns a role can enroll others in that roll in any app.\nThe same request might contain enrolls for different apps.'}),"\n",(0,n.jsx)(r.p,{children:'A user "owns" a role in the following cases:'}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"A static role where the role ID is prefixed with the caller's slug."}),"\n",(0,n.jsxs)(r.li,{children:["Any dynamic or static role where the caller is an admin (has ",(0,n.jsx)(r.code,{children:"*:admin"})," postfix of that role)."]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Examples:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["A user with the slug ",(0,n.jsx)(r.code,{children:"joe-doe"})," owns roles like ",(0,n.jsx)(r.code,{children:"joe-doe:*"})," such as ",(0,n.jsx)(r.code,{children:"joe-doe:any-custom-role"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:["A user with any slug who has the role ",(0,n.jsx)(r.code,{children:"my-service:admin"})," owns ",(0,n.jsx)(r.code,{children:"my-service:*"})," roles such as ",(0,n.jsx)(r.code,{children:"my-service:user"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:["A user with any slug who has the role ",(0,n.jsx)(r.code,{children:"user-svc:org:{%orgId}:admin"})," owns ",(0,n.jsx)(r.code,{children:"user-svc:org:{%orgId}:*"})," such as ",(0,n.jsx)(r.code,{children:"user-svc:org:{%orgId}:user"}),"."]}),"\n"]}),"\n",(0,n.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(d(),{parameters:void 0}),"\n",(0,n.jsx)(p(),{title:"Body",body:{content:{"application/json":{schema:{properties:{enrolls:{items:{properties:{appHost:{type:"string"},contactId:{description:"ContactId is the the recipient of the enroll.\nIf the user is already registered, the role is assigned immediately;\notherwise, it is applied upon registration.",type:"string"},id:{example:"inv_fIYPbMHIcI",type:"string"},role:{type:"string"},userId:{description:"UserId is the recipient of the enroll.\nIf the user is already registered, the role is assigned immediately;\notherwise, it is applied upon registration.",type:"string"}},required:["role"],type:"object"},type:"array"}},required:["enrolls"],type:"object"}}},description:"Save Enrolls Request",required:!0}}),"\n",(0,n.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"Enrolls saved successfully",content:{"application/json":{schema:{properties:{enrolls:{items:{properties:{appId:{description:"App of the enroll.\nUse `*` to match all apps, such as when bootstrapping\nin services.",type:"string"},contactId:{description:"ContactId is the the recipient of the enroll.\nIf the user is already registered, the role is assigned immediately;\notherwise, it is applied upon registration.",type:"string"},createdAt:{type:"string"},createdBy:{description:"CreatedBy contains the ID of the user who created the Enroll.",type:"string"},deletedAt:{type:"string"},id:{example:"inv_fIYPbMHIcI",type:"string"},internalId:{type:"string"},role:{description:'Role specifies the role to be assigned to the ContactId.\nCallers can only assign roles they own, identified by their service slug\n(e.g., if "my-service" creates an enroll, the role must be "my-service:admin").\nDynamic organization roles can also be assigned\n(e.g., "user-svc:org:{%orgId}:admin" or "user-svc:org:{%orgId}:user"),\nbut in this case, the caller must be an admin of the target organization.',type:"string"},updatedAt:{type:"string"},userId:{description:"UserId is the recipient of the enroll.\nIf the user is already registered, the role is assigned immediately;\notherwise, it is applied upon registration.",type:"string"}},required:["appId","createdAt","id","role","updatedAt"],type:"object"},type:"array"}},required:["enrolls"],type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function v(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(j,{...e})}):j(e)}}}]);
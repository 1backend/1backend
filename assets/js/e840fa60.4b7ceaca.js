"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3577],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(96540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}},30590:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"built-in-services/deploy-svc","title":"Deploy Svc","description":"The Deploy Svc is a container orchestration service that automates the deployment, scaling, and management of containerized services across 1Backend infrastructure.","source":"@site/docs/built-in-services/deploy-svc.md","sourceDirName":"built-in-services","slug":"/built-in-services/deploy-svc","permalink":"/docs/built-in-services/deploy-svc","draft":false,"unlisted":false,"editUrl":"https://github.com/1backend/1backend/tree/main/docs-source/docs/built-in-services/deploy-svc.md","tags":[{"inline":true,"label":"deploy-svc","permalink":"/docs/tags/deploy-svc"},{"inline":true,"label":"deploy","permalink":"/docs/tags/deploy"},{"inline":true,"label":"containers","permalink":"/docs/tags/containers"},{"inline":true,"label":"services","permalink":"/docs/tags/services"},{"inline":true,"label":"orchestration","permalink":"/docs/tags/orchestration"},{"inline":true,"label":"scaling","permalink":"/docs/tags/scaling"},{"inline":true,"label":"automation","permalink":"/docs/tags/automation"}],"version":"current","sidebarPosition":80,"frontMatter":{"sidebar_position":80,"tags":["deploy-svc","deploy","containers","services","orchestration","scaling","automation"]},"sidebar":"tutorialSidebar","previous":{"title":"Policy Svc","permalink":"/docs/built-in-services/policy-svc"},"next":{"title":"Model Svc","permalink":"/docs/built-in-services/model-svc"}}');var l=i(74848),r=i(28453);const t={sidebar_position:80,tags:["deploy-svc","deploy","containers","services","orchestration","scaling","automation"]},a="Deploy Svc",o={},c=[{value:"Architecture &amp; Purpose",id:"architecture--purpose",level:2},{value:"Status Warning",id:"status-warning",level:2},{value:"CLI Usage",id:"cli-usage",level:2},{value:"Saving Deployments",id:"saving-deployments",level:3},{value:"Deployment File Structure",id:"deployment-file-structure",level:4},{value:"Minimal Deployment Example",id:"minimal-deployment-example",level:4},{value:"Listing Deployments",id:"listing-deployments",level:3},{value:"Deleting Deployments",id:"deleting-deployments",level:3},{value:"Deployment Lifecycle",id:"deployment-lifecycle",level:2},{value:"Deployment States",id:"deployment-states",level:3},{value:"Deploy Loop Operation",id:"deploy-loop-operation",level:3},{value:"Scaling &amp; Resource Management",id:"scaling--resource-management",level:2},{value:"Replica Management",id:"replica-management",level:3},{value:"Resource Allocation",id:"resource-allocation",level:3},{value:"Resource Format Examples",id:"resource-format-examples",level:4},{value:"Deployment Strategies",id:"deployment-strategies",level:2},{value:"Rolling Update (Default)",id:"rolling-update-default",level:3},{value:"Recreate Strategy",id:"recreate-strategy",level:3},{value:"Real-World Usage Examples",id:"real-world-usage-examples",level:2},{value:"1. Web Application Deployment",id:"1-web-application-deployment",level:3},{value:"2. AI Model Service",id:"2-ai-model-service",level:3},{value:"3. Microservice with Database",id:"3-microservice-with-database",level:3},{value:"4. Development Environment",id:"4-development-environment",level:3},{value:"Node Allocation &amp; Targeting",id:"node-allocation--targeting",level:2},{value:"Cluster Targeting",id:"cluster-targeting",level:3},{value:"Allocation Algorithm",id:"allocation-algorithm",level:3},{value:"Integration with Other Services",id:"integration-with-other-services",level:2},{value:"Registry Svc Integration",id:"registry-svc-integration",level:3},{value:"Container Svc Integration",id:"container-svc-integration",level:3},{value:"Definition Dependency",id:"definition-dependency",level:3},{value:"Environment Variables &amp; Configuration",id:"environment-variables--configuration",level:2},{value:"Static Configuration",id:"static-configuration",level:3},{value:"Dynamic Configuration",id:"dynamic-configuration",level:3},{value:"Monitoring &amp; Observability",id:"monitoring--observability",level:2},{value:"Deployment Status Monitoring",id:"deployment-status-monitoring",level:3},{value:"Health Check Integration",id:"health-check-integration",level:3},{value:"Automatic Recovery",id:"automatic-recovery",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Resource Efficiency",id:"resource-efficiency",level:3},{value:"Deployment Speed",id:"deployment-speed",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"<strong>Deployment Stuck in &quot;Deploying&quot;</strong>",id:"deployment-stuck-in-deploying",level:4},{value:"<strong>&quot;Error&quot; Status with Build Failures</strong>",id:"error-status-with-build-failures",level:4},{value:"<strong>Resource Allocation Failures</strong>",id:"resource-allocation-failures",level:4},{value:"Debug Commands",id:"debug-commands",level:3},{value:"API Reference Summary",id:"api-reference-summary",level:2},{value:"Related Services",id:"related-services",level:2},{value:"Roadmap &amp; Future Features",id:"roadmap--future-features",level:2},{value:"Near-term Enhancements",id:"near-term-enhancements",level:3},{value:"Long-term Vision",id:"long-term-vision",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"deploy-svc",children:"Deploy Svc"})}),"\n",(0,l.jsx)(n.p,{children:"The Deploy Svc is a container orchestration service that automates the deployment, scaling, and management of containerized services across 1Backend infrastructure."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["This page provides a comprehensive overview of ",(0,l.jsx)(n.code,{children:"Deploy Svc"}),". For detailed API information, refer to the ",(0,l.jsx)(n.a,{href:"/docs/1backend-api/save-deployment",children:"Deploy Svc API documentation"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"architecture--purpose",children:"Architecture & Purpose"}),"\n",(0,l.jsxs)(n.p,{children:["Deploy Svc serves as the ",(0,l.jsx)(n.strong,{children:"orchestration layer"})," that bridges service definitions and running containers:"]}),"\n",(0,l.jsx)(n.h2,{id:"status-warning",children:"Status Warning"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"\ud83d\udea7 Deployment capabilities are currently in development. This documentation is for contributors and advanced users. For production use, deploy services manually for now."})}),"\n",(0,l.jsx)(n.h2,{id:"cli-usage",children:"CLI Usage"}),"\n",(0,l.jsx)(n.p,{children:"Deploy Svc provides comprehensive CLI commands for managing deployments:"}),"\n",(0,l.jsx)(n.h3,{id:"saving-deployments",children:"Saving Deployments"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Save a deployment from YAML file\noo deployment save ./my-deployment.yaml\n\n# Using aliases\noo depl s ./my-deployment.yaml\noo deployments save ./my-deployment.yaml\n"})}),"\n",(0,l.jsx)(n.h4,{id:"deployment-file-structure",children:"Deployment File Structure"}),"\n",(0,l.jsx)(n.p,{children:"Deployment files should be in YAML format with the following structure:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'id: "depl_myservice123"\ndefinitionId: "def_myservice456" # Links to Registry Svc Definition\nname: "user-service-v2"\ndescription: "Handles user service requests"\nreplicas: 3\nstrategy:\n  type: "RollingUpdate"\n  maxUnavailable: 1\n  maxSurge: 2\nresources:\n  cpu: "500m" # 0.5 CPU cores\n  memory: "256Mi" # 256 MB RAM\n  vram: "24GB" # GPU memory (optional)\nautoScaling:\n  minReplicas: 2\n  maxReplicas: 10\n  cpuThreshold: 80 # Scale up at 80% CPU\ntargetRegions:\n  - cluster: "us-west1"\n    zone: "us-west1-b"\n  - cluster: "local-docker"\nenvars:\n  ENVIRONMENT: "production"\n  LOG_LEVEL: "debug"\n  FEATURE_FLAG_X: "true"\n  DATABASE_URL: "postgres://localhost:5432/mydb"\n'})}),"\n",(0,l.jsx)(n.h4,{id:"minimal-deployment-example",children:"Minimal Deployment Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'id: "depl_simple123"\ndefinitionId: "def_myapp456"\nreplicas: 1\n'})}),"\n",(0,l.jsx)(n.h3,{id:"listing-deployments",children:"Listing Deployments"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# List all deployments\noo deployment list\n\n# List with full details (no truncation)\noo deployment list --full\n\n# Using aliases\noo depl ls\noo deployments list --full\n"})}),"\n",(0,l.jsx)(n.p,{children:"Example output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"ID                DEFINITION ID    STATUS      DETAILS\ndepl_dbOdi5eLQK   test-a           OK\ndepl_dy2PDIkzqf   test-b           Error       build failed: COPY failed: file not found...\ndepl_user123      def_user456      Deploying   Starting container instances...\n"})}),"\n",(0,l.jsx)(n.h3,{id:"deleting-deployments",children:"Deleting Deployments"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Delete a deployment by ID\noo deployment remove depl_myservice123\n\n# Using aliases\noo depl rm depl_myservice123\noo deployments remove depl_myservice123\n"})}),"\n",(0,l.jsx)(n.h2,{id:"deployment-lifecycle",children:"Deployment Lifecycle"}),"\n",(0,l.jsx)(n.h3,{id:"deployment-states",children:"Deployment States"}),"\n",(0,l.jsx)(n.p,{children:"Deploy Svc manages deployments through several states:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-mermaid",children:"stateDiagram-v2\n    [*] --\x3e Pending\n    Pending --\x3e Deploying\n    Deploying --\x3e OK\n    Deploying --\x3e Error\n    Error --\x3e Deploying\n    OK --\x3e Deploying\n    Deploying --\x3e Failed\n    Failed --\x3e [*]\n    OK --\x3e [*]\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Pending"}),": Deployment created but not yet started"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Deploying"}),": Actively launching or updating containers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"OK"}),": All replicas running successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Error"}),": Deployment failed but retryable"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Failed"}),": Deployment permanently failed"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"deploy-loop-operation",children:"Deploy Loop Operation"}),"\n",(0,l.jsx)(n.p,{children:"The Deploy Svc runs a continuous reconciliation loop:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"State Assessment"}),": Compare desired vs actual deployments"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Command Generation"}),": Create start/stop/scale commands"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Node Allocation"}),": Distribute workloads across available nodes"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Container Management"}),": Execute commands via Container Svc"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Registry Updates"}),": Register instances with Registry Svc"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Health Monitoring"}),": Track instance health and restart if needed"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"scaling--resource-management",children:"Scaling & Resource Management"}),"\n",(0,l.jsx)(n.h3,{id:"replica-management",children:"Replica Management"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"# Basic scaling\nreplicas: 5\n\n# Auto-scaling configuration\nautoScaling:\n  minReplicas: 2\n  maxReplicas: 20\n  cpuThreshold: 75 # Scale up when average CPU > 75%\n"})}),"\n",(0,l.jsx)(n.h3,{id:"resource-allocation",children:"Resource Allocation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'resources:\n  cpu: "2" # 2 CPU cores\n  memory: "4Gi" # 4 GB RAM\n  vram: "48GB" # GPU memory for AI workloads\n'})}),"\n",(0,l.jsx)(n.h4,{id:"resource-format-examples",children:"Resource Format Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'# CPU formats\ncpu: "500m"      # 0.5 cores (millicores)\ncpu: "1"         # 1 core\ncpu: "2.5"       # 2.5 cores\n\n# Memory formats\nmemory: "128Mi"  # 128 mebibytes\nmemory: "1Gi"    # 1 gibibyte\nmemory: "512M"   # 512 megabytes\n\n# GPU VRAM (for AI workloads)\nvram: "24GB"     # 24 GB GPU memory\nvram: "48GB"     # High-memory GPU\n'})}),"\n",(0,l.jsx)(n.h2,{id:"deployment-strategies",children:"Deployment Strategies"}),"\n",(0,l.jsx)(n.h3,{id:"rolling-update-default",children:"Rolling Update (Default)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'strategy:\n  type: "RollingUpdate"\n  maxUnavailable: 1 # Max instances down during update\n  maxSurge: 2 # Max extra instances during update\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Rolling updates ensure ",(0,l.jsx)(n.strong,{children:"zero-downtime deployments"})," by:"]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Starting new instances alongside old ones"}),"\n",(0,l.jsx)(n.li,{children:"Gradually shifting traffic to new instances"}),"\n",(0,l.jsx)(n.li,{children:"Removing old instances once new ones are healthy"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"recreate-strategy",children:"Recreate Strategy"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'strategy:\n  type: "Recreate"\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Recreate strategy ",(0,l.jsx)(n.strong,{children:"stops all instances"})," before starting new ones:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Simpler but causes downtime"}),"\n",(0,l.jsx)(n.li,{children:"Useful for stateful services requiring exclusive access"}),"\n",(0,l.jsx)(n.li,{children:"Faster for development environments"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"real-world-usage-examples",children:"Real-World Usage Examples"}),"\n",(0,l.jsx)(n.h3,{id:"1-web-application-deployment",children:"1. Web Application Deployment"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'id: "depl_webapp_prod"\ndefinitionId: "def_webapp_v2"\nname: "webapp-production"\ndescription: "Production web application"\nreplicas: 5\nstrategy:\n  type: "RollingUpdate"\n  maxUnavailable: 1\n  maxSurge: 2\nresources:\n  cpu: "1"\n  memory: "512Mi"\nautoScaling:\n  minReplicas: 3\n  maxReplicas: 15\n  cpuThreshold: 70\ntargetRegions:\n  - cluster: "us-east1"\n  - cluster: "us-west1"\nenvars:\n  NODE_ENV: "production"\n  DATABASE_URL: "postgres://prod-db:5432/webapp"\n  REDIS_URL: "redis://prod-cache:6379"\n  LOG_LEVEL: "info"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"2-ai-model-service",children:"2. AI Model Service"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'id: "depl_ai_model"\ndefinitionId: "def_llama_70b"\nname: "llama-70b-service"\ndescription: "Large language model inference service"\nreplicas: 2\nresources:\n  cpu: "8"\n  memory: "32Gi"\n  vram: "80GB" # High-end GPU requirement\nautoScaling:\n  minReplicas: 1\n  maxReplicas: 4\n  cpuThreshold: 85\ntargetRegions:\n  - cluster: "gpu-cluster-a100"\n    zone: "gpu-zone-1"\nenvars:\n  MODEL_NAME: "llama-70b"\n  BATCH_SIZE: "4"\n  MAX_TOKENS: "4096"\n  GPU_MEMORY_FRACTION: "0.95"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"3-microservice-with-database",children:"3. Microservice with Database"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'id: "depl_user_service"\ndefinitionId: "def_user_api"\nname: "user-service"\ndescription: "User management microservice"\nreplicas: 3\nstrategy:\n  type: "RollingUpdate"\n  maxUnavailable: 0 # Zero downtime\n  maxSurge: 1\nresources:\n  cpu: "500m"\n  memory: "256Mi"\nautoScaling:\n  minReplicas: 2\n  maxReplicas: 8\n  cpuThreshold: 75\nenvars:\n  DATABASE_HOST: "user-db.internal"\n  DATABASE_PORT: "5432"\n  DATABASE_NAME: "users"\n  JWT_SECRET: "{{secret:jwt-secret}}"\n  REDIS_URL: "redis://user-cache:6379"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"4-development-environment",children:"4. Development Environment"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'id: "depl_dev_api"\ndefinitionId: "def_api_dev"\nname: "api-development"\ndescription: "Development API server"\nreplicas: 1 # Single instance for dev\nstrategy:\n  type: "Recreate" # Simpler for development\nresources:\n  cpu: "250m" # Minimal resources\n  memory: "128Mi"\nenvars:\n  NODE_ENV: "development"\n  DEBUG: "true"\n  HOT_RELOAD: "true"\n  LOG_LEVEL: "debug"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"node-allocation--targeting",children:"Node Allocation & Targeting"}),"\n",(0,l.jsx)(n.h3,{id:"cluster-targeting",children:"Cluster Targeting"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'targetRegions:\n  - cluster: "production-cluster"\n    zone: "zone-a"\n  - cluster: "gpu-cluster" # For GPU workloads\n  - cluster: "local-docker" # For local development\n'})}),"\n",(0,l.jsx)(n.h3,{id:"allocation-algorithm",children:"Allocation Algorithm"}),"\n",(0,l.jsx)(n.p,{children:"The Deploy Svc allocator considers:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Node Capacity"}),": CPU, memory, and GPU availability"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Resource Requirements"}),": Deployment resource needs"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Load Distribution"}),": Balanced workload distribution"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Affinity Rules"}),": Cluster and zone preferences"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Health Status"}),": Only healthy nodes receive workloads"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"integration-with-other-services",children:"Integration with Other Services"}),"\n",(0,l.jsx)(n.h3,{id:"registry-svc-integration",children:"Registry Svc Integration"}),"\n",(0,l.jsxs)(n.p,{children:["Deploy Svc works closely with ",(0,l.jsx)(n.a,{href:"/docs/built-in-services/registry-svc",children:"Registry Svc"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant DS as Deploy Svc\n    participant RS as Registry Svc\n    participant CS as Container Svc\n    participant Node as Node\n\n    DS->>RS: List available nodes\n    DS->>RS: Get service definitions\n    DS->>CS: Start container on node\n    CS->>Node: Launch container\n    DS->>RS: Register service instance\n    RS--\x3e>DS: Instance registered\n"})}),"\n",(0,l.jsx)(n.h3,{id:"container-svc-integration",children:"Container Svc Integration"}),"\n",(0,l.jsxs)(n.p,{children:["Deploy Svc orchestrates containers via ",(0,l.jsx)(n.a,{href:"/docs/built-in-services/container-svc",children:"Container Svc"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Container Lifecycle"}),": Start, stop, and restart containers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Image Management"}),": Build images from repositories"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Port Mapping"}),": Configure network access"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Volume Mounting"}),": Handle persistent storage"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"definition-dependency",children:"Definition Dependency"}),"\n",(0,l.jsxs)(n.p,{children:["Deployments reference ",(0,l.jsx)(n.strong,{children:"Service Definitions"})," from Registry Svc:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# First, create a definition\noo definition save ./my-service-def.yaml\n\n# Then, deploy it\noo deployment save ./my-deployment.yaml\n"})}),"\n",(0,l.jsx)(n.h2,{id:"environment-variables--configuration",children:"Environment Variables & Configuration"}),"\n",(0,l.jsx)(n.h3,{id:"static-configuration",children:"Static Configuration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'envars:\n  NODE_ENV: "production"\n  LOG_LEVEL: "info"\n  API_TIMEOUT: "30s"\n  MAX_CONNECTIONS: "100"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"dynamic-configuration",children:"Dynamic Configuration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'envars:\n  # Reference secrets (when Secret Svc integration available)\n  DATABASE_PASSWORD: "{{secret:db-password}}"\n  API_KEY: "{{secret:external-api-key}}"\n\n  # Environment-specific values\n  ENVIRONMENT: "{{env:DEPLOY_ENV}}"\n  BUILD_VERSION: "{{env:BUILD_NUMBER}}"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"monitoring--observability",children:"Monitoring & Observability"}),"\n",(0,l.jsx)(n.h3,{id:"deployment-status-monitoring",children:"Deployment Status Monitoring"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Watch deployment progress\noo deployment list --full\n\n# Check specific deployment\noo deployment list | grep depl_myservice123\n"})}),"\n",(0,l.jsx)(n.h3,{id:"health-check-integration",children:"Health Check Integration"}),"\n",(0,l.jsx)(n.p,{children:"Deploy Svc monitors service health through:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Container Health"}),": Container runtime status"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Service Heartbeats"}),": Regular health check responses"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Resource Usage"}),": CPU, memory, and GPU utilization"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Network Connectivity"}),": Service reachability"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"automatic-recovery",children:"Automatic Recovery"}),"\n",(0,l.jsx)(n.p,{children:"When services fail, Deploy Svc automatically:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Detects Failures"}),": Via health checks and heartbeats"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Generates Commands"}),": Create restart/replace commands"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Allocates Resources"}),": Find available nodes"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Restarts Services"}),": Launch replacement containers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Updates Registry"}),": Register new instances"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,l.jsx)(n.h3,{id:"resource-efficiency",children:"Resource Efficiency"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'# Optimize resource allocation\nresources:\n  cpu: "500m" # Right-size CPU allocation\n  memory: "256Mi" # Prevent memory waste\n\n# Configure appropriate scaling\nautoScaling:\n  minReplicas: 2 # Maintain minimum availability\n  maxReplicas: 8 # Cap maximum resources\n  cpuThreshold: 70 # Scale before hitting limits\n'})}),"\n",(0,l.jsx)(n.h3,{id:"deployment-speed",children:"Deployment Speed"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'# Fast deployment strategy\nstrategy:\n  type: "RollingUpdate"\n  maxUnavailable: 0 # Zero downtime\n  maxSurge: 3 # Parallel deployments\n'})}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsx)(n.h4,{id:"deployment-stuck-in-deploying",children:(0,l.jsx)(n.strong,{children:'Deployment Stuck in "Deploying"'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Check node availability\noo node list\n\n# Verify definition exists\noo definition list\n\n# Check container logs\noo get /container-svc/container/summary?name=my-service\n"})}),"\n",(0,l.jsx)(n.h4,{id:"error-status-with-build-failures",children:(0,l.jsx)(n.strong,{children:'"Error" Status with Build Failures'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Check definition for correct paths\ncat my-definition.yaml\n\n# Verify repository access\noo get /source-svc/checkout --url="https://github.com/user/repo.git"\n'})}),"\n",(0,l.jsx)(n.h4,{id:"resource-allocation-failures",children:(0,l.jsx)(n.strong,{children:"Resource Allocation Failures"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'# Reduce resource requirements\nresources:\n  cpu: "250m" # Reduced from "1"\n  memory: "128Mi" # Reduced from "512Mi"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"debug-commands",children:"Debug Commands"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# List all nodes and their capacity\noo node list\n\n# Check instance health\noo instance list\n\n# View deployment details\noo deployment list --full\n"})}),"\n",(0,l.jsx)(n.h2,{id:"api-reference-summary",children:"API Reference Summary"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Endpoint"}),(0,l.jsx)(n.th,{children:"Method"}),(0,l.jsx)(n.th,{children:"Purpose"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"/deploy-svc/deployment"})}),(0,l.jsx)(n.td,{children:"PUT"}),(0,l.jsx)(n.td,{children:"Save/update deployment"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"/deploy-svc/deployments"})}),(0,l.jsx)(n.td,{children:"POST"}),(0,l.jsx)(n.td,{children:"List deployments"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"/deploy-svc/deployment"})}),(0,l.jsx)(n.td,{children:"DELETE"}),(0,l.jsx)(n.td,{children:"Delete deployment"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"related-services",children:"Related Services"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/built-in-services/registry-svc",children:"Registry Svc"})}),": Service definitions and instance registry"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/built-in-services/container-svc",children:"Container Svc"})}),": Container runtime management"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/built-in-services/config-svc",children:"Config Svc"})}),": Configuration management"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/built-in-services/secret-svc",children:"Secret Svc"})}),": Secure configuration storage"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"roadmap--future-features",children:"Roadmap & Future Features"}),"\n",(0,l.jsx)(n.p,{children:"The Deploy Svc is actively evolving with planned features:"}),"\n",(0,l.jsx)(n.h3,{id:"near-term-enhancements",children:"Near-term Enhancements"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Blue-Green Deployments"}),": Zero-downtime deployment strategy"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Canary Releases"}),": Gradual traffic shifting"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Resource Quotas"}),": Per-service resource limits"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Health Check Configuration"}),": Custom health check endpoints"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"long-term-vision",children:"Long-term Vision"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Multi-Cloud Support"}),": Deploy across cloud providers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Advanced Scheduling"}),": Affinity and anti-affinity rules"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Persistent Volumes"}),": Stateful service support"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Service Mesh Integration"}),": Advanced networking features"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"For production deployments, monitor the project roadmap and consider manual deployment approaches until Deploy Svc reaches production readiness."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[6870],{29746:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>j,frontMatter:()=>y,metadata:()=>i,toc:()=>O});const i=JSON.parse('{"id":"1backend/get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","source":"@site/docs/1backend/get-users.api.mdx","sourceDirName":"1backend","slug":"/1backend/get-users","permalink":"/docs/1backend/get-users","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","sidebar_label":"List Users","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Read User by Token","permalink":"/docs/1backend/read-user-by-token"}}');var n=s(74848),r=s(28453),o=s(53746),a=s.n(o),p=s(56518),d=s.n(p),l=s(99972),c=s.n(l),u=s(25342),h=s.n(u),m=(s(44215),s(82223),s(24861));const y={id:"get-users",title:"List Users",description:"Fetches a list of users with optional query filters and pagination.",sidebar_label:"List Users",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},g=void 0,f={},O=[];function S(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"List Users"}),"\n",(0,n.jsx)(a(),{method:"post",path:"/user-svc/users",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Fetches a list of users with optional query filters and pagination."}),"\n",(0,n.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(d(),{parameters:void 0}),"\n",(0,n.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{query:{properties:{count:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"},filters:{description:"Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.",items:{properties:{fields:{items:{type:"string"},type:"array"},jsonValues:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"},op:{enum:["equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]}},type:"object"},type:"array"},jsonAfter:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON-encoded string due to limitations in Swaggo (e.g., []interface{} gets converted to []map[string]interface{}).\nThere is no way to specify a type that results in an any/interface{} type in the `go -> openapi -> go` generation process.\nAs a result, JSONAfter is a JSON-marshalled string representing an array, e.g., `[42]`.",type:"string"},limit:{description:"Limit the number of records in the result set.",type:"integer"},orderBys:{description:"OrderBys order the result set.",items:{properties:{desc:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"},field:{description:"The field by which to order the results",type:"string"},randomize:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"},sortingType:{allOf:[{enum:["","numeric","text","date"],type:"string","x-enum-varnames":["SortingTypeDefault","SortingTypeNumeric","SortingTypeText","SortingTypeDate"]}],description:"Defines the type of sorting to apply (numeric, text, date, etc.)"}},type:"object"},type:"array"}},type:"object"}},type:"object"}}},description:"Get Users Request"}}),"\n",(0,n.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"List of users retrieved successfully",content:{"application/json":{schema:{properties:{after:{type:"string"},count:{type:"integer"},users:{items:{properties:{contacts:{description:"Contacts are used for login and identification purposes.",items:{properties:{createdAt:{type:"string"},deletedAt:{type:"string"},id:{description:'The unique identifier, which can be a URL.\n\nExample values: "joe12" (1backend username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)',example:"twitter.com/thejoe",type:"string"},isPrimary:{description:"If this is the primary contact method",type:"boolean"},platform:{description:'Platform of the contact (e.g., "email", "phone", "twitter")',example:"twitter",type:"string"},updatedAt:{type:"string"},userId:{type:"string"},value:{description:'Value is the platform local unique identifier.\nIe. while the `id` of a Twitter contact is `twitter.com/thejoe`, the value will be only `thejoe`.\nFor email and phones the `id` and the `value` will be the same.\nThis field mostly exists for display purposes.\n\nExample values: "joe12" (1backend username), "thejoe" (twitter username), "joe@joesdomain.com" (email)',example:"thejoe",type:"string"},verified:{description:"Whether the contact is verified",type:"boolean"}},type:"object"},type:"array"},createdAt:{type:"string"},deletedAt:{type:"string"},id:{type:"string"},name:{description:"Full name of the organization.",example:"Jane Doe",type:"string"},passwordHash:{type:"string"},slug:{description:"URL-friendly unique (inside the Singularon platform) identifier for the `user`.",example:"jane-doe",type:"string"},updatedAt:{type:"string"}},type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function j(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(S,{...e})}):S(e)}}}]);
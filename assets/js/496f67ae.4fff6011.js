"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2949],{40952:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>y,contentTitle:()=>b,default:()=>X,frontMatter:()=>f,metadata:()=>i,toc:()=>x});const i=JSON.parse('{"id":"1backend-api/list-routes","title":"List Routes","description":"List routes that the edge proxy will use to route requests.","source":"@site/docs/1backend-api/list-routes.api.mdx","sourceDirName":"1backend-api","slug":"/1backend-api/list-routes","permalink":"/docs/1backend-api/list-routes","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-routes","title":"List Routes","description":"List routes that the edge proxy will use to route requests.","sidebar_label":"List Routes","hide_title":true,"hide_table_of_contents":true,"api":"eJy9V0uP2zYQ/isDnhLAlvaRoIUOi27atHC7bRb7OK33MJbGMmOKZEjKXtfQfy+GlL1+NShSID54teTMN988NV6LinzppA3SaFGIG+kDONMG8hBmGCDMCKiqCawzLytYSqWg9QTBJDFw9KUlH3wmBsJYcshIo0oUQkkf7iKUGIhe7IOpVqJYi9LoQDrwI1qrZBnV8s+eWayFL2fUID9Zx6BBkuf/ZJX+BGriQ1hZEoXwwUldi26wOUDncCW61wMz+UxlEB0fnfA40YS7RJKBHHlrtE9mL87O+M++Yq/DXlbg27Ik76etUisx+Fb3UuD3PDz0/5jHqALpY55YXeoa5rQqYGZ8AKtaDyZKogKLYQbW0VS+ZGP98QUbq6gYa4CxeMlK04wF7H2GV+CMCWCmEb8yDUq9I58z4vmr1vAKGlk6M3XR/wowQC9zqBS/L1h1eAUVkSV3oNuYVgfawehV9Fg/eoISPRXQtCpIq2hf14Mnt6AKWl2Ri9w9NpRiMmnDWHuy6JDhJyt4vLtJsfFUN6SDz+BX44B2AjSEP9HNKYbXy0DMKoUsXv6CfjYx6KrteY7WprvrqpEaHkd7VznyKftyY8y8tYCqNk6GWRPNnWfwgHNKWU1FmcijrhLVN5TV2TakW8S89eT8WLzNGOYigwe34l5tMJSzCKeMrhnOUS19IEcVjGIUrDO1I+/lgtQKuKWslbpmHAAIDqVi7/cCVfS3nPtD5xIVAHije/tvvyK9rbk3ierwCrAPXFS7zGA0BR94/mzwBoklYI1Sn6ayX8874NUmYxH93Un0KSo1wXLOAeToD41WqzT2jq3B8efVWrNXPNHk+2hSHyEDvUgf/AAchdZpeHf2LuM6eZhJzzlayIo8VBTINVJLH2S5yekw9fZ2DixlmJk2pppewLixdq0iIF1LTX4AcyLOcCyLxlSkwEuueG4RII2TbcKHE/RUjfV+h5amscZLni48/Y+HMbqawok53aX3gXRUieKJp9pW+PloZP+Xod4NxLtTM3qkF6hkBb/ff/rr28cyOWfcaTdOMzk/ZvKosQ0z4+TfVH03Ju9PxySQ49fBPc9IBx8j5veh1A2Ep7J1MqxE8bQWHwgdues2zETx9Nxx8rH2XBO3cd24X5RcEQ2FmeGVwhofxEBwSYpC5HEnGfpFmbvNnhEHv/MRvXWKpXJlSlTcZsX5+eXlD4LtbGjcs1vJk10yh0F7WFmCcS8yFjA1Spllen0geIslxdkczJw0YJmKG6bONLG9Hj059gZuTC01kK6skTpw20jGnxFWxFnQ2HDMrvtiiTl47S208g9KPcB5uXtdqvq3+XZJetok4rljE1Oz2bqwjCmmBiVHx6Mi/5OXum4VBmc0z7IdHrcjuG+tNY7jngI6C8EWeX7Oo5F0FUetONqrrkdDjUEu+lcz50WW5MEqDFPjGnZdyZK0j6Q39n67vYHFZXa2Z80Xeb5cLrNat5lxdd7r+Rxrq4aX2Vk2C42Ko4Jc4z9N75O1V7J+iXVNLpMmjyI5x1QGDpg4/5AcEQPBpZPon2U/ZheMyCXXoN7huLMxigOvdxbb/7lK9wkP9BJyq1Bq5hIjsu7L/0lsy5/368TneSC40Pl2veah/ehU1/Hxl5YcN93zQCzQSZyw709cHX3tccfMaSUK8XPyYchFz0FB1abiO5gK3WCjcV2WZMNXZXfb+PbT/YMYiEn/Y4DfPaIQDpfsCC5FIeKPCdZOezGfrYVCXbdYs2zC5D7Avl9fO4QpDTYP7NXmSq92GB52WHKEv9mtkyrrdeq/rtvKp6t/1di2dZLmLD53XfcP6RGWCA==","sidebar_class_name":"post api-method","info_path":"docs/1backend-api/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Save Certs","permalink":"/docs/1backend-api/save-certs"},"next":{"title":"Save Routes","permalink":"/docs/1backend-api/save-routes"}}');var o=s(74848),n=s(28453),r=s(57742),a=s.n(r),p=s(78178),c=s.n(p),l=s(19624),d=s.n(l),h=s(96226),u=s.n(h),m=(s(77675),s(19365),s(51107));const f={id:"list-routes",title:"List Routes",description:"List routes that the edge proxy will use to route requests.",sidebar_label:"List Routes",hide_title:!0,hide_table_of_contents:!0,api:"eJy9V0uP2zYQ/isDnhLAlvaRoIUOi27atHC7bRb7OK33MJbGMmOKZEjKXtfQfy+GlL1+NShSID54teTMN988NV6LinzppA3SaFGIG+kDONMG8hBmGCDMCKiqCawzLytYSqWg9QTBJDFw9KUlH3wmBsJYcshIo0oUQkkf7iKUGIhe7IOpVqJYi9LoQDrwI1qrZBnV8s+eWayFL2fUID9Zx6BBkuf/ZJX+BGriQ1hZEoXwwUldi26wOUDncCW61wMz+UxlEB0fnfA40YS7RJKBHHlrtE9mL87O+M++Yq/DXlbg27Ik76etUisx+Fb3UuD3PDz0/5jHqALpY55YXeoa5rQqYGZ8AKtaDyZKogKLYQbW0VS+ZGP98QUbq6gYa4CxeMlK04wF7H2GV+CMCWCmEb8yDUq9I58z4vmr1vAKGlk6M3XR/wowQC9zqBS/L1h1eAUVkSV3oNuYVgfawehV9Fg/eoISPRXQtCpIq2hf14Mnt6AKWl2Ri9w9NpRiMmnDWHuy6JDhJyt4vLtJsfFUN6SDz+BX44B2AjSEP9HNKYbXy0DMKoUsXv6CfjYx6KrteY7WprvrqpEaHkd7VznyKftyY8y8tYCqNk6GWRPNnWfwgHNKWU1FmcijrhLVN5TV2TakW8S89eT8WLzNGOYigwe34l5tMJSzCKeMrhnOUS19IEcVjGIUrDO1I+/lgtQKuKWslbpmHAAIDqVi7/cCVfS3nPtD5xIVAHije/tvvyK9rbk3ierwCrAPXFS7zGA0BR94/mzwBoklYI1Sn6ayX8874NUmYxH93Un0KSo1wXLOAeToD41WqzT2jq3B8efVWrNXPNHk+2hSHyEDvUgf/AAchdZpeHf2LuM6eZhJzzlayIo8VBTINVJLH2S5yekw9fZ2DixlmJk2pppewLixdq0iIF1LTX4AcyLOcCyLxlSkwEuueG4RII2TbcKHE/RUjfV+h5amscZLni48/Y+HMbqawok53aX3gXRUieKJp9pW+PloZP+Xod4NxLtTM3qkF6hkBb/ff/rr28cyOWfcaTdOMzk/ZvKosQ0z4+TfVH03Ju9PxySQ49fBPc9IBx8j5veh1A2Ep7J1MqxE8bQWHwgdues2zETx9Nxx8rH2XBO3cd24X5RcEQ2FmeGVwhofxEBwSYpC5HEnGfpFmbvNnhEHv/MRvXWKpXJlSlTcZsX5+eXlD4LtbGjcs1vJk10yh0F7WFmCcS8yFjA1Spllen0geIslxdkczJw0YJmKG6bONLG9Hj059gZuTC01kK6skTpw20jGnxFWxFnQ2HDMrvtiiTl47S208g9KPcB5uXtdqvq3+XZJetok4rljE1Oz2bqwjCmmBiVHx6Mi/5OXum4VBmc0z7IdHrcjuG+tNY7jngI6C8EWeX7Oo5F0FUetONqrrkdDjUEu+lcz50WW5MEqDFPjGnZdyZK0j6Q39n67vYHFZXa2Z80Xeb5cLrNat5lxdd7r+Rxrq4aX2Vk2C42Ko4Jc4z9N75O1V7J+iXVNLpMmjyI5x1QGDpg4/5AcEQPBpZPon2U/ZheMyCXXoN7huLMxigOvdxbb/7lK9wkP9BJyq1Bq5hIjsu7L/0lsy5/368TneSC40Pl2veah/ehU1/Hxl5YcN93zQCzQSZyw709cHX3tccfMaSUK8XPyYchFz0FB1abiO5gK3WCjcV2WZMNXZXfb+PbT/YMYiEn/Y4DfPaIQDpfsCC5FIeKPCdZOezGfrYVCXbdYs2zC5D7Avl9fO4QpDTYP7NXmSq92GB52WHKEv9mtkyrrdeq/rtvKp6t/1di2dZLmLD53XfcP6RGWCA==",sidebar_class_name:"post api-method",info_path:"docs/1backend-api/1-backend",custom_edit_url:null},b=void 0,y={},x=[];function k(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"List Routes"}),"\n",(0,o.jsx)(a(),{method:"post",path:"/proxy-svc/routes",context:"endpoint"}),"\n",(0,o.jsx)(t.p,{children:"List routes that the edge proxy will use to route requests."}),"\n",(0,o.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(c(),{parameters:void 0}),"\n",(0,o.jsx)(d(),{title:"Body",body:{content:{"application/json":{schema:{properties:{ids:{items:{type:"string"},type:"array"}},type:"object"}}},description:"List Routes Request"}}),"\n",(0,o.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"Routes listd successfully",content:{"application/json":{schema:{properties:{routes:{items:{properties:{id:{description:'Id is the routing key: host plus optional path prefix.\nExample:\n  "x.com"              -> root of the domain\n  "x.com/path1"        -> microfrontend at /path1\n  "x.com/path1/path2"  -> deeper microfrontend mounted at /path1/path2\n\nUse case: multiple microfrontends served under the same host but\nseparated by URL path segments. For example:\n  - Marketing site at x.com\n  - Dashboard at x.com/app\n  - Admin UI at x.com/app/admin\n\nLookup algorithm:\n  1. Take the request host and path (e.g. "x.com/app/admin/users").\n  2. Try to match the longest registered Id by progressively stripping\n     trailing path segments:\n        - x.com/app/admin/users   (no match)\n        - x.com/app/admin         (match -> admin UI)\n  3. If still no match, strip again:\n        - x.com/app               (match -> dashboard)\n  4. If still no match, fallback to host-only route:\n        - x.com                   (match -> marketing site)\n  5. If no host-only route exists, return 404.\n\nThis provides deterministic longest-prefix routing without regex or\nrule engines, keeping the model simple but enabling path-based\nmicrofrontend composition.',type:"string"},target:{type:"string"}},required:["id","target"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function X(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(k,{...e})}):k(e)}}}]);
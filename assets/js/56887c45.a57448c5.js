"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2461],{28046:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>I,frontMatter:()=>h,metadata:()=>s,toc:()=>b});const s=JSON.parse('{"id":"1backend-api/prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","source":"@site/docs/1backend-api/prompt.api.mdx","sourceDirName":"1backend-api","slug":"/1backend-api/prompt","permalink":"/docs/1backend-api/prompt","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","sidebar_label":"Prompt an AI","hide_title":true,"hide_table_of_contents":true,"api":"eJztPGtz2ziSfwXFL5O4KFmZ3D7OVVd7zmtGO8nEa9k7VRelZIhskRiTAAOAkjUu//erboAvCXKcnb29uyp9SWSi0WigH+gXeR+lYBItKiuUjM6iGcjUMM4qrcrKMi5TtuHCGrZSmnGmwVRKGmBixcxWJkwYZnUNYzbtHqx4YSBmPE0Nszk0uKyiv77UUAMh1mBrLQ0TZQmp4BaK7Xgu5/KC4A1LuGRLYLWBlJa/sXBnR1aN8P+buPtblDwDfEA/+k9wGWVz0MxuKzBMrVgGEjTH7Y7ncrpiUrFSpVCw6Rsk3lSQiJWANCZqU1jxurAeZCOKoiXpmQFgNx9oYLZObojGFCwXhXk+Zld7s0u+ZUrTf1JZZuqqUtrSMhq+1GAspD3yiGQ6kJMTdyRCZgzXMycnczliJyc/iiwfvYc1FOyCa16CBW1OTs7YtQHDKg0prISElFXtKNNQwJpL4scTThBsgnsRhjbB+NJYzRNrGN/wLdFeyxR0sUXiQGZCAnsG42wcs/fv+YfzmM0sXxbA3ojVqjZCyefElZVKaiRSSbaqZYIb5oWwKAG4s7eEaTRz3EhC27txq3UjN7ilVGhIbLH1jNwyLtn51FMWM7irlEFSeVEwvuaiIOJ654NcxEMb2RpPLlHSalU0fABdCoO7MOwSvtRCQ3p2csJunIyPzDo5cz/PEg3cwk0UR6ryHJ2m0VnkhqM48jx/pdJtdHYf4UIgLf7kVVWIhKac/mpQL+8jk+RQcvxVaURoBRj8a/cQaH5RfFxFZ592YYuCl/x1VQ2hhzAWyqrgFvD30DRc+RFUok6tx+xj5ZhHNgAFu9JgQFom7HeGpaDFGhVYq5KEt5im4yiO4I6XVQHRWfRp+vPs6vO9Q/fw6ZT+jOIIxT86i4zVQmbRw0P7RC1/hcRGD3FkSLRayQrs5s5+Py2zxw6FFxu+NUou3F7dszQVblMXQ3RDkgIULblN8oURv0EPXkgLGWgcT1bZwiS86A/Lulz6UVWWIH8vDSlIJVDIF8ZqkJnNg4ulwuDpLeDOar6QYDdK3/aXWCpVAJcEqxZS2YXha1hkWqRfhzLE3gPoQNLKuT4wbHmQ4pXQxlbcmAVZp+BpOJicG1jkILLchvnQA9uIdHBCfSilE1hYbm4Xgz13yz22Rq4XSQ7JbaWEtAvJyzDFuV5IyLgVa1h443AA7PFRDSh2i7uDxHiA7UEAxzP9KKmHhZcGc0jrAvTB2ZAomS6Ih8ZCZQ7SUle0UhiTkCuFV1dwUC6EHczrIX7KQas1aC1SWBiweOX+Tm3cQ4d8sErDgq8s6A3X6QEteYRGTfd6X74eBTMbgWaJ2yDjGnpWPDmksGaR5LWWwelmUQq5qCVy9gAA2qOw0JiFLfndwSFxYEkvqEKmcBfc+VdFmYwUmZFDW35Ult1lseDaiYewUD4qD1xrvu1NPEwXQBqWXRxpdBhv08UBo7UHtzkEJ9PHT+Cwghq79cb9G3ZeLx/ZnBt8/MayokDcQWIPWvF9nfwc73k2d+QO02H0fMHQ5Cega93NU/SXVkqX7BlkY/Ye3a+QP2waL7e/dBy5K2eIe5pSyEVut/hSA0YtQ39s33OKo5LfXYLV3mYNMX5ox7rYh+Vqw0out8yKEtx6ZmsslMzkqi4odtPbLk7c5CCZsOwWoDIMtFa49MDPezGJA3wvnUcYIMsN4G5/rY2Lkl684sktyJQhAi150ds9IRo6lnmdZUJmaNZOr3J4VahbOC0FBjDF6E/LkZDG6jqxo/Vk/P34by8XPy1m4yyrV6EjrJ7kYeOldKWmjXey42ni+dpL9Ov393te0JbwcmIUWak2gklFCdLFHD6ymkcv/nj27/OIfp29mEfPg2wnZ3TmfdHhcj+TUuHhOQuA6/nQE1gFmtHcHtYez1r/ctZT1iH61y5qMk6Q6iRna66FC2uFQf5pldYJICu92pUqRR0gGNNbuFN/5zVek2Pg7cBw1V9ycLG+YhhCbdn5dLTkGKvXzaQe4p7xQB11l+MQ4cfaVrVlbpgiQxS15pxST/mzSmYx+7XKYraBZeVi5jBHslqkXCYwa7yo4Xo/qg1LCmWgcKG1cut7nVupolCbsK733LBHPNLG/bloPYsdIWQNRC9p04jhJuctKUtgfK1E6hiIFNFRBPcs63JqfQQcsD+dJJLIDUUxLIDVAfKv6GREyfW2oR951qRUZNajdC7fuOSMaRJTVlWjgnIpfq5w4WxrFV2+aKlszrimE1rTCTzb5CLJ94/mOaaQMB8moEiZ5bcuJ5NACjIJn9WXmpIgFxhBBzbonjMPxRqPsk24qE3MPkAq6jJmmBuK2XVhNQ/Lonf73jVe30FdApmjzLIVTwQvmhQXHS0msDTmB8N6NfChdhKN/lT95YI2GxlUgs1V6hJsaY2k9hN2oW00PsWO5vqkBMNhIlVDRTZHLAXlmZpshQEbY2aTy1SVDlwYIiAsfK1XdNCgyhVo5DAjUFrcGYrgToJe1RD3e2EsYubaCmNFwhwgc/aodCpDFg/xPt0ja32mHR+DiO3fOgRIaTtnXVDpK3EHmOgM7CQUBrmb8coHbf9vc07/E+4fz6QitnY+xngurw3glg2wXGQ585apy1OSy7VVNUuV/M6yBE0SX6rauUo8sTUv2rSnksV2LnFgkGx1hNm++xt7WW3+fo5unTd1ZvyY9b3wVtNpdAnGIB5hDRQrhuvMo19yjvzhbMkll/wvA54EBveVfSuTgC3BwkOKPKdjIbvVFDDStEmuNwYa6xlOlrnMWC2tKNzRVO0GUiWBwR0kNdrXMXu1bVP5PUDySzOwhuElrSTjrrgxl4gdAZNCoFBS2YCgMcxJtFjS+XJ2lWvgKUM/ipfjuXynNPtSi+SW6EuFRiPvNioz9KVgDdrJuFpZkN49B26EM9UpXmV0JeBJ5VpJVRsqq0zxmlYGWMIxeY7XCB0bXn5YwAnab0v0hdzzKz/SsLtzxN2cLjRYQqGQIKvGc/maDsQMz2FwCmTLsLJCUizNxvtzHl08l0oT9T7lPsaN3jTb8GWqZaGSW8ryE4LAvfHg8u+Yv4/OPjUy/Xlf3x/21DtNmRf1SydYUR8XUuEuVyqUkX37fjIJ3FA/RfE/mvTvVPBQIOKqD+l5QE9fN0MN71CIhgaW0fRDN+6x5HAsORxLDseSw7HkcCw5HEsOx5LDseTwf7vk8LqqvqHqQMn7fVfsLT5mFnOAXGMc4bMz3mH0wZKSMabNuNwGPcd/XkWj4MZe1jKQK3EDId8W5zT06jrs2x4rJcdKybFScqyUHCslx0rJsVJyrJQcKyX/W5WSA17rsVjy5GKJr3t8cMin4WxSk6j+ClQtX6taBjZy6UearchWuzuHuHF9uSFvWJDFolMj/9ccUHFu6x0XEmRdYrq+sZZpRKRJpJJSmVUBlp4SYvrFl2ivJP1O0DrjtM+7xxVHdyPEPlpzjYGywWUck2ZEyKy3ZP/5Zbt8/+nrHin9529bsvpPz3skDrC05O7rjoPYjZSOJbJvLJEdK2SHKmTNg5D+0b03uvIvD9FVFUd/Fwat6N9QkDB6OSfMTjfeqKTGMkN4tEHkosHYow89+LtIQUVxdE2pP58eZe4a/qH1GXoomwn/BVqNZrmyHvh1wY1po6gBwEe6rtgbsJDsYHv5pk9M9xd7B9zWGtjbO3o7ys36CbaUJw2i8ocWPg/NpSkaymZ1WXItfutvbbjZd6IoRh+4ue3hn1UASd57cF6nAk/ivLaq5HiDOhB2CYnKpPC4CGwInwq1f16XgBlxnQCx9T1w7c3gpVoqKxI06j9oXuXsA09yfCushfkW43u1rYCO+KrziuLemBO65hT7h9jBNML3ONRVLyER761+eKCRsG5gIJwENeDW7pL7CFAWURRp7t7J78M5ie1L2e4aJKp7pIeeekkeCHIH0oj0Y2vt8egr5z4Q9u75rtgPlzlwoqgJXhF2yWoVYnegEfTueasibs5QQfpgqVDh+alQj/BtoDs91elBdErUPSR18trUKVMgt7ytwOWOVqB1493jbXHTf1kS36h9u/cKJYXg47l8m43ZOb7CSZ5468L5F2DnAzs2j+K55OSsQ9E56wxdhP0ZJGbziHI/eM3UVXqoVeG6GWouUUrhUk53x6/0SIL3WG1Ah27oa3pOb3hyIXdvaZzFNrnCm7gUFpNYj+akn9pRsscuHwoMyGgyB8OuDMq+427JUfItHmy5dckT78ON55Je1xUyKeoUmm3FLRK4szFz3nX/BWlujEoEYSzB8pRbPg4ECE9uOgmUyQuYpoGg/Z0bYO5lZUcwAjNuLU9yak8YhEk5N98Wvru6Qxc9lSZbQDn7eFH88oc/q2AdwDcEhIuw6EgdiNxDkfmd4y5elE0O3u/ERXo/iphyht+hHP9lHgWdsa87mkPcwzDe5pp2DG+vfznPglrSV8Nv1SGvniLd056NVhYGdDkf/nzaPDD93J8wDMrKhspHOwrWCRvxt3dC/b08Qf8um28aNEwZaGL7xQMK/OnNdVGAabSspbpSVV2Q9mD6gLzsXgueVz7Dnt3QVxL+g3zxm+f+MHgANB4uT3a0TaT6VHKns3PZ5hBSkNbVppYuN36zF+PfNGzyIcJsnYzdrxvmzokpTMv1O8J8RItpjUCyB5/9W6jNbSrXvBAp++vs48//eMNbW5T8etrJUfIiIKqS1zZXWvzmcgH/Ekr+ED4TX5SbgcZolbIC/yKSKA+c1FrYLVnwV8A16PMa05ufyJmwPOs54PhpC9Qil27G7xco6nisOM6ITrsPH5y2XzYwtC1D+GtdINhpoRJe5MrYsxcvXr78E+lhQwjmVkq3lz45e4YO/Zq5B5lHvsrj5JwzU/HEfVfEqluQjCfOVnTeD9oq3A57rzIhGciUfFm6ShB/DjwF5IPrlMBIicSlceCaW6USP8GWjhc5c9l9xuFtY27Dn2UI90J2Kd0DudZw0+GgzXCvnXCnLXAy6AKcDLr+DnTvTQ5367nbb78/b/9525Hnhno9eP4BXrKTQJddFxkGmusmoV66yV7rXIejNzHUINcDDPTFDUaDD7suuMlO09sk0OM2mNpxZNjKNgTa72Cb7DSsdfBdn1r3rGlPmwS60TqoUBPak5vJHD/3kYa6xvZHe81ik73mMIe6bQeb7LZ/TXrtXpOuvWvStXNN9tq3OhIOMWfQrOVJCPFn0JX1qXn+eafrqgdPRbhJuLcq9HjjH/c6pzw5rSg01bDB8k3r0yTU6TTpOpscskaL6IIYak+/JQZbU9pGlN/VNlLtGMFBN8ig/6OjpNelMQk2V0wCrQ9uf03fQodsp8FgMjATu+X/ni4Na/STkNDv1Kb78t4vJD8mVS3rHmVyy7XdquHXL5VebSpUTHJVBB/ntKHHTj9s5D9bxBNaFEou8LI3vADzn8gZ9Ii1kuNElb1r9WLKZu7bV+iqk3+QW1udnZ6+WLq2JZxwGu2/ejEd+b6fUiTYhKbXIsFWAV89xJu8EAlI1/nZrPfDxXu2fjmeDFYzZ6enm81mnMl6rHR26ueZU55VxejleDLObVm4qE6X5uNq5lbriDUbnmWgx0KdEsgpugjCUrjV9F9FcYSekCN/Mv7zeDLSyR+pMKiMLbns0XnRfHKNnU+jna33Pg91/ETb8RNtx0+0/ZM/0eZdezxr7EUQVNsjY3HvI50mo4fzo7iX3sOYBofv77GB7loXDw/4+EsNGiOsz3FEDX1LtAufPlPbGYUZGBzdwta3AIK0I4xv0GDwonZxxk4I+BA3M86TBCjSOgzbD9kuPs6u8Pr0X5pDKYnOIs03eCXxTXQW0Vfq2rYzenYfFVxmtXPHHU68NHg96HnmlUCS4uYH7qoZktsehbvBlNsI/ovbCk65v3eh1sNDC++GDs5oIzgHjWz8/PDw8N/dTFmM","sidebar_class_name":"post api-method","info_path":"docs/1backend-api/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Upsert an Instance","permalink":"/docs/1backend-api/upsert-instance"},"next":{"title":"List Prompts","permalink":"/docs/1backend-api/list-prompts"}}');var i=r(74848),n=r(28453),o=r(57742),p=r.n(o),a=r(78178),d=r.n(a),m=r(19624),c=r.n(m),l=r(96226),g=r.n(l),y=(r(77675),r(19365),r(51107));const h={id:"prompt",title:"Prompt an AI",description:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.",sidebar_label:"Prompt an AI",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend-api/1-backend",custom_edit_url:null},u=void 0,f={},b=[];function x(e){const t={code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"Prompt an AI"}),"\n",(0,i.jsx)(p(),{method:"post",path:"/prompt-svc/prompt",context:"endpoint"}),"\n",(0,i.jsx)(t.p,{children:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately."}),"\n",(0,i.jsxs)(t.p,{children:["Prompts can be used for ",(0,i.jsx)(t.code,{children:"text-to-text"}),", ",(0,i.jsx)(t.code,{children:"text-to-image"}),", ",(0,i.jsx)(t.code,{children:"image-to-image"}),", and other types of generation.\nIf no model ID is specified, the default model will be used (see ",(0,i.jsx)(t.code,{children:"Model Svc"})," for details). The default model may or may not support the requested generation type."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Prompting Modes"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"High-Level Parameters"}),": Uses predefined parameters relevant to ",(0,i.jsx)(t.code,{children:"text-to-image"}),", ",(0,i.jsx)(t.code,{children:"image-to-image"}),", etc. This mode abstracts away the underlying engine (e.g., LLaMA, Stable Diffusion) and focuses on functionality."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Engine-Specific Parameters"}),": Uses ",(0,i.jsx)(t.code,{children:"engineParameters"})," to directly specify an AI engine, exposing all available parameters for fine-tuned control."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Permissions Required:"})," ",(0,i.jsx)(t.code,{children:"prompt-svc:prompt:create"})]}),"\n",(0,i.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(d(),{parameters:void 0}),"\n",(0,i.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) specific parameters"},id:{description:"Id is the unique ID of the prompt.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things synchronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}},required:["prompt"],type:"object"}}},description:"Add Prompt Request",required:!0}}),"\n",(0,i.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{prompt:{allOf:[{properties:{createdAt:{description:"CreatedAt is the time of the prompt creation.",type:"string"},engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) specific parameters"},error:{description:"Error that arose during prompt execution, if any.",type:"string"},id:{description:"Id is the unique ID of the prompt.",type:"string"},lastRun:{description:"LastRun is the time of the last prompt run.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},requestMessageId:{type:"string"},responseMessageId:{type:"string"},runCount:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"},status:{allOf:[{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}],description:"Status of the prompt."},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"},type:{allOf:[{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]}],description:'Type is inferred from the `Parameters` or `EngineParameters` field.\nEg. A LLamaCpp prompt will be "Text-to-Text",\na Stabel Diffusion one will be "Text-to-Image" etc.'},updatedAt:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"},userId:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}},required:["prompt"],type:"object"}],description:"Prompt contains the details of the prompt that was just created by this request.\nThis includes the ID, prompt text, status, and other associated metadata."},responseMessage:{allOf:[{properties:{createdAt:{type:"string"},fileIds:{description:"FileIds defines the file attachments the message has.",items:{type:"string"},type:"array"},id:{example:"msg_emSOPlW58o",type:"string"},meta:{additionalProperties:!0,type:"object"},text:{description:'Text content of the message eg. "Hi, what\'s up?"',type:"string"},threadId:{description:"ThreadId of the message.",example:"thr_emSOeEUWAg",type:"string"},updatedAt:{type:"string"},userId:{description:"UserId is the id of the user who wrote the message.\nFor AI messages this field is empty.",type:"string"}},required:["createdAt","id","threadId","updatedAt"],type:"object"}],description:"Response message contains the response text and files.\nThis field is populated only for synchronous prompts (`sync = true`).\nFor asynchronous prompts, the response will provided in the associated\nmessage identified by the `responseMessageId` of the `promptSvc.prompt` object once the prompt completes."}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function I(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}}}]);
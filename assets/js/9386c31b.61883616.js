"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3386],{78675:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"running-the-server/locally","title":"Running the 1Backend server locally","description":"The easiest way to run 1Backend is to use Docker Compose.","source":"@site/docs/running-the-server/locally.md","sourceDirName":"running-the-server","slug":"/running-the-server/locally","permalink":"/docs/running-the-server/locally","draft":false,"unlisted":false,"editUrl":"https://github.com/1backend/1backend/tree/main/docs-source/docs/running-the-server/locally.md","tags":[{"inline":true,"label":"run","permalink":"/docs/tags/run"},{"inline":true,"label":"deploy","permalink":"/docs/tags/deploy"},{"inline":true,"label":"local","permalink":"/docs/tags/local"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"tags":["run","deploy","local"]},"sidebar":"tutorialSidebar","previous":{"title":"Running the server","permalink":"/docs/category/running-the-server"},"next":{"title":"Running the 1Backend server with Docker Compose and prebuilt images","permalink":"/docs/running-the-server/docker-compose"}}');var i=s(74848),r=s(28453);const o={sidebar_position:1,tags:["run","deploy","local"]},t="Running the 1Backend server locally",l={},c=[{value:"Using Docker Compose",id:"using-docker-compose",level:2},{value:"Once it&#39;s running in Docker Compose",id:"once-its-running-in-docker-compose",level:3},{value:"Running natively (Go &amp; Angular)",id:"running-natively-go--angular",level:2},{value:"Running the backend natively (with Go)",id:"running-the-backend-natively-with-go",level:2},{value:"Running the frontend natively (with Angular)",id:"running-the-frontend-natively-with-angular",level:2},{value:"Once it&#39;s running on the host",id:"once-its-running-on-the-host",level:3},{value:"Administration",id:"administration",level:2},{value:"Local files",id:"local-files",level:3},{value:"Download &amp; Uploads",id:"download--uploads",level:4},{value:"Data files",id:"data-files",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"running-the-1backend-server-locally",children:"Running the 1Backend server locally"})}),"\n",(0,i.jsxs)(n.p,{children:["The easiest way to run 1Backend is to use ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"using-docker-compose",children:"Using Docker Compose"}),"\n",(0,i.jsxs)(n.p,{children:["The easiest way to run this is to clone ",(0,i.jsx)(n.a,{href:"https://github.com/1backend/1backend",children:"the repo"}),", step into the repo root and run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"git clone git@github.com:1backend/1backend.git\ncd 1backend\ndocker compose up\n# or use the -d flag to run it in the background\n# docker compose up -d\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"docker-compose-yaml"})," in the root folder is designed to build and run the current code. For a more production ready Docker Compose file see the ",(0,i.jsx)(n.a,{href:"./docker-compose/",children:"Running the 1Backend server with Docker Compose and prebuilt images"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"once-its-running-in-docker-compose",children:"Once it's running in Docker Compose"}),"\n",(0,i.jsxs)(n.p,{children:["After the containers successfully start, you can go to ",(0,i.jsx)(n.a,{href:"http://127.0.0.1:3901",children:"http://127.0.0.1:3901"})," and log in with the ",(0,i.jsx)(n.a,{href:"/docs/running-the-server/using#default-credentials",children:"Default Credentials"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"running-natively-go--angular",children:"Running natively (Go & Angular)"}),"\n",(0,i.jsx)(n.p,{children:"If you have both Go and Angular installed on your computer, the easiest way to dip your feet into 1Backend is to run things locally."}),"\n",(0,i.jsx)(n.h2,{id:"running-the-backend-natively-with-go",children:"Running the backend natively (with Go)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd server;\ngo run main.go\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-the-frontend-natively-with-angular",children:"Running the frontend natively (with Angular)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd desktop/workspaces/angular-app/;\nnpm run start\n"})}),"\n",(0,i.jsx)(n.h3,{id:"once-its-running-on-the-host",children:"Once it's running on the host"}),"\n",(0,i.jsxs)(n.p,{children:["After the both the backend and frontend starts, you can go to ",(0,i.jsx)(n.a,{href:"http://127.0.0.1:4200",children:"http://127.0.0.1:4200"})," and log in with the ",(0,i.jsx)(n.a,{href:"/docs/running-the-server/using#default-credentials",children:"Default Credentials"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"administration",children:"Administration"}),"\n",(0,i.jsx)(n.h3,{id:"local-files",children:"Local files"}),"\n",(0,i.jsxs)(n.p,{children:["By default 1Backend uses the folder ",(0,i.jsx)(n.code,{children:"~/.1backend"})," on your machine for data tables, file downloads, file uploads.\nThe ",(0,i.jsx)(n.code,{children:"~/.1backend/cliConfig.yaml"})," file is where the ",(0,i.jsx)(n.a,{href:"/docs/command-line/basics",children:(0,i.jsx)(n.code,{children:"oo CLI"})})," stores all its data."]}),"\n",(0,i.jsx)(n.h4,{id:"download--uploads",children:"Download & Uploads"}),"\n",(0,i.jsxs)(n.p,{children:["Downloads and uploads are managed by the ",(0,i.jsx)(n.a,{href:"/docs/built-in-services/file-svc",children:"File Svc"}),", and by default are stored here:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"~/.1backend/downloads\n~/.1backend/uploads\n"})}),"\n",(0,i.jsx)(n.h4,{id:"data-files",children:"Data files"}),"\n",(0,i.jsx)(n.p,{children:"By default 1Backend uses local gzipped json files to store database entries. Data access across 1Backend is interface based so the this implementation can be easily swapped out for PostgreSQL and other database backends."}),"\n",(0,i.jsx)(n.p,{children:"These files are located at"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ls ~/.1backend/data\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Each file is prefixed by the owner service slug, so the ",(0,i.jsx)(n.code,{children:"User Svc"})," ",(0,i.jsx)(n.code,{children:"users"})," table becomes ",(0,i.jsx)(n.code,{children:"userSvcUsers"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"If you want to view the contents of a file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cat ~/.1backend/data/userSvcUsers.zip | gzip -dc\n\n# or if you jave jq installed\ncat ~/.1backend/data/userSvcUsers.zip | gzip -dc | jq\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var a=s(96540);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);
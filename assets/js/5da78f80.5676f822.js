"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[6870],{29746:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>j,frontMatter:()=>m,metadata:()=>s,toc:()=>v});const s=JSON.parse('{"id":"1backend/get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","source":"@site/docs/1backend/get-users.api.mdx","sourceDirName":"1backend","slug":"/1backend/get-users","permalink":"/docs/1backend/get-users","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","sidebar_label":"List Users","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Read User by Token","permalink":"/docs/1backend/read-user-by-token"}}');var r=i(74848),n=i(28453),a=i(53746),o=i.n(a),p=i(56518),d=i.n(p),l=i(99972),c=i.n(l),u=i(25342),h=i.n(u),y=(i(44215),i(82223),i(24861));const m={id:"get-users",title:"List Users",description:"Fetches a list of users with optional query filters and pagination.",sidebar_label:"List Users",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},f=void 0,g={},v=[];function w(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"List Users"}),"\n",(0,r.jsx)(o(),{method:"post",path:"/user-svc/users",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"Fetches a list of users with optional query filters and pagination."}),"\n",(0,r.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(d(),{parameters:void 0}),"\n",(0,r.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{query:{properties:{count:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"},filters:{description:"Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.",items:{properties:{fields:{items:{type:"string"},type:"array"},jsonValues:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"},op:{enum:["or","equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpOr","OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]},subFilters:{description:"SubFilters is used for operations like OR where multiple filters are combined.",items:"circular()",type:"array"}},type:"object"},type:"array"},jsonAfter:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON-encoded string due to limitations in Swaggo (e.g., []interface{} gets converted to []map[string]interface{}).\nThere is no way to specify a type that results in an any/interface{} type in the `go -> openapi -> go` generation process.\nAs a result, JSONAfter is a JSON-marshalled string representing an array, e.g., `[42]`.",type:"string"},limit:{description:"Limit the number of records in the result set.",type:"integer"},orderBys:{description:"OrderBys order the result set.",items:{properties:{desc:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"},field:{description:"The field by which to order the results",type:"string"},randomize:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"},sortingType:{allOf:[{enum:["","numeric","text","date"],type:"string","x-enum-varnames":["SortingTypeDefault","SortingTypeNumeric","SortingTypeText","SortingTypeDate"]}],description:"Defines the type of sorting to apply (numeric, text, date, etc.)"}},type:"object"},type:"array"}},type:"object"}},type:"object"}}},description:"Get Users Request"}}),"\n",(0,r.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"List of users retrieved successfully",content:{"application/json":{schema:{properties:{after:{type:"string"},count:{type:"integer"},users:{items:{properties:{contacts:{description:"Contacts are used for login and identification purposes.",items:{properties:{createdAt:{type:"string"},deletedAt:{type:"string"},id:{description:'The unique identifier, which can be a URL.\n\nExample values: "joe12" (1backend username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)',example:"twitter.com/thejoe",type:"string"},isPrimary:{description:"If this is the primary contact method",type:"boolean"},platform:{description:'Platform of the contact (e.g., "email", "phone", "twitter")',example:"twitter",type:"string"},updatedAt:{type:"string"},userId:{type:"string"},value:{description:'Value is the platform local unique identifier.\nIe. while the `id` of a Twitter contact is `twitter.com/thejoe`, the value will be only `thejoe`.\nFor email and phones the `id` and the `value` will be the same.\nThis field mostly exists for display purposes.\n\nExample values: "joe12" (1backend username), "thejoe" (twitter username), "joe@joesdomain.com" (email)',example:"thejoe",type:"string"},verified:{description:"Whether the contact is verified",type:"boolean"}},type:"object"},type:"array"},createdAt:{type:"string"},deletedAt:{type:"string"},id:{type:"string"},name:{description:"Full name of the organization.",example:"Jane Doe",type:"string"},passwordHash:{type:"string"},slug:{description:"URL-friendly unique (inside the Singularon platform) identifier for the `user`.",example:"jane-doe",type:"string"},updatedAt:{type:"string"}},required:["id","slug"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function j(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(w,{...e})}):w(e)}}}]);
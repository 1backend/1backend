"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[39],{77863:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>y,default:()=>P,frontMatter:()=>u,metadata:()=>r,toc:()=>b});const r=JSON.parse('{"id":"1backend/prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","source":"@site/docs/1backend/prompt.api.mdx","sourceDirName":"1backend","slug":"/1backend/prompt","permalink":"/docs/1backend/prompt","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"prompt","title":"Prompt an AI","description":"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.","sidebar_label":"Prompt an AI","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Upsert an Instance","permalink":"/docs/1backend/upsert-instance"},"next":{"title":"List Prompts","permalink":"/docs/1backend/list-prompts"}}');var s=i(74848),n=i(28453),o=i(53746),p=i.n(o),a=i(56518),c=i.n(a),d=i(99972),m=i.n(d),l=i(25342),g=i.n(l),h=(i(44215),i(82223),i(24861));const u={id:"prompt",title:"Prompt an AI",description:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately.",sidebar_label:"Prompt an AI",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},y=void 0,f={},b=[];function T(e){const t={code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Prompt an AI"}),"\n",(0,s.jsx)(p(),{method:"post",path:"/prompt-svc/prompt",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Sends a prompt and waits for a response if sync is true. If sync is false, adds the prompt to the queue and returns immediately."}),"\n",(0,s.jsxs)(t.p,{children:["Prompts can be used for ",(0,s.jsx)(t.code,{children:"text-to-text"}),", ",(0,s.jsx)(t.code,{children:"text-to-image"}),", ",(0,s.jsx)(t.code,{children:"image-to-image"}),", and other types of generation.\nIf no model ID is specified, the default model will be used (see ",(0,s.jsx)(t.code,{children:"Model Svc"})," for details). The default model may or may not support the requested generation type."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prompting Modes"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"High-Level Parameters"}),": Uses predefined parameters relevant to ",(0,s.jsx)(t.code,{children:"text-to-image"}),", ",(0,s.jsx)(t.code,{children:"image-to-image"}),", etc. This mode abstracts away the underlying engine (e.g., LLaMA, Stable Diffusion) and focuses on functionality."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Engine-Specific Parameters"}),": Uses ",(0,s.jsx)(t.code,{children:"engineParameters"})," to directly specify an AI engine, exposing all available parameters for fine-tuned control."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Permissions Required:"})," ",(0,s.jsx)(t.code,{children:"prompt-svc:prompt:create"})]}),"\n",(0,s.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(c(),{parameters:void 0}),"\n",(0,s.jsx)(m(),{title:"Body",body:{content:{"application/json":{schema:{properties:{engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) specific parameters"},id:{description:"Id is the unique ID of the prompt.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. Llama, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things synchronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}},required:["prompt"],type:"object"}}},description:"Add Prompt Request",required:!0}}),"\n",(0,s.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{prompt:{allOf:[{properties:{createdAt:{description:"CreatedAt is the time of the prompt creation.",type:"string"},engineParameters:{allOf:[{properties:{llamaCppParameters:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"},stableDiffusion:{properties:{txt2Img:{allOf:[{properties:{alwayson_scripts:{additionalProperties:{type:"string"},type:"object"},batch_size:{type:"integer"},cfg_scale:{type:"number"},comments:{additionalProperties:{type:"string"},type:"object"},denoising_strength:{type:"number"},disable_extra_networks:{type:"boolean"},do_not_save_grid:{type:"boolean"},do_not_save_samples:{type:"boolean"},enable_hr:{type:"boolean"},eta:{type:"number"},firstpass_image:{type:"string"},firstphase_height:{type:"integer"},firstphase_width:{type:"integer"},force_task_id:{type:"string"},height:{type:"integer"},hr_checkpoint_name:{type:"string"},hr_negative_prompt:{type:"string"},hr_prompt:{type:"string"},hr_resize_x:{type:"integer"},hr_resize_y:{type:"integer"},hr_sampler_name:{type:"string"},hr_scale:{type:"number"},hr_scheduler:{type:"string"},hr_second_pass_steps:{type:"integer"},hr_upscaler:{type:"string"},infotext:{type:"string"},n_iter:{type:"integer"},negative_prompt:{type:"string"},override_settings:{additionalProperties:{type:"string"},type:"object"},override_settings_restore_afterwards:{type:"boolean"},prompt:{type:"string"},refiner_checkpoint:{type:"string"},refiner_switch_at:{type:"number"},restore_faces:{type:"boolean"},s_churn:{type:"number"},s_min_uncond:{type:"number"},s_noise:{type:"number"},s_tmax:{type:"number"},s_tmin:{type:"number"},sampler_index:{type:"string"},sampler_name:{type:"string"},save_images:{type:"boolean"},scheduler:{type:"string"},script_args:{items:{type:"string"},type:"array"},script_name:{type:"string"},seed:{type:"integer"},seed_resize_from_h:{type:"integer"},seed_resize_from_w:{type:"integer"},send_images:{type:"boolean"},steps:{type:"integer"},styles:{items:{type:"string"},type:"array"},subseed:{type:"integer"},subseed_strength:{type:"number"},tiling:{type:"boolean"},width:{type:"integer"}},type:"object"}],description:"Text to image parameters"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) specific parameters"},error:{description:"Error that arose during prompt execution, if any.",type:"string"},id:{description:"Id is the unique ID of the prompt.",type:"string"},lastRun:{description:"LastRun is the time of the last prompt run.",type:"string"},maxRetries:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"},modelId:{description:"ModelId is just the 1Backend internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"},parameters:{allOf:[{properties:{textToImage:{properties:{aspectRatio:{description:'Alternative way to specify dimensions (e.g., "16:9", "1:1").',type:"string"},batchSize:{description:"Number of images to generate per batch.",type:"integer"},denoisingStrength:{description:"Controls how much variation is introduced in image modifications.",type:"number"},enableUpscaling:{description:"Whether to apply AI-based upscaling.",type:"boolean"},format:{description:"Output format for the generated image (png, jpg, webp, etc.).",type:"string"},guidanceScale:{description:"How closely the output should follow the prompt.",type:"number"},height:{type:"integer"},negativePrompt:{description:"A negative prompt to specify what should be avoided in the image.",type:"string"},numIterations:{description:"Number of batches to generate.",type:"integer"},prompt:{description:"The primary prompt for generating the image.\nDefaults to the top-level prompt if not specified.\nIf both are provided (which should be avoided), this field takes precedence.",type:"string"},qualityPreset:{description:"Preset quality settings (e.g., Low, Medium, High, Ultra).",type:"string"},restoreFaces:{description:"Whether to enhance facial details for portraits.",type:"boolean"},scheduler:{description:"Specifies the sampling method used during generation.",type:"string"},seed:{description:"Optional seed for reproducibility. If not set, a random seed is used.",type:"integer"},steps:{description:"Number of inference steps for image generation.",type:"integer"},styles:{description:"List of artistic styles or themes to apply.",items:{type:"string"},type:"array"},width:{description:"Image dimensions (width and height in pixels).",type:"integer"}},type:"object"},textToText:{properties:{template:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}},type:"object"}},type:"object"}],description:"AI engine/platform (eg. LlamaCpp, Stable Diffusion) agnostic parameters.\nUse these high level parameters when you don't care about the actual engine, only\nthe functionality (eg. text to image, image to image) it provides."},prompt:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"},requestMessageId:{type:"string"},responseMessageId:{type:"string"},runCount:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"},status:{allOf:[{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}],description:"Status of the prompt."},sync:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"},threadId:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"},type:{allOf:[{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]}],description:'Type is inferred from the `Parameters` or `EngineParameters` field.\nEg. A LLamaCpp prompt will be "Text-to-Text",\na Stabel Diffusion one will be "Text-to-Image" etc.'},updatedAt:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"},userId:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}},required:["prompt"],type:"object"}],description:"Prompt contains the details of the prompt that was just created by this request.\nThis includes the ID, prompt text, status, and other associated metadata."},responseMessage:{allOf:[{properties:{createdAt:{type:"string"},fileIds:{description:"FileIds defines the file attachments the message has.",items:{type:"string"},type:"array"},id:{example:"msg_emSOPlW58o",type:"string"},meta:{additionalProperties:!0,type:"object"},text:{description:'Text content of the message eg. "Hi, what\'s up?"',type:"string"},threadId:{description:"ThreadId of the message.",example:"thr_emSOeEUWAg",type:"string"},updatedAt:{type:"string"},userId:{description:"UserId is the id of the user who wrote the message.\nFor AI messages this field is empty.",type:"string"}},required:["id","threadId"],type:"object"}],description:"Response message contains the response text and files.\nThis field is populated only for synchronous prompts (`sync = true`).\nFor asynchronous prompts, the response will provided in the associated\nmessage identified by the `responseMessageId` of the `promptSvc.prompt` object once the prompt completes."}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function P(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}}}]);
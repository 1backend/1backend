"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3973],{10471:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>g,contentTitle:()=>b,default:()=>O,frontMatter:()=>y,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"1backend/list-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","source":"@site/docs/1backend/list-users.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-users","permalink":"/docs/1backend/list-users","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","sidebar_label":"List Users","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Save User","permalink":"/docs/1backend/save-user"}}');var r=s(74848),n=s(28453),a=s(53746),o=s.n(a),l=s(56518),d=s.n(l),p=s(99972),c=s.n(p),u=s(25342),f=s.n(u),h=(s(44215),s(82223),s(24861));const y={id:"list-users",title:"List Users",description:"Fetches a list of users with optional query filters and pagination.",sidebar_label:"List Users",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},b=void 0,g={},m=[];function v(e){const t={code:"code",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List Users"}),"\n",(0,r.jsx)(o(),{method:"post",path:"/user-svc/users",context:"endpoint"}),"\n",(0,r.jsxs)(t.p,{children:["Fetches a list of users with optional query filters and pagination.\nRequires the ",(0,r.jsx)(t.code,{children:"user-svc:user:view"})," permission that only admins have by default."]}),"\n",(0,r.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(d(),{parameters:void 0}),"\n",(0,r.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{contactId:{type:"string"},query:{allOf:[{properties:{count:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"},filters:{description:"Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.",items:{properties:{fields:{items:{type:"string"},type:"array"},jsonValues:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"},op:{enum:["or","equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpOr","OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]},subFilters:{description:"SubFilters is used for operations like OR where multiple filters are combined.",items:"circular()",type:"array"}},type:"object"},type:"array"},jsonAfter:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON-encoded string due to limitations in Swaggo (e.g., []interface{} gets converted to []map[string]interface{}).\nThere is no way to specify a type that results in an any/interface{} type in the `go -> openapi -> go` generation process.\nAs a result, JSONAfter is a JSON-marshalled string representing an array, e.g., `[42]`.",type:"string"},limit:{description:"Limit the number of records in the result set.",type:"integer"},orderBys:{description:"OrderBys order the result set.",items:{properties:{desc:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"},field:{description:"The field by which to order the results",type:"string"},randomize:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"},sortingType:{allOf:[{enum:["","numeric","text","date"],type:"string","x-enum-varnames":["SortingTypeDefault","SortingTypeNumeric","SortingTypeText","SortingTypeDate"]}],description:"Defines the type of sorting to apply (numeric, text, date, etc.)"}},type:"object"},type:"array"}},type:"object"}],description:"This should be used sparingly or not at all. Might deprecate."},userId:{type:"string"}},type:"object"}}},description:"List Users Request"}}),"\n",(0,r.jsx)(f(),{id:void 0,label:void 0,responses:{200:{description:"List of users retrieved successfully",content:{"application/json":{schema:{properties:{after:{type:"string"},count:{type:"integer"},users:{items:{properties:{contactIds:{items:{type:"string"},type:"array"},createdAt:{type:"string"},id:{type:"string"},name:{description:"Full name of the user.",example:"Jane Doe",type:"string"},roles:{items:{type:"string"},type:"array"},slug:{description:"URL-friendly unique (inside the 1Backend platform) identifier for the `user`.",example:"jane-doe",type:"string"},updatedAt:{type:"string"}},required:["id","slug"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function O(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(v,{...e})}):v(e)}}}]);
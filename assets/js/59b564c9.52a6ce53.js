"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[5248],{19241:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"built-in-services/chat-svc","title":"Chat Svc","description":"The Chat Svc manages conversational threads and messages, serving as the primary interface for AI-powered chat applications and user interactions with LLM systems.","source":"@site/docs/built-in-services/chat-svc.md","sourceDirName":"built-in-services","slug":"/built-in-services/chat-svc","permalink":"/docs/built-in-services/chat-svc","draft":false,"unlisted":false,"editUrl":"https://github.com/1backend/1backend/tree/main/docs-source/docs/built-in-services/chat-svc.md","tags":[{"inline":true,"label":"chat-svc","permalink":"/docs/tags/chat-svc"},{"inline":true,"label":"chats","permalink":"/docs/tags/chats"},{"inline":true,"label":"threads","permalink":"/docs/tags/threads"},{"inline":true,"label":"messages","permalink":"/docs/tags/messages"},{"inline":true,"label":"services","permalink":"/docs/tags/services"},{"inline":true,"label":"ai","permalink":"/docs/tags/ai"},{"inline":true,"label":"real-time","permalink":"/docs/tags/real-time"},{"inline":true,"label":"streaming","permalink":"/docs/tags/streaming"}],"version":"current","sidebarPosition":120,"frontMatter":{"sidebar_position":120,"tags":["chat-svc","chats","threads","messages","services","ai","real-time","streaming"]},"sidebar":"tutorialSidebar","previous":{"title":"Container Svc","permalink":"/docs/built-in-services/container-svc"},"next":{"title":"Data Svc","permalink":"/docs/built-in-services/data-svc"}}');var r=n(74848),t=n(28453);const a={sidebar_position:120,tags:["chat-svc","chats","threads","messages","services","ai","real-time","streaming"]},l="Chat Svc",c={},d=[{value:"Architecture &amp; Design",id:"architecture--design",level:2},{value:"Core Concepts",id:"core-concepts",level:3},{value:"Threads",id:"threads",level:4},{value:"Messages",id:"messages",level:4},{value:"Topics",id:"topics",level:4},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"Thread Management",id:"thread-management",level:3},{value:"Create/Update Thread",id:"createupdate-thread",level:4},{value:"List Threads",id:"list-threads",level:4},{value:"Delete Thread",id:"delete-thread",level:4},{value:"Message Management",id:"message-management",level:3},{value:"Add Message",id:"add-message",level:4},{value:"List Messages",id:"list-messages",level:4},{value:"Delete Message",id:"delete-message",level:4},{value:"Events Endpoint",id:"events-endpoint",level:3},{value:"Real-Time Features",id:"real-time-features",level:2},{value:"Event Types",id:"event-types",level:3},{value:"Thread Events",id:"thread-events",level:4},{value:"Message Events",id:"message-events",level:4},{value:"Event Structure",id:"event-structure",level:3},{value:"AI Integration",id:"ai-integration",level:2},{value:"Prompt Svc Integration",id:"prompt-svc-integration",level:3},{value:"AI Message Flow",id:"ai-message-flow",level:3},{value:"Streaming AI Responses",id:"streaming-ai-responses",level:3},{value:"File Attachments",id:"file-attachments",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Creating a Chat Application",id:"creating-a-chat-application",level:3},{value:"1. Start a New Conversation",id:"1-start-a-new-conversation",level:4},{value:"2. Send User Message",id:"2-send-user-message",level:4},{value:"3. List Conversation History",id:"3-list-conversation-history",level:4},{value:"Multi-User Conversations",id:"multi-user-conversations",level:3},{value:"AI Assistant Integration",id:"ai-assistant-integration",level:3},{value:"Topic-Based Organization",id:"topic-based-organization",level:3},{value:"Access Control",id:"access-control",level:2},{value:"Thread Permissions",id:"thread-permissions",level:3},{value:"Message Permissions",id:"message-permissions",level:3},{value:"Default Access",id:"default-access",level:3},{value:"User-Based Filtering",id:"user-based-filtering",level:3},{value:"Data Models",id:"data-models",level:2},{value:"Thread Structure",id:"thread-structure",level:3},{value:"Message Structure",id:"message-structure",level:3},{value:"AI Messages",id:"ai-messages",level:3},{value:"Integration Patterns",id:"integration-patterns",level:2},{value:"Frontend Applications",id:"frontend-applications",level:3},{value:"Backend Services",id:"backend-services",level:3},{value:"Mobile Applications",id:"mobile-applications",level:3},{value:"Performance &amp; Scalability",id:"performance--scalability",level:2},{value:"Optimizations",id:"optimizations",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Related Services",id:"related-services",level:2}];function h(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"chat-svc",children:"Chat Svc"})}),"\n",(0,r.jsx)(s.p,{children:"The Chat Svc manages conversational threads and messages, serving as the primary interface for AI-powered chat applications and user interactions with LLM systems."}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:["This page provides a comprehensive overview of ",(0,r.jsx)(s.code,{children:"Chat Svc"}),". For detailed API information, refer to the ",(0,r.jsx)(s.a,{href:"/docs/1backend-api/save-message",children:"Chat Svc API documentation"}),"."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"architecture--design",children:"Architecture & Design"}),"\n",(0,r.jsxs)(s.p,{children:["The Chat Svc follows a ",(0,r.jsx)(s.strong,{children:"thread-based conversation model"})," where:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Threads"})," represent conversation sessions or topics"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Messages"})," are individual pieces of content within threads"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Users"})," can participate in multiple threads"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"AI responses"})," are seamlessly integrated via message creation"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,r.jsx)(s.h4,{id:"threads",children:"Threads"}),"\n",(0,r.jsx)(s.p,{children:"Conversation containers that group related messages together. Think of them as chat rooms or conversation sessions."}),"\n",(0,r.jsx)(s.h4,{id:"messages",children:"Messages"}),"\n",(0,r.jsx)(s.p,{children:"Individual pieces of content within threads, supporting:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Text content"}),"\n",(0,r.jsx)(s.li,{children:"File attachments"}),"\n",(0,r.jsx)(s.li,{children:"Metadata for extensibility"}),"\n",(0,r.jsx)(s.li,{children:"User attribution (or AI-generated content)"}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"topics",children:"Topics"}),"\n",(0,r.jsx)(s.p,{children:"Tag-like categorization system for organizing threads by subject or purpose."}),"\n",(0,r.jsx)(s.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,r.jsx)(s.h3,{id:"thread-management",children:"Thread Management"}),"\n",(0,r.jsx)(s.h4,{id:"createupdate-thread",children:"Create/Update Thread"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"POST /chat-svc/thread\n"})}),"\n",(0,r.jsx)(s.p,{children:"Creates a new thread or updates an existing one."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Request Body:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "id": "thr_abc123",\n  "title": "AI Assistant Conversation",\n  "userIds": ["user_123", "user_456"],\n  "topicIds": ["ai-help", "troubleshooting"]\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Response:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "thread": {\n    "id": "thr_abc123",\n    "title": "AI Assistant Conversation", \n    "userIds": ["user_123", "user_456"],\n    "topicIds": ["ai-help", "troubleshooting"],\n    "createdAt": "2024-01-15T10:30:00Z",\n    "updatedAt": "2024-01-15T10:30:00Z"\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h4,{id:"list-threads",children:"List Threads"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"POST /chat-svc/threads\n"})}),"\n",(0,r.jsx)(s.p,{children:"Retrieves threads accessible to the authenticated user."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Request Body:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "ids": ["thr_abc123", "thr_def456"]\n}\n'})}),"\n",(0,r.jsx)(s.h4,{id:"delete-thread",children:"Delete Thread"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"DELETE /chat-svc/thread/{threadId}\n"})}),"\n",(0,r.jsx)(s.p,{children:"Permanently removes a thread and all its messages."}),"\n",(0,r.jsx)(s.h3,{id:"message-management",children:"Message Management"}),"\n",(0,r.jsx)(s.h4,{id:"add-message",children:"Add Message"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"POST /chat-svc/thread/{threadId}/message\n"})}),"\n",(0,r.jsx)(s.p,{children:"Adds a new message to an existing thread."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Request Body:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "id": "msg_xyz789",\n  "text": "Hello, I need help with my API integration",\n  "userId": "user_123",\n  "fileIds": ["file_attachment1"],\n  "meta": {\n    "priority": "high",\n    "category": "support"\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h4,{id:"list-messages",children:"List Messages"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"POST /chat-svc/messages\n"})}),"\n",(0,r.jsx)(s.p,{children:"Retrieves messages from threads, with optional filtering."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Request Body:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "threadId": "thr_abc123",\n  "ids": ["msg_xyz789"]\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Response:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "messages": [\n    {\n      "id": "msg_xyz789",\n      "threadId": "thr_abc123", \n      "text": "Hello, I need help with my API integration",\n      "userId": "user_123",\n      "fileIds": ["file_attachment1"],\n      "meta": {"priority": "high"},\n      "createdAt": "2024-01-15T10:35:00Z",\n      "updatedAt": "2024-01-15T10:35:00Z"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(s.h4,{id:"delete-message",children:"Delete Message"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"DELETE /chat-svc/message/{messageId}\n"})}),"\n",(0,r.jsx)(s.p,{children:"Removes a specific message from its thread."}),"\n",(0,r.jsx)(s.h3,{id:"events-endpoint",children:"Events Endpoint"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"GET /chat-svc/events\n"})}),"\n",(0,r.jsx)(s.p,{children:"Documentation endpoint showing available real-time events."}),"\n",(0,r.jsx)(s.h2,{id:"real-time-features",children:"Real-Time Features"}),"\n",(0,r.jsx)(s.p,{children:"Chat Svc publishes events through Firehose Svc for real-time applications:"}),"\n",(0,r.jsx)(s.h3,{id:"event-types",children:"Event Types"}),"\n",(0,r.jsx)(s.h4,{id:"thread-events",children:"Thread Events"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chatThreadAdded"})})," - New thread created"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chatThreadUpdate"})})," - Thread modified (title, users, topics)"]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"message-events",children:"Message Events"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chatMessageAdded"})})," - New message posted to thread"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"event-structure",children:"Event Structure"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "name": "chatMessageAdded",\n  "data": {\n    "threadId": "thr_abc123"\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"ai-integration",children:"AI Integration"}),"\n",(0,r.jsx)(s.h3,{id:"prompt-svc-integration",children:"Prompt Svc Integration"}),"\n",(0,r.jsxs)(s.p,{children:["Chat Svc seamlessly integrates with ",(0,r.jsx)(s.a,{href:"/docs/built-in-services/prompt-svc",children:"Prompt Svc"})," for AI-powered conversations:"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"User sends message"})," \u2192 Chat Svc stores user message"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"AI processing"})," \u2192 Prompt Svc processes via LLM"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"AI response"})," \u2192 Chat Svc receives and stores AI message"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Real-time delivery"})," \u2192 Events notify clients of new messages"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"ai-message-flow",children:"AI Message Flow"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant User\n    participant ChatSvc as Chat Svc\n    participant PromptSvc as Prompt Svc\n    participant LLM as AI Model\n    participant FileEvents as Firehose Svc\n    \n    User->>ChatSvc: POST /thread/{id}/message\n    ChatSvc->>FileEvents: Publish messageAdded event\n    \n    Note over PromptSvc: Detects new user message\n    PromptSvc->>LLM: Process user prompt\n    LLM--\x3e>PromptSvc: Stream AI response\n    PromptSvc->>ChatSvc: POST AI response message\n    ChatSvc->>FileEvents: Publish messageAdded event\n    \n    FileEvents--\x3e>User: Real-time AI response\n"})}),"\n",(0,r.jsx)(s.h3,{id:"streaming-ai-responses",children:"Streaming AI Responses"}),"\n",(0,r.jsx)(s.p,{children:"For real-time AI interactions, Chat Svc supports:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Progressive responses"})," via streaming chunks"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Real-time updates"})," as AI generates content"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Completion events"})," when AI finishes responding"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"file-attachments",children:"File Attachments"}),"\n",(0,r.jsxs)(s.p,{children:["Messages support file attachments through integration with ",(0,r.jsx)(s.a,{href:"/docs/built-in-services/file-svc",children:"File Svc"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "text": "Here\'s the document you requested",\n  "fileIds": [\n    "file_document1.pdf",\n    "file_screenshot.png", \n    "file_data.csv"\n  ]\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:"File attachments enable:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Document sharing"})," in conversations"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Image/media"})," support for rich interactions"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"AI analysis"})," of uploaded content"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Persistent storage"})," of conversation assets"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,r.jsx)(s.h3,{id:"creating-a-chat-application",children:"Creating a Chat Application"}),"\n",(0,r.jsx)(s.h4,{id:"1-start-a-new-conversation",children:"1. Start a New Conversation"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Create a thread for AI assistance\ncurl -X POST "http://localhost:11337/chat-svc/thread" \\\n  -H "Authorization: Bearer $TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "title": "AI Code Review",\n    "topicIds": ["development", "code-review"]\n  }\'\n'})}),"\n",(0,r.jsx)(s.h4,{id:"2-send-user-message",children:"2. Send User Message"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Add user message to thread\ncurl -X POST "http://localhost:11337/chat-svc/thread/thr_abc123/message" \\\n  -H "Authorization: Bearer $TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "text": "Can you review this JavaScript function?",\n    "fileIds": ["file_code.js"]\n  }\'\n'})}),"\n",(0,r.jsx)(s.h4,{id:"3-list-conversation-history",children:"3. List Conversation History"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Get all messages in the thread\ncurl -X POST "http://localhost:11337/chat-svc/messages" \\\n  -H "Authorization: Bearer $TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "threadId": "thr_abc123"\n  }\'\n'})}),"\n",(0,r.jsx)(s.h3,{id:"multi-user-conversations",children:"Multi-User Conversations"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Create a team discussion thread\ncurl -X POST "http://localhost:11337/chat-svc/thread" \\\n  -H "Authorization: Bearer $TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "title": "Project Planning Session",\n    "userIds": ["user_alice", "user_bob", "user_charlie"],\n    "topicIds": ["planning", "project-alpha"]\n  }\'\n'})}),"\n",(0,r.jsx)(s.h3,{id:"ai-assistant-integration",children:"AI Assistant Integration"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-javascript",children:"// Subscribe to real-time events for AI responses\nconst eventSource = new EventSource('/firehose-svc/events');\n\neventSource.addEventListener('chatMessageAdded', (event) => {\n  const data = JSON.parse(event.data);\n  \n  // Fetch the new message\n  fetch('/chat-svc/messages', {\n    method: 'POST',\n    headers: { 'Authorization': `Bearer ${token}` },\n    body: JSON.stringify({ \n      threadId: data.threadId \n    })\n  })\n  .then(response => response.json())\n  .then(messages => {\n    // Update UI with new message\n    displayNewMessage(messages.messages[0]);\n  });\n});\n\n// Send message and trigger AI response\nasync function sendMessage(threadId, text) {\n  // Add user message\n  await fetch(`/chat-svc/thread/${threadId}/message`, {\n    method: 'POST',\n    headers: { 'Authorization': `Bearer ${token}` },\n    body: JSON.stringify({ text })\n  });\n  \n  // Trigger AI processing (Prompt Svc will handle automatically)\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"topic-based-organization",children:"Topic-Based Organization"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Create threads with specific topics for organization\ncurl -X POST "http://localhost:11337/chat-svc/thread" \\\n  -H "Authorization: Bearer $TOKEN" \\\n  -d \'{\n    "title": "Bug Reports",\n    "topicIds": ["bugs", "frontend", "urgent"]\n  }\'\n\ncurl -X POST "http://localhost:11337/chat-svc/thread" \\\n  -H "Authorization: Bearer $TOKEN" \\\n  -d \'{\n    "title": "Feature Requests", \n    "topicIds": ["features", "enhancement", "v2.0"]\n  }\'\n'})}),"\n",(0,r.jsx)(s.h2,{id:"access-control",children:"Access Control"}),"\n",(0,r.jsx)(s.p,{children:"Chat Svc uses comprehensive permission-based access control:"}),"\n",(0,r.jsx)(s.h3,{id:"thread-permissions",children:"Thread Permissions"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:thread:create"})})," - Create new threads"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:thread:view"})})," - View thread information"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:thread:edit"})})," - Modify thread properties"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:thread:delete"})})," - Delete threads"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:thread:stream"})})," - Subscribe to thread events"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"message-permissions",children:"Message Permissions"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:message:create"})})," - Add messages to threads"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:message:view"})})," - Read messages"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:message:edit"})})," - Modify messages"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:message:delete"})})," - Remove messages"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"chat-svc:message:stream"})})," - Subscribe to message events"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"default-access",children:"Default Access"}),"\n",(0,r.jsx)(s.p,{children:"By default, permissions are granted to:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Administrators"})," - Full access to all operations"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Regular Users"})," - Access to threads they participate in"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"user-based-filtering",children:"User-Based Filtering"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Users can only see threads where they are listed in ",(0,r.jsx)(s.code,{children:"userIds"})]}),"\n",(0,r.jsx)(s.li,{children:"Message access is controlled by thread membership"}),"\n",(0,r.jsx)(s.li,{children:"Thread creators automatically gain access"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"data-models",children:"Data Models"}),"\n",(0,r.jsx)(s.h3,{id:"thread-structure",children:"Thread Structure"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "id": "thr_emSQnpJbhG",\n  "title": "Conversation Title",\n  "userIds": ["user1", "user2"],\n  "topicIds": ["topic1", "topic2"], \n  "createdAt": "2024-01-15T10:30:00Z",\n  "updatedAt": "2024-01-15T10:30:00Z"\n}\n'})}),"\n",(0,r.jsx)(s.h3,{id:"message-structure",children:"Message Structure"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "id": "msg_emSOPlW58o",\n  "threadId": "thr_emSQnpJbhG",\n  "text": "Message content",\n  "userId": "user_123",\n  "fileIds": ["file1", "file2"],\n  "meta": {\n    "customField": "value",\n    "priority": "high"\n  },\n  "createdAt": "2024-01-15T10:35:00Z",\n  "updatedAt": "2024-01-15T10:35:00Z"\n}\n'})}),"\n",(0,r.jsx)(s.h3,{id:"ai-messages",children:"AI Messages"}),"\n",(0,r.jsx)(s.p,{children:"AI-generated messages have specific characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"userId"})})," is empty (indicates AI origin)"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"meta"})})," contains model information:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "modelId": "huggingface/llama-model",\n  "platformId": "llama-cpp"\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"integration-patterns",children:"Integration Patterns"}),"\n",(0,r.jsx)(s.h3,{id:"frontend-applications",children:"Frontend Applications"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Real-time chat interfaces"})," using WebSocket events"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Progressive AI responses"})," with streaming updates"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"File sharing"})," within conversations"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Thread organization"})," by topics"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"backend-services",children:"Backend Services"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"AI model integration"})," via Prompt Svc"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Automated responses"})," to user messages"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Content analysis"})," of uploaded files"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Conversation analytics"})," and insights"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"mobile-applications",children:"Mobile Applications"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Push notifications"})," for new messages"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Offline message queuing"})," with eventual consistency"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Rich media support"})," for attachments"]}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"Cross-platform synchronization"})}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"performance--scalability",children:"Performance & Scalability"}),"\n",(0,r.jsx)(s.h3,{id:"optimizations",children:"Optimizations"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Pagination"})," for large message lists"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Indexing"})," on threadId and userId for fast queries"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Caching"})," of frequently accessed threads"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Event batching"})," for high-volume scenarios"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Limit message size"})," for optimal performance"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Use topics"})," for efficient thread organization"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Implement pagination"})," for message history"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Subscribe selectively"})," to relevant events only"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(s.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Messages Not Appearing"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Verify thread exists before adding messages"}),"\n",(0,r.jsx)(s.li,{children:"Check user permissions for thread access"}),"\n",(0,r.jsx)(s.li,{children:"Ensure proper event subscription setup"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"AI Responses Not Generated"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Confirm Prompt Svc integration is active"}),"\n",(0,r.jsx)(s.li,{children:"Verify AI model is running and accessible"}),"\n",(0,r.jsx)(s.li,{children:"Check message format matches AI expectations"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Real-time Events Missing"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Validate Firehose Svc connectivity"}),"\n",(0,r.jsx)(s.li,{children:"Ensure proper event subscription to correct thread"}),"\n",(0,r.jsx)(s.li,{children:"Check authentication tokens for event access"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"File Attachments Not Loading"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Verify File Svc integration and file existence"}),"\n",(0,r.jsx)(s.li,{children:"Check file permissions and access rights"}),"\n",(0,r.jsx)(s.li,{children:"Confirm fileIds are valid references"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"related-services",children:"Related Services"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"/docs/built-in-services/prompt-svc",children:"Prompt Svc"})})," - AI conversation processing"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"/docs/built-in-services/file-svc",children:"File Svc"})})," - File attachment management"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Firehose Svc"})," - Real-time event streaming"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"/docs/built-in-services/user-svc",children:"User Svc"})})," - User authentication and authorization"]}),"\n"]})]})}function o(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>l});var i=n(96540);const r={},t=i.createContext(r);function a(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);
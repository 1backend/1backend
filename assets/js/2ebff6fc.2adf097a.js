"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3973],{10471:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>b,contentTitle:()=>m,default:()=>U,frontMatter:()=>g,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"1backend/list-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","source":"@site/docs/1backend/list-users.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-users","permalink":"/docs/1backend/list-users","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","sidebar_label":"List Users","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Read User by Token","permalink":"/docs/1backend/read-user-by-token"}}');var r=i(74848),a=i(28453),n=i(53746),o=i.n(n),p=i(56518),d=i.n(p),l=i(99972),c=i.n(l),u=i(25342),f=i.n(u),y=(i(44215),i(82223),i(24861));const g={id:"list-users",title:"List Users",description:"Fetches a list of users with optional query filters and pagination.",sidebar_label:"List Users",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},m=void 0,b={},h=[];function O(e){const t={p:"p",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"List Users"}),"\n",(0,r.jsx)(o(),{method:"post",path:"/user-svc/users",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"Fetches a list of users with optional query filters and pagination."}),"\n",(0,r.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(d(),{parameters:void 0}),"\n",(0,r.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{contactId:{type:"string"},query:{allOf:[{properties:{count:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"},filters:{description:"Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.",items:{properties:{fields:{items:{type:"string"},type:"array"},jsonValues:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"},op:{enum:["or","equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpOr","OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]},subFilters:{description:"SubFilters is used for operations like OR where multiple filters are combined.",items:"circular()",type:"array"}},type:"object"},type:"array"},jsonAfter:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON-encoded string due to limitations in Swaggo (e.g., []interface{} gets converted to []map[string]interface{}).\nThere is no way to specify a type that results in an any/interface{} type in the `go -> openapi -> go` generation process.\nAs a result, JSONAfter is a JSON-marshalled string representing an array, e.g., `[42]`.",type:"string"},limit:{description:"Limit the number of records in the result set.",type:"integer"},orderBys:{description:"OrderBys order the result set.",items:{properties:{desc:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"},field:{description:"The field by which to order the results",type:"string"},randomize:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"},sortingType:{allOf:[{enum:["","numeric","text","date"],type:"string","x-enum-varnames":["SortingTypeDefault","SortingTypeNumeric","SortingTypeText","SortingTypeDate"]}],description:"Defines the type of sorting to apply (numeric, text, date, etc.)"}},type:"object"},type:"array"}},type:"object"}],description:"This should be used sparingly or not at all. Might deprecate."},userId:{type:"string"}},type:"object"}}},description:"List Users Request"}}),"\n",(0,r.jsx)(f(),{id:void 0,label:void 0,responses:{200:{description:"List of users retrieved successfully",content:{"application/json":{schema:{properties:{after:{type:"string"},count:{type:"integer"},users:{items:{properties:{contactIds:{items:{type:"string"},type:"array"},createdAt:{type:"string"},id:{type:"string"},name:{description:"Full name of the user.",example:"Jane Doe",type:"string"},roleIds:{items:{type:"string"},type:"array"},slug:{description:"URL-friendly unique (inside the 1Backend platform) identifier for the `user`.",example:"jane-doe",type:"string"},updatedAt:{type:"string"}},required:["id","slug"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function U(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(O,{...e})}):O(e)}}}]);
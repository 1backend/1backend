"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2374],{44311:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>u,default:()=>A,frontMatter:()=>g,metadata:()=>n,toc:()=>T});const n=JSON.parse('{"id":"1backend-api/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend-api/list-platforms.api.mdx","sourceDirName":"1backend-api","slug":"/1backend-api/list-platforms","permalink":"/docs/1backend-api/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend-api/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend-api/list-models"},"next":{"title":"Check","permalink":"/docs/1backend-api/check"}}');var o=i(74848),r=i(28453),s=i(57742),a=i.n(s),p=i(78178),c=i.n(p),l=i(19624),d=i.n(l),m=i(96226),h=i.n(m),f=(i(77675),i(19365),i(51107));const g={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/1backend-api/1-backend",custom_edit_url:null},u=void 0,y={},T=[];function x(e){const t={code:"code",p:"p",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,o.jsx)(a(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,o.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,o.jsxs)(t.p,{children:["Requires ",(0,o.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,o.jsx)(c(),{parameters:void 0}),"\n",(0,o.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,o.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function A(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}}}]);
"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3215],{31542:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>g,default:()=>I,frontMatter:()=>f,metadata:()=>o,toc:()=>T});const o=JSON.parse('{"id":"1backend/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/1backend/list-platforms.api.mdx","sourceDirName":"1backend","slug":"/1backend/list-platforms","permalink":"/docs/1backend/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/1backend/1-backend","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/1backend/list-models"},"next":{"title":"Check","permalink":"/docs/1backend/check"}}');var s=i(74848),n=i(28453),r=i(53746),a=i.n(r),p=i(56518),c=i.n(p),l=i(99972),d=i.n(l),m=i(25342),u=i.n(m),h=(i(44215),i(82223),i(24861));const f={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"eJztWN9v47gR/lcIPnUBWU42PRQw0KK+OLcwNnvJxUkeug5wNDWWuKFIHkkp8QX+34uhJEuylGzQh7YP+5JY5PCbH/yGM+QLTcBxK4wXWtEZvQFvBZTgCCNSOE/0lsyXxEjmt9rmLiYXaUwuJcvZuTERWXm2kbAQ223hhFYEPI/Xaq1u4I9CWHDk91wnICeu5LMGZFYKePqdGLC5cLgqphHVBixDI5YJnVFUfd3opBG14IxWDhydvdCPJyf4r2/41WcaUa6VB+VxlhkjBQ+I028ORV6o4xnkDH8Zi/q8qAAP3uGH8FD96MswyzPhgfvCwsg0L5IAzKS82tLZ18G8Vp4JBfYtIVAls27o24UqhdUqB+VJyazAkDviNdkAMcw5SPDDZ0AOashfIE7jiKzp4uJ+eX6x+juTck0/YKhf8fARdkPVn2FHhAvYMGIFUSwHxPQ7A3RGnbdCpXQf0ZLJAoZ49zj8JmJYOAK5P4zozTfgnrYDzFq2w2+RsxRuIccNHVHezJCtthgq523BvVDpUewCzOuuPQKYkV26rNOlxTHMZ+gp88RlupAJct6hGONWO0csOM+sd2/sCmIMdV0znzVRZBunZeEhqCNCOZHAkUPoL45stUzAvteigeMWWHKl5AhNbuoZIlSCWQeOPGXgM6j0YsTQXASYaCV3HfiN1hKYet8GG239UPtSebCKSYLTBJ6NxpTY7PpR6OgUykMKdkznQ3QEfn6IItdqK9KiOqaIBaRSyLzzu8WcFI6lEKOReBbcY1i1urbAhRPV8XNEFyhBIl9MIxO2yYGElpMBuaywMKKo1mlZvsLZeK0m5COZ/IPcOSBrmrNv2sa5UNquaXsknH6MP67pBxQ+GxWODfM8O14Sn6zph5EgYsS2rJD+vHV86O+ikum75DUpHBxbRrTtqhzlYqtSqe/q5MXi11+PlTKpVRqSBU1614kzJMfdYj5xBrjYCt7LfMty8GBdRMSW1MVoIyuC1La/u178qBI/qsSPKvH/VCXecTQczp5X6gdGW2k1+XR916W4i8d9FAl6NAg20m90AgfeoJ+xOjeeBKlqpzEK8yUBlQoFxBUGw9TnHKgip7OvdInMn9zCs594Hf7TiN4LVzBJfivABf/myj1BsCaiC82LkL+jsw1QgKVRDT82cC8S0DSid4prlQhEYpKEafIJVH2D6EA2C/4FVk9Wmfa18LlkzuGZ3SxoBa5CyMkCsNnvo50tusa0X+QXYHgvIBfP3rJm1WfYGS3UOFQdtPF4WKacbCxbFXnOrPiz61rf2V+ElJMvzD128FcGgGedgXmRCIzEvPA6Z15wUomQG+A6VaLGCmJ9+UToYbxuQKitthzCtl4Cs6oy/kZvtBccL22fLDMZ+cJ4how6yDwcnxkRfZ4gtSYls8hnhxy7DgS93RlYVsf1s7/VddTauYp0TRS7QWxlGvK9LVUpaBh3rP31iYZh7USPnEGqt1vHKocAyEWkYlg7iPxQrmJsl2XHOgJVB6aPjdZM7hG5FWko/ZauwR59J+49srfjx7Tvq3klopgJdSIcm3VIiOOJhujt+CFFqjX9BOmKJUKPr0+EfmPfernTSZ2ORJtE7WBIpzqb2mQaKX9l2w5/v5IdLw8FPLzdJJiG7dPIw7AIovBfT06HVeZOscJn2oo/IfnPn2XAWm1HittIOcaxn8aehQ5FfwW2BEsuAuZ/x6R9RB3wwgq/Cx3+z8As2HmBrdrXB+wYPEvDYfcF38jIquQY5Rx8pvERzGiHmVT1dnR6eEibms7LmAt+uaCgsBIFp1JzJjPt/Oz09Ozsb6E5aSxZoWeVM117Bk3wzuCdsBJZU+wJpX6q+iVGnGEcCFN4o3gERRivGEO2Vuehk7hzYNEhcqlToQioJBwcoZ1A/AxYArgRVQODZSnwpcmWhpRGfIaKlZgzh5sRDzsHORPosWMS3D+dUGkhmbdaxVznHezrJVlV/QyN6iBl3pvZdHq6YfwRVIILptXVrBuF+XKimBclkFxg5wu2FBzc4TkU3ZGCg3KhCWv0fbq+JOVZfNLT5mbT6dPTU5yqItY2ndbr3JSlRk7O4pM487kMCQk2d1fbVaWtNdY9sTQFGws9DSJTjJPwEkVOf64coZ30pyfxT/FZ1RA7nzPVsTH0gd0X1p7jL21+/O9ehGsKeHj2yHih0JMQz+a+85UeoDBPukcVsh8FXl42zMGdlfs9Dv9RgMVkfMCrZ3WVDLkYNYTENApXXDrnHAwSpr6jDs+JfTdZr69WtzSirM6mlr+IFjU/EL6ZUrsO+DH/Kxvw7z56ZcnLS5Ud+/1Bvpp6dcUh6SppjOjDfr//N8plc0g=",sidebar_class_name:"post api-method",info_path:"docs/1backend/1-backend",custom_edit_url:null},g=void 0,y={},T=[];function P(e){const t={code:"code",p:"p",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,s.jsx)(a(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,s.jsxs)(t.p,{children:["Requires ",(0,s.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,s.jsx)(c(),{parameters:void 0}),"\n",(0,s.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,s.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{properties:{key:{description:"Key is the environment variable name.",type:"string"},value:{description:"Value is the environment variable value.",type:"string"}},type:"object"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{properties:{path:{description:"Path is the absolute path inside the container for the folder that should persist across restarts.",type:"string"},readOnly:{description:"ReadOnly indicates whether the keep is read-only.",type:"boolean"}},type:"object"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function I(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(P,{...e})}):P(e)}}}]);